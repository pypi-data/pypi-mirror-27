# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkRandomImageSourcePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkRandomImageSourcePython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkRandomImageSourcePython')
    _itkRandomImageSourcePython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkRandomImageSourcePython', [dirname(__file__)])
        except ImportError:
            import _itkRandomImageSourcePython
            return _itkRandomImageSourcePython
        try:
            _mod = imp.load_module('_itkRandomImageSourcePython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkRandomImageSourcePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkRandomImageSourcePython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageSourcePython
import ITKCommonBasePython
import pyBasePython
import itkImageSourceCommonPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkRGBPixelPython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkPointPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkVectorImagePython
import itkVariableLengthVectorPython

def itkRandomImageSourceIF3_New():
  return itkRandomImageSourceIF3.New()


def itkRandomImageSourceIF2_New():
  return itkRandomImageSourceIF2.New()


def itkRandomImageSourceIUC3_New():
  return itkRandomImageSourceIUC3.New()


def itkRandomImageSourceIUC2_New():
  return itkRandomImageSourceIUC2.New()


def itkRandomImageSourceISS3_New():
  return itkRandomImageSourceISS3.New()


def itkRandomImageSourceISS2_New():
  return itkRandomImageSourceISS2.New()

class itkRandomImageSourceIF2(itkImageSourcePython.itkImageSourceIF2):
    """


    Generate an n-dimensional image of random pixel values.

    RandomImageSource generates an image of random pixel values. This
    filter uses an inline random number generator since the library
    drand48, although thread- safe, is very slow in a threaded
    environment. The output image may be of any dimension. NOTE: To
    produce deterministic results, set the number of threads to 1.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/RandomImageSour
    ce Produce an image of noise

    C++ includes: itkRandomImageSource.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRandomImageSourceIF2_Pointer":
        """__New_orig__() -> itkRandomImageSourceIF2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRandomImageSourceIF2_Pointer":
        """Clone(itkRandomImageSourceIF2 self) -> itkRandomImageSourceIF2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkRandomImageSourceIF2 self, itkSize2 _arg)
        SetSize(itkRandomImageSourceIF2 self, unsigned long long * sizeArray)

        Set/Get size of the output
        image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSize(self, *args)


    def GetSize(self) -> "unsigned long long const *":
        """GetSize(itkRandomImageSourceIF2 self) -> unsigned long long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkRandomImageSourceIF2 self, itkVectorD2 _arg)
        SetSpacing(itkRandomImageSourceIF2 self, double * spacingArray)

        Set/Get spacing of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkRandomImageSourceIF2 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkRandomImageSourceIF2 self, itkPointD2 _arg)
        SetOrigin(itkRandomImageSourceIF2 self, double * originArray)

        Set/Get origin of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkRandomImageSourceIF2 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD22') -> "void":
        """SetDirection(itkRandomImageSourceIF2 self, itkMatrixD22 _arg)"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD22":
        """GetDirection(itkRandomImageSourceIF2 self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetDirection(self)


    def SetMin(self, _arg: 'float') -> "void":
        """
        SetMin(itkRandomImageSourceIF2 self, float _arg)

        Set the minimum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::min(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMin(self, _arg)


    def GetMin(self) -> "float":
        """
        GetMin(itkRandomImageSourceIF2 self) -> float

        Get the minimum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMin(self)


    def SetMax(self, _arg: 'float') -> "void":
        """
        SetMax(itkRandomImageSourceIF2 self, float _arg)

        Set the maximum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::max(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMax(self, _arg)


    def GetMax(self) -> "float":
        """
        GetMax(itkRandomImageSourceIF2 self) -> float

        Get the maximum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMax(self)

    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF2

    def cast(obj: 'itkLightObject') -> "itkRandomImageSourceIF2 *":
        """cast(itkLightObject obj) -> itkRandomImageSourceIF2"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkRandomImageSourceIF2 *":
        """GetPointer(itkRandomImageSourceIF2 self) -> itkRandomImageSourceIF2"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF2

        Create a new object of the class itkRandomImageSourceIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRandomImageSourceIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRandomImageSourceIF2.Clone = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_Clone, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.SetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSize, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.GetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSize, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.SetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSpacing, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.GetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSpacing, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.SetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetOrigin, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.GetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetOrigin, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.SetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetDirection, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.GetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetDirection, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.SetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMin, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.GetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMin, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.SetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMax, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.GetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMax, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2.GetPointer = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetPointer, None, itkRandomImageSourceIF2)
itkRandomImageSourceIF2_swigregister = _itkRandomImageSourcePython.itkRandomImageSourceIF2_swigregister
itkRandomImageSourceIF2_swigregister(itkRandomImageSourceIF2)

def itkRandomImageSourceIF2___New_orig__() -> "itkRandomImageSourceIF2_Pointer":
    """itkRandomImageSourceIF2___New_orig__() -> itkRandomImageSourceIF2_Pointer"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIF2___New_orig__()

def itkRandomImageSourceIF2_cast(obj: 'itkLightObject') -> "itkRandomImageSourceIF2 *":
    """itkRandomImageSourceIF2_cast(itkLightObject obj) -> itkRandomImageSourceIF2"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIF2_cast(obj)

class itkRandomImageSourceIF3(itkImageSourcePython.itkImageSourceIF3):
    """


    Generate an n-dimensional image of random pixel values.

    RandomImageSource generates an image of random pixel values. This
    filter uses an inline random number generator since the library
    drand48, although thread- safe, is very slow in a threaded
    environment. The output image may be of any dimension. NOTE: To
    produce deterministic results, set the number of threads to 1.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/RandomImageSour
    ce Produce an image of noise

    C++ includes: itkRandomImageSource.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRandomImageSourceIF3_Pointer":
        """__New_orig__() -> itkRandomImageSourceIF3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRandomImageSourceIF3_Pointer":
        """Clone(itkRandomImageSourceIF3 self) -> itkRandomImageSourceIF3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkRandomImageSourceIF3 self, itkSize3 _arg)
        SetSize(itkRandomImageSourceIF3 self, unsigned long long * sizeArray)

        Set/Get size of the output
        image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSize(self, *args)


    def GetSize(self) -> "unsigned long long const *":
        """GetSize(itkRandomImageSourceIF3 self) -> unsigned long long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkRandomImageSourceIF3 self, itkVectorD3 _arg)
        SetSpacing(itkRandomImageSourceIF3 self, double * spacingArray)

        Set/Get spacing of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkRandomImageSourceIF3 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkRandomImageSourceIF3 self, itkPointD3 _arg)
        SetOrigin(itkRandomImageSourceIF3 self, double * originArray)

        Set/Get origin of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkRandomImageSourceIF3 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD33') -> "void":
        """SetDirection(itkRandomImageSourceIF3 self, itkMatrixD33 _arg)"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD33":
        """GetDirection(itkRandomImageSourceIF3 self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetDirection(self)


    def SetMin(self, _arg: 'float') -> "void":
        """
        SetMin(itkRandomImageSourceIF3 self, float _arg)

        Set the minimum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::min(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMin(self, _arg)


    def GetMin(self) -> "float":
        """
        GetMin(itkRandomImageSourceIF3 self) -> float

        Get the minimum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMin(self)


    def SetMax(self, _arg: 'float') -> "void":
        """
        SetMax(itkRandomImageSourceIF3 self, float _arg)

        Set the maximum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::max(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMax(self, _arg)


    def GetMax(self) -> "float":
        """
        GetMax(itkRandomImageSourceIF3 self) -> float

        Get the maximum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMax(self)

    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF3

    def cast(obj: 'itkLightObject') -> "itkRandomImageSourceIF3 *":
        """cast(itkLightObject obj) -> itkRandomImageSourceIF3"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkRandomImageSourceIF3 *":
        """GetPointer(itkRandomImageSourceIF3 self) -> itkRandomImageSourceIF3"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF3

        Create a new object of the class itkRandomImageSourceIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRandomImageSourceIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRandomImageSourceIF3.Clone = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_Clone, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.SetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSize, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.GetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSize, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.SetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSpacing, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.GetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSpacing, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.SetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetOrigin, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.GetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetOrigin, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.SetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetDirection, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.GetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetDirection, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.SetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMin, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.GetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMin, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.SetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMax, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.GetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMax, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3.GetPointer = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetPointer, None, itkRandomImageSourceIF3)
itkRandomImageSourceIF3_swigregister = _itkRandomImageSourcePython.itkRandomImageSourceIF3_swigregister
itkRandomImageSourceIF3_swigregister(itkRandomImageSourceIF3)

def itkRandomImageSourceIF3___New_orig__() -> "itkRandomImageSourceIF3_Pointer":
    """itkRandomImageSourceIF3___New_orig__() -> itkRandomImageSourceIF3_Pointer"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIF3___New_orig__()

def itkRandomImageSourceIF3_cast(obj: 'itkLightObject') -> "itkRandomImageSourceIF3 *":
    """itkRandomImageSourceIF3_cast(itkLightObject obj) -> itkRandomImageSourceIF3"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIF3_cast(obj)

class itkRandomImageSourceISS2(itkImageSourcePython.itkImageSourceISS2):
    """


    Generate an n-dimensional image of random pixel values.

    RandomImageSource generates an image of random pixel values. This
    filter uses an inline random number generator since the library
    drand48, although thread- safe, is very slow in a threaded
    environment. The output image may be of any dimension. NOTE: To
    produce deterministic results, set the number of threads to 1.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/RandomImageSour
    ce Produce an image of noise

    C++ includes: itkRandomImageSource.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRandomImageSourceISS2_Pointer":
        """__New_orig__() -> itkRandomImageSourceISS2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRandomImageSourceISS2_Pointer":
        """Clone(itkRandomImageSourceISS2 self) -> itkRandomImageSourceISS2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkRandomImageSourceISS2 self, itkSize2 _arg)
        SetSize(itkRandomImageSourceISS2 self, unsigned long long * sizeArray)

        Set/Get size of the output
        image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSize(self, *args)


    def GetSize(self) -> "unsigned long long const *":
        """GetSize(itkRandomImageSourceISS2 self) -> unsigned long long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkRandomImageSourceISS2 self, itkVectorD2 _arg)
        SetSpacing(itkRandomImageSourceISS2 self, double * spacingArray)

        Set/Get spacing of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkRandomImageSourceISS2 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkRandomImageSourceISS2 self, itkPointD2 _arg)
        SetOrigin(itkRandomImageSourceISS2 self, double * originArray)

        Set/Get origin of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkRandomImageSourceISS2 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD22') -> "void":
        """SetDirection(itkRandomImageSourceISS2 self, itkMatrixD22 _arg)"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD22":
        """GetDirection(itkRandomImageSourceISS2 self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetDirection(self)


    def SetMin(self, _arg: 'short') -> "void":
        """
        SetMin(itkRandomImageSourceISS2 self, short _arg)

        Set the minimum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::min(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMin(self, _arg)


    def GetMin(self) -> "short":
        """
        GetMin(itkRandomImageSourceISS2 self) -> short

        Get the minimum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMin(self)


    def SetMax(self, _arg: 'short') -> "void":
        """
        SetMax(itkRandomImageSourceISS2 self, short _arg)

        Set the maximum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::max(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMax(self, _arg)


    def GetMax(self) -> "short":
        """
        GetMax(itkRandomImageSourceISS2 self) -> short

        Get the maximum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMax(self)

    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS2

    def cast(obj: 'itkLightObject') -> "itkRandomImageSourceISS2 *":
        """cast(itkLightObject obj) -> itkRandomImageSourceISS2"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkRandomImageSourceISS2 *":
        """GetPointer(itkRandomImageSourceISS2 self) -> itkRandomImageSourceISS2"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS2

        Create a new object of the class itkRandomImageSourceISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRandomImageSourceISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRandomImageSourceISS2.Clone = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_Clone, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.SetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSize, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.GetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSize, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.SetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSpacing, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.GetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSpacing, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.SetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetOrigin, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.GetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetOrigin, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.SetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetDirection, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.GetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetDirection, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.SetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMin, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.GetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMin, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.SetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMax, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.GetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMax, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2.GetPointer = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetPointer, None, itkRandomImageSourceISS2)
itkRandomImageSourceISS2_swigregister = _itkRandomImageSourcePython.itkRandomImageSourceISS2_swigregister
itkRandomImageSourceISS2_swigregister(itkRandomImageSourceISS2)

def itkRandomImageSourceISS2___New_orig__() -> "itkRandomImageSourceISS2_Pointer":
    """itkRandomImageSourceISS2___New_orig__() -> itkRandomImageSourceISS2_Pointer"""
    return _itkRandomImageSourcePython.itkRandomImageSourceISS2___New_orig__()

def itkRandomImageSourceISS2_cast(obj: 'itkLightObject') -> "itkRandomImageSourceISS2 *":
    """itkRandomImageSourceISS2_cast(itkLightObject obj) -> itkRandomImageSourceISS2"""
    return _itkRandomImageSourcePython.itkRandomImageSourceISS2_cast(obj)

class itkRandomImageSourceISS3(itkImageSourcePython.itkImageSourceISS3):
    """


    Generate an n-dimensional image of random pixel values.

    RandomImageSource generates an image of random pixel values. This
    filter uses an inline random number generator since the library
    drand48, although thread- safe, is very slow in a threaded
    environment. The output image may be of any dimension. NOTE: To
    produce deterministic results, set the number of threads to 1.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/RandomImageSour
    ce Produce an image of noise

    C++ includes: itkRandomImageSource.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRandomImageSourceISS3_Pointer":
        """__New_orig__() -> itkRandomImageSourceISS3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRandomImageSourceISS3_Pointer":
        """Clone(itkRandomImageSourceISS3 self) -> itkRandomImageSourceISS3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkRandomImageSourceISS3 self, itkSize3 _arg)
        SetSize(itkRandomImageSourceISS3 self, unsigned long long * sizeArray)

        Set/Get size of the output
        image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSize(self, *args)


    def GetSize(self) -> "unsigned long long const *":
        """GetSize(itkRandomImageSourceISS3 self) -> unsigned long long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkRandomImageSourceISS3 self, itkVectorD3 _arg)
        SetSpacing(itkRandomImageSourceISS3 self, double * spacingArray)

        Set/Get spacing of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkRandomImageSourceISS3 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkRandomImageSourceISS3 self, itkPointD3 _arg)
        SetOrigin(itkRandomImageSourceISS3 self, double * originArray)

        Set/Get origin of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkRandomImageSourceISS3 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD33') -> "void":
        """SetDirection(itkRandomImageSourceISS3 self, itkMatrixD33 _arg)"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD33":
        """GetDirection(itkRandomImageSourceISS3 self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetDirection(self)


    def SetMin(self, _arg: 'short') -> "void":
        """
        SetMin(itkRandomImageSourceISS3 self, short _arg)

        Set the minimum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::min(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMin(self, _arg)


    def GetMin(self) -> "short":
        """
        GetMin(itkRandomImageSourceISS3 self) -> short

        Get the minimum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMin(self)


    def SetMax(self, _arg: 'short') -> "void":
        """
        SetMax(itkRandomImageSourceISS3 self, short _arg)

        Set the maximum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::max(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMax(self, _arg)


    def GetMax(self) -> "short":
        """
        GetMax(itkRandomImageSourceISS3 self) -> short

        Get the maximum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMax(self)

    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS3

    def cast(obj: 'itkLightObject') -> "itkRandomImageSourceISS3 *":
        """cast(itkLightObject obj) -> itkRandomImageSourceISS3"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkRandomImageSourceISS3 *":
        """GetPointer(itkRandomImageSourceISS3 self) -> itkRandomImageSourceISS3"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS3

        Create a new object of the class itkRandomImageSourceISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRandomImageSourceISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRandomImageSourceISS3.Clone = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_Clone, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.SetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSize, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.GetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSize, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.SetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSpacing, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.GetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSpacing, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.SetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetOrigin, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.GetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetOrigin, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.SetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetDirection, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.GetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetDirection, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.SetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMin, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.GetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMin, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.SetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMax, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.GetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMax, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3.GetPointer = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetPointer, None, itkRandomImageSourceISS3)
itkRandomImageSourceISS3_swigregister = _itkRandomImageSourcePython.itkRandomImageSourceISS3_swigregister
itkRandomImageSourceISS3_swigregister(itkRandomImageSourceISS3)

def itkRandomImageSourceISS3___New_orig__() -> "itkRandomImageSourceISS3_Pointer":
    """itkRandomImageSourceISS3___New_orig__() -> itkRandomImageSourceISS3_Pointer"""
    return _itkRandomImageSourcePython.itkRandomImageSourceISS3___New_orig__()

def itkRandomImageSourceISS3_cast(obj: 'itkLightObject') -> "itkRandomImageSourceISS3 *":
    """itkRandomImageSourceISS3_cast(itkLightObject obj) -> itkRandomImageSourceISS3"""
    return _itkRandomImageSourcePython.itkRandomImageSourceISS3_cast(obj)

class itkRandomImageSourceIUC2(itkImageSourcePython.itkImageSourceIUC2):
    """


    Generate an n-dimensional image of random pixel values.

    RandomImageSource generates an image of random pixel values. This
    filter uses an inline random number generator since the library
    drand48, although thread- safe, is very slow in a threaded
    environment. The output image may be of any dimension. NOTE: To
    produce deterministic results, set the number of threads to 1.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/RandomImageSour
    ce Produce an image of noise

    C++ includes: itkRandomImageSource.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRandomImageSourceIUC2_Pointer":
        """__New_orig__() -> itkRandomImageSourceIUC2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRandomImageSourceIUC2_Pointer":
        """Clone(itkRandomImageSourceIUC2 self) -> itkRandomImageSourceIUC2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkRandomImageSourceIUC2 self, itkSize2 _arg)
        SetSize(itkRandomImageSourceIUC2 self, unsigned long long * sizeArray)

        Set/Get size of the output
        image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSize(self, *args)


    def GetSize(self) -> "unsigned long long const *":
        """GetSize(itkRandomImageSourceIUC2 self) -> unsigned long long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkRandomImageSourceIUC2 self, itkVectorD2 _arg)
        SetSpacing(itkRandomImageSourceIUC2 self, double * spacingArray)

        Set/Get spacing of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkRandomImageSourceIUC2 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkRandomImageSourceIUC2 self, itkPointD2 _arg)
        SetOrigin(itkRandomImageSourceIUC2 self, double * originArray)

        Set/Get origin of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkRandomImageSourceIUC2 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD22') -> "void":
        """SetDirection(itkRandomImageSourceIUC2 self, itkMatrixD22 _arg)"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD22":
        """GetDirection(itkRandomImageSourceIUC2 self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetDirection(self)


    def SetMin(self, _arg: 'unsigned char') -> "void":
        """
        SetMin(itkRandomImageSourceIUC2 self, unsigned char _arg)

        Set the minimum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::min(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMin(self, _arg)


    def GetMin(self) -> "unsigned char":
        """
        GetMin(itkRandomImageSourceIUC2 self) -> unsigned char

        Get the minimum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMin(self)


    def SetMax(self, _arg: 'unsigned char') -> "void":
        """
        SetMax(itkRandomImageSourceIUC2 self, unsigned char _arg)

        Set the maximum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::max(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMax(self, _arg)


    def GetMax(self) -> "unsigned char":
        """
        GetMax(itkRandomImageSourceIUC2 self) -> unsigned char

        Get the maximum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMax(self)

    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC2

    def cast(obj: 'itkLightObject') -> "itkRandomImageSourceIUC2 *":
        """cast(itkLightObject obj) -> itkRandomImageSourceIUC2"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkRandomImageSourceIUC2 *":
        """GetPointer(itkRandomImageSourceIUC2 self) -> itkRandomImageSourceIUC2"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC2

        Create a new object of the class itkRandomImageSourceIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRandomImageSourceIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRandomImageSourceIUC2.Clone = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_Clone, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.SetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSize, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.GetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSize, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.SetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSpacing, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.GetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSpacing, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.SetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetOrigin, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.GetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetOrigin, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.SetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetDirection, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.GetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetDirection, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.SetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMin, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.GetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMin, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.SetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMax, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.GetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMax, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2.GetPointer = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetPointer, None, itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2_swigregister = _itkRandomImageSourcePython.itkRandomImageSourceIUC2_swigregister
itkRandomImageSourceIUC2_swigregister(itkRandomImageSourceIUC2)

def itkRandomImageSourceIUC2___New_orig__() -> "itkRandomImageSourceIUC2_Pointer":
    """itkRandomImageSourceIUC2___New_orig__() -> itkRandomImageSourceIUC2_Pointer"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIUC2___New_orig__()

def itkRandomImageSourceIUC2_cast(obj: 'itkLightObject') -> "itkRandomImageSourceIUC2 *":
    """itkRandomImageSourceIUC2_cast(itkLightObject obj) -> itkRandomImageSourceIUC2"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_cast(obj)

class itkRandomImageSourceIUC3(itkImageSourcePython.itkImageSourceIUC3):
    """


    Generate an n-dimensional image of random pixel values.

    RandomImageSource generates an image of random pixel values. This
    filter uses an inline random number generator since the library
    drand48, although thread- safe, is very slow in a threaded
    environment. The output image may be of any dimension. NOTE: To
    produce deterministic results, set the number of threads to 1.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/SimpleOperations/RandomImageSour
    ce Produce an image of noise

    C++ includes: itkRandomImageSource.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkRandomImageSourceIUC3_Pointer":
        """__New_orig__() -> itkRandomImageSourceIUC3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkRandomImageSourceIUC3_Pointer":
        """Clone(itkRandomImageSourceIUC3 self) -> itkRandomImageSourceIUC3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkRandomImageSourceIUC3 self, itkSize3 _arg)
        SetSize(itkRandomImageSourceIUC3 self, unsigned long long * sizeArray)

        Set/Get size of the output
        image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSize(self, *args)


    def GetSize(self) -> "unsigned long long const *":
        """GetSize(itkRandomImageSourceIUC3 self) -> unsigned long long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkRandomImageSourceIUC3 self, itkVectorD3 _arg)
        SetSpacing(itkRandomImageSourceIUC3 self, double * spacingArray)

        Set/Get spacing of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSpacing(self, *args)


    def GetSpacing(self) -> "double const *":
        """GetSpacing(itkRandomImageSourceIUC3 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkRandomImageSourceIUC3 self, itkPointD3 _arg)
        SetOrigin(itkRandomImageSourceIUC3 self, double * originArray)

        Set/Get origin of the
        output image 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetOrigin(self, *args)


    def GetOrigin(self) -> "double const *":
        """GetOrigin(itkRandomImageSourceIUC3 self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD33') -> "void":
        """SetDirection(itkRandomImageSourceIUC3 self, itkMatrixD33 _arg)"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD33":
        """GetDirection(itkRandomImageSourceIUC3 self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetDirection(self)


    def SetMin(self, _arg: 'unsigned char') -> "void":
        """
        SetMin(itkRandomImageSourceIUC3 self, unsigned char _arg)

        Set the minimum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::min(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMin(self, _arg)


    def GetMin(self) -> "unsigned char":
        """
        GetMin(itkRandomImageSourceIUC3 self) -> unsigned char

        Get the minimum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMin(self)


    def SetMax(self, _arg: 'unsigned char') -> "void":
        """
        SetMax(itkRandomImageSourceIUC3 self, unsigned char _arg)

        Set the maximum possible
        pixel value. By default, it is
        NumericTraits<TOutputImage::PixelType>::max(). 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMax(self, _arg)


    def GetMax(self) -> "unsigned char":
        """
        GetMax(itkRandomImageSourceIUC3 self) -> unsigned char

        Get the maximum possible
        pixel value. 
        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMax(self)

    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC3

    def cast(obj: 'itkLightObject') -> "itkRandomImageSourceIUC3 *":
        """cast(itkLightObject obj) -> itkRandomImageSourceIUC3"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkRandomImageSourceIUC3 *":
        """GetPointer(itkRandomImageSourceIUC3 self) -> itkRandomImageSourceIUC3"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC3

        Create a new object of the class itkRandomImageSourceIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRandomImageSourceIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRandomImageSourceIUC3.Clone = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_Clone, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.SetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSize, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.GetSize = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSize, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.SetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSpacing, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.GetSpacing = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSpacing, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.SetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetOrigin, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.GetOrigin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetOrigin, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.SetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetDirection, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.GetDirection = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetDirection, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.SetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMin, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.GetMin = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMin, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.SetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMax, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.GetMax = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMax, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3.GetPointer = new_instancemethod(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetPointer, None, itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3_swigregister = _itkRandomImageSourcePython.itkRandomImageSourceIUC3_swigregister
itkRandomImageSourceIUC3_swigregister(itkRandomImageSourceIUC3)

def itkRandomImageSourceIUC3___New_orig__() -> "itkRandomImageSourceIUC3_Pointer":
    """itkRandomImageSourceIUC3___New_orig__() -> itkRandomImageSourceIUC3_Pointer"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIUC3___New_orig__()

def itkRandomImageSourceIUC3_cast(obj: 'itkLightObject') -> "itkRandomImageSourceIUC3 *":
    """itkRandomImageSourceIUC3_cast(itkLightObject obj) -> itkRandomImageSourceIUC3"""
    return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_cast(obj)



