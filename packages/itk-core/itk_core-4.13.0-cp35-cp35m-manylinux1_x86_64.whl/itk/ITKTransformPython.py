# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _ITKTransformPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_ITKTransformPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_ITKTransformPython')
    _ITKTransformPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKTransformPython', [dirname(__file__)])
        except ImportError:
            import _ITKTransformPython
            return _ITKTransformPython
        try:
            _mod = imp.load_module('_ITKTransformPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _ITKTransformPython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKTransformPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



import ITKPyBasePython
import ITKStatisticsPython
import ITKImageFilterBasePython
import ITKCommonPython
from itkCompositeTransformPython import *
from itkTransformBasePython import *
from itkMatrixOffsetTransformBasePython import *
from itkEuler2DTransformPython import *
from itkEuler3DTransformPython import *
from itkMultiTransformPython import *
from itkVersorTransformPython import *
from itkVersorRigid3DTransformPython import *
from itkSimilarity2DTransformPython import *
from itkSimilarity3DTransformPython import *
from itkAffineTransformPython import *
from itkScalableAffineTransformPython import *
from itkScaleTransformPython import *
from itkKernelTransformPython import *
from itkAzimuthElevationToCartesianTransformPython import *
from itkBSplineBaseTransformPython import *
from itkBSplineTransformPython import *
from itkCenteredAffineTransformPython import *
from itkCenteredEuler3DTransformPython import *
from itkCenteredRigid2DTransformPython import *
from itkCenteredSimilarity2DTransformPython import *
from itkElasticBodyReciprocalSplineKernelTransformPython import *
from itkElasticBodySplineKernelTransformPython import *
from itkFixedCenterOfRotationAffineTransformPython import *
from itkIdentityTransformPython import *
from itkQuaternionRigidTransformPython import *
from itkRigid2DTransformPython import *
from itkRigid3DPerspectiveTransformPython import *
from itkRigid3DTransformPython import *
from itkScaleLogarithmicTransformPython import *
from itkScaleSkewVersor3DTransformPython import *
from itkScaleVersor3DTransformPython import *
from itkThinPlateR2LogRSplineKernelTransformPython import *
from itkThinPlateSplineKernelTransformPython import *
from itkTranslationTransformPython import *
from itkVolumeSplineKernelTransformPython import *




