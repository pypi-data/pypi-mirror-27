.\" Man page generated from reStructuredText.
.
.TH "COMPUTE_CONSOLE-HISTORY_CAPTURE" "1" "Dec 11, 2017" "2.4.13" "OCI CLI Command Reference"
.SH NAME
compute_console-history_capture \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Captures the most recent serial console data (up to a megabyte) for the specified instance.
.sp
The \fICaptureConsoleHistory\fP operation works with the other console history operations as described below.
.INDENT 0.0
.IP 1. 3
Use \fICaptureConsoleHistory\fP to request the capture of up to a megabyte of the most recent console history. This call returns a \fIConsoleHistory\fP object. The object will have a state of REQUESTED. 2. Wait for the capture operation to succeed by polling \fIGetConsoleHistory\fP with the identifier of the console history metadata. The state of the \fIConsoleHistory\fP object will go from REQUESTED to GETTING\-HISTORY and then SUCCEEDED (or FAILED). 3. Use \fIGetConsoleHistoryContent\fP to get the actual console history data (not the metadata). 4. Optionally, use \fIDeleteConsoleHistory\fP to delete the console history metadata and the console history data.
.UNINDENT
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci compute console\-history capture [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.SS \-\-instance\-id [text]
.sp
The OCID of the instance to get the console history from. [required]
.SS \-\-display\-name [text]
.sp
A user\-friendly name. Does not have to be unique, and it\(aqs changeable.
.SS \-\-wait\-for\-state [REQUESTED|GETTING\-HISTORY|SUCCEEDED|FAILED]
.sp
This operation creates, modifies or deletes a resource that has a defined lifecycle state. Specify this option to perform the action and then wait until the resource reaches a given lifecycle state.
.SS \-\-max\-wait\-seconds [integer]
.sp
The maximum time to wait for the resource to reach the lifecycle state defined by \-\-wait\-for\-state. Defaults to 1200 seconds.
.SS \-\-wait\-interval\-seconds [integer]
.sp
Check every \-\-wait\-interval\-seconds to see whether the resource to see if it has reached the lifecycle state defined by \-\-wait\-for\-state. Defaults to 30 seconds.
.SS \-\-from\-json [text]
.sp
Provide input to this command as a JSON document from a file.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used
.SS \-?, \-h, \-\-help
.sp
Show this message and exit.
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2017, Oracle
.\" Generated by docutils manpage writer.
.
