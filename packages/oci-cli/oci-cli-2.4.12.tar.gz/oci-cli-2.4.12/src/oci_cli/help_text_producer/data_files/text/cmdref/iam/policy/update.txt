update
******


Description
===========

Updates the specified policy. You can update the description or the
policy statements themselves.

Policy changes take effect typically within 10 seconds.


Usage
=====

   oci iam policy update [OPTIONS]


Options
=======


--policy-id [text]
------------------

The OCID of the policy. [required]


--description [text]
--------------------

The description you assign to the policy. Does not have to be unique,
and it's changeable.


--statements [text]
-------------------

A JSON array of policy statements written in the policy language. See
How Policies Work and Common Policies. Example: '["statement
1","statement 2"]' (The single quotes are required.)


--version-date [text]
---------------------

The version of the policy. If set to an empty string, when a request
comes in for authorization, the policy will be evaluated according to
the current behavior of the services at that moment. If set to a
particular date (YYYY-MM-DD), the policy will be evaluated according
to the behavior of the services on that date.


--if-match [text]
-----------------

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.


--force
-------

Perform update without prompting for confirmation.


--generate-full-command-json-input
----------------------------------

Prints out a JSON document which represents all possible options that
can be provided to this command.

This JSON document can be saved to a file, modified with the
appropriate option values, and then passed back via the --from-json
option. This provides an alternative to typing options out on the
command line.


--generate-param-json-input [text]
----------------------------------

Complex input, such as arrays and objects, are passed in JSON format.

When passed the name of an option which takes complex input, this will
print out example JSON of what needs to be passed to that option.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used


-?, -h, --help
--------------

Show this message and exit.
