get
***


Description
===========

Gets the metadata and body of an object.

Example:
   oci os object get -ns mynamespace -bn mybucket --name myfile.txt
   --file /Users/me/myfile.txt


Usage
=====

   oci os object get [OPTIONS]


Options
=======


-ns, --namespace [text]
-----------------------

The top-level namespace used for the request. [required]


-bn, --bucket-name [text]
-------------------------

The name of the bucket. [required]


--name [text]
-------------

The name of the object. [required]


--file [filename]
-----------------

The name of the file that will receive the object content, or '-' to
write to STDOUT. [required]


--if-match [text]
-----------------

The entity tag to match.


--if-none-match [text]
----------------------

The entity tag to avoid matching.


--range [text]
--------------

Byte range to fetch. Follows
https://tools.ietf.org/html/rfc7233#section-2.1. Example: bytes=2-10


--multipart-download-threshold [integer range]
----------------------------------------------

Objects larger than this size (in MiB) will be downloaded in multiple
parts. The minimum allowable threshold is 128 MiB.


--part-size [integer range]
---------------------------

Part size (in MiB) to use when downloading an object in multiple
parts. The minimum allowable size is 128 MiB.


--parallel-download-count [integer]
-----------------------------------

The number of parallel operations to perform when downloading an
object in multiple parts. Decreasing this value will make multipart
downloads less resource intensive but they may take longer. Increasing
this value may improve download times, but the download process will
consume more system resources and network bandwidth.


--generate-full-command-json-input
----------------------------------

Prints out a JSON document which represents all possible options that
can be provided to this command.

This JSON document can be saved to a file, modified with the
appropriate option values, and then passed back via the --from-json
option. This provides an alternative to typing options out on the
command line.


--generate-param-json-input [text]
----------------------------------

Complex input, such as arrays and objects, are passed in JSON format.

When passed the name of an option which takes complex input, this will
print out example JSON of what needs to be passed to that option.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used


-?, -h, --help
--------------

Show this message and exit.
