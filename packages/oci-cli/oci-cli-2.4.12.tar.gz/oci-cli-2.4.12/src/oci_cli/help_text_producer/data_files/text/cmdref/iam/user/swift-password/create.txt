create
******


Description
===========

Creates a new Swift password for the specified user. For information
about what Swift passwords are for, see Managing User Credentials.

You must specify a *description* for the Swift password (although it
can be an empty string). It does not have to be unique, and you can
change it anytime with UpdateSwiftPassword.

Every user has permission to create a Swift password for *their own
user ID*. An administrator in your organization does not need to write
a policy to give users this ability. To compare, administrators who
have permission to the tenancy can use this operation to create a
Swift password for any user, including themselves.


Usage
=====

   oci iam user swift-password create [OPTIONS]


Options
=======


--description [text]
--------------------

The description you assign to the Swift password during creation. Does
not have to be unique, and it's changeable. [required]


--user-id [text]
----------------

The OCID of the user. [required]


--generate-full-command-json-input
----------------------------------

Prints out a JSON document which represents all possible options that
can be provided to this command.

This JSON document can be saved to a file, modified with the
appropriate option values, and then passed back via the --from-json
option. This provides an alternative to typing options out on the
command line.


--generate-param-json-input [text]
----------------------------------

Complex input, such as arrays and objects, are passed in JSON format.

When passed the name of an option which takes complex input, this will
print out example JSON of what needs to be passed to that option.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used


-?, -h, --help
--------------

Show this message and exit.
