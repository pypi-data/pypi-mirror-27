create
******


Description
===========

Creates a new security list for the specified VCN. For more
information about security lists, see Security Lists. For information
on the number of rules you can have in a security list, see Service
Limits.

For the purposes of access control, you must provide the OCID of the
compartment where you want the security list to reside. Notice that
the security list doesn't have to be in the same compartment as the
VCN, subnets, or other Networking Service components. If you're not
sure which compartment to use, put the security list in the same
compartment as the VCN. For more information about compartments and
access control, see Overview of the IAM Service. For information about
OCIDs, see Resource Identifiers.

You may optionally specify a *display name* for the security list,
otherwise a default is provided. It does not have to be unique, and
you can change it. Avoid entering confidential information.


Usage
=====

   oci network security-list create [OPTIONS]


Options
=======


--compartment-id, -c [text]
---------------------------

The OCID of the compartment to contain the security list. [required]


--egress-security-rules [complex type]
--------------------------------------

Rules for allowing egress IP packets. [required] This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The --generate-param-json-input option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

Example: '[{"destination": "10.0.2.0/24", "protocol": "6",
"isStateless": true, "tcpOptions": {"destinationPortRange": {"max":
1521, "min": 1521}, "sourcePortRange": {"max": 1521, "min": 1521}}}]'


--ingress-security-rules [complex type]
---------------------------------------

Rules for allowing ingress IP packets. [required] This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The --generate-param-json-input option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

Example: '[{"source": "10.0.2.0/24", "protocol": "6", "isStateless":
true, "tcpOptions": {"destinationPortRange": {"max": 1521, "min":
1521}, "sourcePortRange": {"max": 1521, "min": 1521}}}]'


--vcn-id [text]
---------------

The OCID of the VCN the security list belongs to. [required]


--display-name [text]
---------------------

A user-friendly name. Does not have to be unique, and it's changeable.
Avoid entering confidential information.


--generate-full-command-json-input
----------------------------------

Prints out a JSON document which represents all possible options that
can be provided to this command.

This JSON document can be saved to a file, modified with the
appropriate option values, and then passed back via the --from-json
option. This provides an alternative to typing options out on the
command line.


--generate-param-json-input [text]
----------------------------------

Complex input, such as arrays and objects, are passed in JSON format.

When passed the name of an option which takes complex input, this will
print out example JSON of what needs to be passed to that option.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used


-?, -h, --help
--------------

Show this message and exit.
