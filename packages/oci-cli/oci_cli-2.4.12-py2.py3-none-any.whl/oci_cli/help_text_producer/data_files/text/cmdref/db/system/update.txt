update
******


Description
===========

Updates the properties of a DB System, such as the CPU core count.


Usage
=====

   oci db system update [OPTIONS]


Options
=======


--db-system-id [text]
---------------------

The DB System [OCID]. [required]


--cpu-core-count [integer]
--------------------------

The number of CPU Cores to be set on the DB System. Applicable only
for non-VM based DB systems.


--data-storage-size-in-gbs [integer]
------------------------------------

Size, in GBs, to which the currently attached storage needs to be
scaled up to for VM based DB system. This must be greater than current
storage size. Note that the total storage size attached will be more
than what is requested, to account for REDO/RECO space and software
volume.


--if-match [text]
-----------------

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource.  The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.


--force
-------

Perform update without prompting for confirmation.


--patch-action [text]
---------------------

The action to perform on the patch.


--patch-id [text]
-----------------

The OCID of the patch.


--ssh-authorized-keys-file [filename]
-------------------------------------

A file containing one or more public SSH keys to use for SSH access to
the DB System. Use a newline character to separate multiple keys. The
length of the combined keys cannot exceed 10,000 characters.


--generate-full-command-json-input
----------------------------------

Prints out a JSON document which represents all possible options that
can be provided to this command.

This JSON document can be saved to a file, modified with the
appropriate option values, and then passed back via the --from-json
option. This provides an alternative to typing options out on the
command line.


--generate-param-json-input [text]
----------------------------------

Complex input, such as arrays and objects, are passed in JSON format.

When passed the name of an option which takes complex input, this will
print out example JSON of what needs to be passed to that option.


--from-json [text]
------------------

Provide input to this command as a JSON document from a file.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used


-?, -h, --help
--------------

Show this message and exit.
