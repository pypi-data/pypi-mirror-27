# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class ContainerGroupSetDescription(Resource):
    """Describes a Container group set.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :ivar id: Azure resource ID.
    :vartype id: str
    :ivar name: Azure resource name.
    :vartype name: str
    :ivar type: Azure resource type.
    :vartype type: str
    :param location: Resource location.
    :type location: str
    :param tags: Resource tags.
    :type tags: dict[str, str]
    :ivar provisioning_state: The provisioning state, which only appears in
     the response.
    :vartype provisioning_state: str
    :param container_group: The properties of the container groups in this
     container group set.
    :type container_group:
     ~azure.mgmt.seabreeze.models.ContainerGroupProperties
    :ivar instance_names: The names of the container group instances.
    :vartype instance_names: list[str]
    :param instance_count: The number of container group instances to create.
     Defaults to 1 if this parameter is not specified.
    :type instance_count: int
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'location': {'required': True},
        'provisioning_state': {'readonly': True},
        'instance_names': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'container_group': {'key': 'properties.containerGroup', 'type': 'ContainerGroupProperties'},
        'instance_names': {'key': 'properties.instanceNames', 'type': '[str]'},
        'instance_count': {'key': 'properties.instanceCount', 'type': 'int'},
    }

    def __init__(self, location, tags=None, container_group=None, instance_count=None):
        super(ContainerGroupSetDescription, self).__init__(location=location, tags=tags)
        self.provisioning_state = None
        self.container_group = container_group
        self.instance_names = None
        self.instance_count = instance_count
