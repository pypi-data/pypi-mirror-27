.TH TF(1)
.SH NAME
tf - launch a container on 20ft.nz
.SH SYNOPSIS
.B tf
[\fB\-h\fR]
[\fB\-\-location \fIx.20ft.nz\fR]
[\fB\-\-local \fIy.local\fR]

[[\fB\-e\fR \fIENV=value\fR] ... ]
[[\fB\-f\fR \fIsrc:dest\fR] ... ]
[[\fB\-m\fR \fIuuid:/mount/point\fR] ... ]

[[\fB\-p\fR \fIlocal:remote\fR] ... ]
[[\fB\-r\fR \fIremote:local\fR] ... ]

[\fB\-c\fR \fIscript.sh\fR | \fB\-z\fR]
[\fB\-w\fR \fI[subdomain.]wip.my.com[:www.my.com[:certname]]\fR]

[\fB\-\-ssh port\fR | \fB\-s\fR]
[\fB\-v\fR | \fB\-q\fR]
[\fB\-i\fR]


\fBsource\fR
[\fBargs ... \fR]

.SH DESCRIPTION
.B tf
launches containers or scripts on 20ft.nz: passes environment variables, copies pre-boot files, mounts persistent volumes, port maps onto the container and selects a starting command; creates an ssh/sftp server, and changes log verbosity.

If the source name is a file (with the .py extension) that implements tf_exec in Python, the function is called.

   \fBdef tf_exec(location, node, environment, portmap, preboot, volumes, args):\fR

Otherwise the source is assumed to be a docker id in either the 'hex' or 'name' form; or '.' implies the most recently added image in the local docker daemon.

.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Present cli help.
.TP
.BR \-\-location\ x\.20ft\.nz
Use an (optional) non-default location (fqdn).
.TP
.BR \-\-local\ y.local
An optional (local) ip for the broker.

.TP
.BR \-e\ ENV=value
Add an environment variable to the launch context.
.TP
.BR \-f\ src:dest
Before boot copy the source file into the destination directory.
.TP
.BR \-m\ uuid:/mount/point
Mount the volume 'uuid' at the given mount point.
.TP
.BR \-p\ localport:remoteport
Create a TCP tunnel between localhost and the container.
.TP
.BR \-p\ remoteport:localport
Create a single use TCP tunnel between the container and localhost (an aid for debugging, not for production).
.TP
.BR \-c
Choose an alternate entrypoint.
.TP
.BR \-w\ [subdomain.]wip.my.com[:www.my.com[:certname]]
Publish port 80 of the container to a web endpoint. Publishing to a subdomain is enabled by creating a wildcard DNS entry (i.e. *.wip). Applications which expect a given 'Host' header can have this set with the rewrite (second) option. To host behind ssl pass a certificate name where tf will look for certname.crt and certname.key. Intermediate certs will need to be cat'ed onto the end of the main certificate.

.TP
.BR \-\-ssh\ port
Launch the container, then start a shell and wrap it with an ssh session on the specified port (pass:root, blank password).
.TP
.BR \-s
Short for "--ssh 2222"
.TP
.BR \-z
Launch the container but don't run the entrypoint or command (runs 'sleep').
.TP
.BR \-i
Run interactively (connects stdin and stdout).

.TP
.BR \-v
Verbose logging (level DEBUG).
.TP
.BR \-q
Logging is not configured.

.SH EXAMPLES
.PP
Launch the most recently built Docker image and map local port 8080 to remote port 80.
.PP
.RS
tf -p 8080:80 .
.RE
.PP
Launch the stock nginx image mapping port 8080 to 80, with a pre-existing volume for the http content and the ability to ssh/sftp into the container.
.PP
.RS
tf -p 8080:80 -m UUID1234:/usr/share/nginx/html nginx
.RE
.PP
Run a script passing "prod" as an argument.
.PP
.RS
tf our_script prod
.RE
.PP
Run a script passing "--prod" as an argument.
.PP
.RS
tf our_script -- --prod
.RE
