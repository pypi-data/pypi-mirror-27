# --------------------- sln ims options ---------------------

block options
name print_option
type string
reader urword
optional true
longname print option
description is a flag that controls printing of convergence information from the solver.  \texttt{NONE} means print nothing. \texttt{SUMMARY} means print only the total number of iterations and nonlinear residual reduction summaries. \texttt{ALL} means print linear matrix solver convergence information to the solution listing file and model specific linear matrix solver convergence information to each model listing file in addition to \texttt{SUMMARY} information. \texttt{NONE} is default if \texttt{print\_option} is not specified.

block options
name complexity
type string
reader urword
optional true
longname print option
description is an optional keyword that defines default non-linear and linear solver parameters.  \texttt{SIMPLE} - indicates that default solver input values will be defined that work well for nearly linear models. This would be used for models that do not include nonlinear stress packages and models that are either confined or consist of a single unconfined layer that is thick enough to contain the water table within a single layer. \texttt{MODERATE} - indicates that default solver input values will be defined that work well for moderately nonlinear models. This would be used for models that include nonlinear stress packages and models that consist of one or more unconfined layers. The \texttt{MODERATE} option should be used when the \texttt{SIMPLE} option does not result in successful convergence.  \texttt{COMPLEX} - indicates that default solver input values will be defined that work well for highly nonlinear models. This would be used for models that include nonlinear stress packages and models that consist of one or more unconfined layers representing complex geology and surface-water/groundwater interaction. The \texttt{COMPLEX} option should be used when the \texttt{MODERATE} option does not result in successful convergence.  Non-linear and linear solver parameters assigned using a specified complexity can be modified in the \texttt{NONLINEAR} and \texttt{LINEAR} blocks. If the \texttt{complexity} option is not specified, \texttt{NONLINEAR} and \texttt{LINEAR} variables will be assigned the simple complexity values.

block options
name csv_output_filerecord
type record csv_output fileout csvfile
shape
reader urword
tagged true
optional true
longname
description

block options
name csv_output
type keyword
shape
in_record true
reader urword
tagged true
optional false
longname budget keyword
description keyword to specify that the record corresponds to the comma separated values solver convergence output.

block options
name fileout
type keyword
shape
in_record true
reader urword
tagged true
optional false
longname file keyword
description keyword to specify that an output filename is expected next.

block options
name csvfile
type string
preserve_case true
shape
in_record true
reader urword
tagged false
optional false
longname file keyword
description name of the ascii comma separated values output file to write solver convergence information. If \texttt{PRINT\_OPTION} is \texttt{NONE} or \texttt{SUMMARY}, comma separated values output includes maximum head change convergence information at the end of each outer iteration for each time step. If \texttt{PRINT\_OPTION} is \texttt{ALL}, comma separated values output includes maximum head change and maximum residual convergence information for the solution and each model (if the solution includes more than one model) and linear acceleration information for each inner iteration.


# --------------------- sln ims nonlinear ---------------------

block nonlinear
name outer_hclose
type double precision
reader urword
optional false
longname head change criterion
description real value defining the head change criterion for convergence of the outer (nonlinear) iterations, in units of length. When the maximum absolute value of the head change at all nodes during an iteration is less than or equal to \texttt{outer\_hclose}, iteration stops. Commonly, \texttt{outer\_hclose} equals 0.01.

block nonlinear
name outer_maximum
type integer
reader urword
optional false
longname outer maximum iterations
description integer value defining the maximum number of outer (nonlinear) iterations -- that is, calls to the solution routine. For a linear problem \texttt{outer\_maximum} should be 1.

block nonlinear
name under_relaxation
type string
reader urword
optional true
longname under relaxation scheme
description is an optional keyword that defines the nonlinear under-relaxation schemes used. By default under-relaxation is not used.  \texttt{NONE} - under-relaxation is not used. \texttt{SIMPLE} - Simple under-relaxation scheme with a fixed relaxation factor is used.  \texttt{COOLEY} - Cooley under-relaxation scheme is used.  \texttt{DBD} - delta-bar-delta under-relaxation is used.  Note that the under-relaxation schemes are used in conjunction with problems that use the Newton-Raphson formulation, however, experience has indicated that the Cooley under-relaxation and damping work well also for the Picard scheme with the wet/dry options of MODFLOW 6.

block nonlinear
name under_relaxation_theta
type double precision
reader urword
optional true
longname under relaxation reduction factor
description real value defining the reduction factor for the learning rate (under-relaxation term) of the delta-bar-delta algorithm. The value of \texttt{under\_relaxation\_theta} is between zero and one. If the change in the variable (head) is of opposite sign to that of the previous iteration, the under-relaxation term is reduced by a factor of \texttt{under\_relaxation\_theta}. The value usually ranges from 0.3 to 0.9; a value of 0.7 works well for most problems. \texttt{under\_relaxation\_theta} only needs to be specified if \texttt{under\_relaxation} is \texttt{DBD}.

block nonlinear
name under_relaxation_kappa
type double precision
reader urword
optional true
longname under relaxation increment for the learning rate
description real value defining the increment for the learning rate (under-relaxation term) of the delta-bar-delta algorithm. The value of \texttt{under\_relaxation\_kappa} is between zero and one. If the change in the variable (head) is of the same sign to that of the previous iteration, the under-relaxation term is increased by an increment of \texttt{under\_relaxation\_kappa}. The value usually ranges from 0.03 to 0.3; a value of 0.1 works well for most problems. \texttt{under\_relaxation\_kappa} only needs to be specified if \texttt{under\_relaxation} is \texttt{DBD}.

block nonlinear
name under_relaxation_gamma
type double precision
reader urword
optional true
longname history or memory term factor of the delta-bar-delta algorithm
description real value defining the history or memory term factor of the delta-bar-delta algorithm. \texttt{under\_relaxation\_gamma} is between zero and 1 but cannot be equal to one. When \texttt{under\_relaxation\_gamma} is zero, only the most recent history (previous iteration value) is maintained. As \texttt{under\_relaxation\_gamma} is increased, past history of iteration changes has greater influence on the memory term. The memory term is maintained as an exponential average of past changes. Retaining some past history can overcome granular behavior in the calculated function surface and therefore helps to overcome cyclic patterns of non-convergence. The value usually ranges from 0.1 to 0.3; a value of 0.2 works well for most problems. \texttt{under\_relaxation\_gamma} only needs to be specified if \texttt{under\_relaxation} is not \texttt{NONE}.

block nonlinear
name under_relaxation_momentum
type double precision
reader urword
optional true
longname fraction of past history changes that is added as a momentum term
description real value defining the fraction of past history changes that is added as a momentum term to the step change for a nonlinear iteration. The value of \texttt{under\_relaxation\_momentum} is between zero and one. A large momentum term should only be used when small learning rates are expected. Small amounts of the momentum term help convergence. The value usually ranges from 0.0001 to 0.1; a value of 0.001 works well for most problems. \texttt{under\_relaxation\_momentum} only needs to be specified if \texttt{under\_relaxation} is \texttt{DBD}.

block nonlinear
name backtracking_number
type integer
reader urword
optional true
longname maximum number of backtracking iterations
description integer value defining the maximum number of backtracking iterations allowed for residual reduction computations. If \texttt{backtracking\_number} = 0 then the backtracking iterations are omitted. The value usually ranges from 2 to 20; a value of 10 works well for most problems.

block nonlinear
name backtracking_tolerance
type double precision
reader urword
optional true
longname tolerance for residual change that is allowed for residual reduction
description real value defining the tolerance for residual change that is allowed for residual reduction computations. \texttt{backtracking\_tolerance} should not be less than one to avoid getting stuck in local minima. A large value serves to check for extreme residual increases, while a low value serves to control step size more severely. The value usually ranges from 1.0 to 10$^6$; a value of 10$^4$ works well for most problems but lower values like 1.1 may be required for harder problems. \texttt{backtracking\_tolerance} only needs to be specified if \texttt{backtracking\_number} is greater than zero.

block nonlinear
name backtracking_reduction_factor
type double precision
reader urword
optional true
longname reduction in step size used for residual reduction computations
description real value defining the reduction in step size used for residual reduction computations. The value of \texttt{backtracking\_reduction\_factor} is between zero and one. The value usually ranges from 0.1 to 0.3; a value of 0.2 works well for most problems. \texttt{backtracking\_reduction\_factor} only needs to be specified if \texttt{backtracking\_number} is greater than zero.

block nonlinear
name backtracking_residual_limit
type double precision
reader urword
optional true
longname limit to which the residual is reduced with backtracking
description real value defining the limit to which the residual is reduced with backtracking. If the residual is smaller than \texttt{backtracking\_residual\_limit}, then further backtracking is not performed. A value of 100 is suitable for large problems and residual reduction to smaller values may only slow down computations. \texttt{backtracking\_residual\_limit} only needs to be specified if \texttt{backtracking\_number} is greater than zero.


# --------------------- sln ims linear ---------------------

block linear
name inner_maximum
type integer
reader urword
optional false
longname maximum number of inner iterations
description integer value defining the maximum number of inner (linear) iterations. The number typically depends on the characteristics of the matrix solution scheme being used. For nonlinear problems, \texttt{inner\_maximum} usually ranges from 60 to 600; a value of 100 will be sufficient for most linear problems.

block linear
name inner_hclose
type double precision
reader urword
optional false
longname head change tolerance
description real value defining the head change criterion for convergence of the inner (linear) iterations, in units of length. When the maximum absolute value of the head change at all nodes during an iteration is less than or equal to \texttt{inner\_hclose}, the matrix solver assumes convergence. Commonly, \texttt{inner\_hclose} is set an order of magnitude less than the \texttt{outer\_hclose} value specified for the \texttt{NONLINEAR} block.

block linear
name rcloserecord
type record inner_rclose rclose_option
reader urword
optional false
longname rclose record
description

block linear
name inner_rclose
type double precision
in_record true
reader urword
tagged true
optional false
longname flow residual tolerance
description real value that defines the flow residual tolerance for convergence of the IMS linear solver and specific flow residual criteria used. This value represents the maximum allowable residual at any single node.  Value is in units of length cubed per time, and must be consistent with \mf length and time units. Usually a value of $1.0 \times 10^{-1}$ is sufficient for the flow-residual criteria when meters and seconds are the defined \mf length and time.

block linear
name rclose_option
type string 
tagged false
in_record true
reader urword
optional true
longname flow residual tolerance
description an optional keyword that defines the specific flow residual criterion used.  \texttt{STRICT}--an optional keyword that is used to specify that \texttt{inner\_rclose} represents a infinity-Norm (absolute convergence criteria) and that the head and flow convergence criteria must be met on the first inner iteration (this criteria is equivalent to the criteria used by the MODFLOW-2005 PCG package~\citep{hill1990preconditioned}). \texttt{L2NORM\_RCLOSE}--an optional keyword that is used to specify that \texttt{inner\_rclose} represents a L-2 Norm closure criteria instead of a infinity-Norm (absolute convergence criteria). When \texttt{L2NORM\_RCLOSE} is specified, a reasonable initial \texttt{inner\_rclose} value is $\left( 1.0 \times 10^{-1} \times \text{active nodes} \right)$ when meters and seconds are the defined \mf length and time.  \texttt{RELATIVE\_RCLOSE}--an optional keyword that is used to specify that \texttt{inner\_rclose} represents a relative L-2 Norm reduction closure criteria instead of a infinity-Norm (absolute convergence criteria). When \texttt{RELATIVE\_RCLOSE} is specified, a reasonable initial \texttt{inner\_rclose} value is $1.0 \times 10^{-4}$ and convergence is achieved for a given inner (linear) iteration when $\Delta h \le$ \texttt{inner\_hclose} and the current L-2 Norm is $\le$ the product of the \texttt{RELATIVE\_RCLOSE} and the initial L-2 Norm for the current inner (linear) iteration. If \texttt{rclose\_option} is not specified, an absolute residual (infinity-norm) criterion is used.

block linear
name linear_acceleration
type string
reader urword
optional false
longname linear acceleration method
description a keyword that defines the linear acceleration method used by the default IMS linear solvers.  \texttt{CG} - preconditioned conjugate gradient method.  \texttt{BICGSTAB} - preconditioned bi-conjugate gradient stabilized method.

block linear
name relaxation_factor
type double precision
reader urword
optional true
longname relaxation factor used by ILU factorization
description optional real value that defines the relaxation factor used by the incomplete LU factorization preconditioners (MILU(0) and MILUT). \texttt{relaxation\_factor} is unitless and should be greater than or equal to 0.0 and less than or equal to 1.0. \texttt{relaxation\_factor} values of about 1.0 are commonly used, and experience suggests that convergence can be optimized in some cases with relax values of 0.97. A \texttt{relaxation\_factor} value of 0.0 will result in either ILU(0) or ILUT preconditioning (depending on the value specified for \texttt{preconditioner\_levels} and/or \texttt{preconditioner\_drop\_tolerance}). By default,  \texttt{relaxation\_factor} is zero.

block linear
name preconditioner_levels
type integer
reader urword
optional true
longname level of fill for ILU decomposition
description optional integer value defining the level of fill for ILU decomposition used in the ILUT and MILUT preconditioners. Higher levels of fill provide more robustness but also require more memory. For optimal performance, it is suggested that a large level of fill be applied (7 or 8) with use of a drop tolerance. Specification of a \texttt{preconditioner\_levels} value greater than zero results in use of the ILUT preconditioner. By default, \texttt{preconditioner\_levels} is zero and the zero-fill incomplete LU factorization preconditioners (ILU(0) and MILU(0)) are used.

block linear
name preconditioner_drop_tolerance
type double precision
reader urword
optional true
longname drop tolerance used to drop preconditioner terms
description optional real value that defines the drop tolerance used to drop preconditioner terms based on the magnitude of matrix entries in the ILUT and MILUT preconditioners. A value of $10^{-4}$ works well for most problems. By default, \texttt{preconditioner\_drop\_tolerance} is zero and the zero-fill incomplete LU factorization preconditioners (ILU(0) and MILU(0)) are used.

block linear
name number_orthogonalizations
type integer
reader urword
optional true
longname drop tolerance used to drop preconditioner terms
description optional integer value defining the interval used to explicitly recalculate the residual of the flow equation using the solver coefficient matrix, the latest head estimates, and the right hand side. For problems that benefit from explicit recalculation of the residual, a number between 4 and 10 is appropriate. By default, \texttt{number\_orthogonalizations} is zero.

block linear
name scaling_method
type string
reader urword
optional true
longname matrix scaling approach
description an optional keyword that defines the matrix scaling approach used. By default, matrix scaling is not applied.  \texttt{NONE} - no matrix scaling applied.  \texttt{DIAGONAL} - symmetric matrix scaling using the POLCG preconditioner scaling method in Hill (1992).  \texttt{L2NORM} - symmetric matrix scaling using the L2 norm.

block linear
name reordering_method
type string
reader urword
optional true
longname matrix reordering approach
description an optional keyword that defines the matrix reordering approach used. By default, matrix reordering is not applied.  \texttt{NONE} - original ordering.  \texttt{RCM} - reverse Cuthill McKee ordering.  \texttt{MD} - minimum degree ordering.

