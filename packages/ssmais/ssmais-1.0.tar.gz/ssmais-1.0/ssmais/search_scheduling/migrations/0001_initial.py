# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-27 02:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(default='', max_length=80)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperatingHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=20)),
                ('open_hour', models.TimeField()),
                ('close_hour', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('branch', models.CharField(max_length=120)),
                ('description', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(max_length=500)),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='search_scheduling.Service')),
                ('specification', models.CharField(max_length=120)),
            ],
            bases=('search_scheduling.service',),
        ),
        migrations.AddField(
            model_name='servicecombo',
            name='service_in_combo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_in_combo', to='search_scheduling.Service'),
        ),
        migrations.AddField(
            model_name='service',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search_scheduling.Provider'),
        ),
        migrations.AddField(
            model_name='operatinghours',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search_scheduling.Provider'),
        ),
        migrations.AddField(
            model_name='servicecombo',
            name='service_combo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_combo', to='search_scheduling.Combo'),
        ),
        migrations.AddField(
            model_name='combo',
            name='services',
            field=models.ManyToManyField(related_name='services', through='search_scheduling.ServiceCombo', to='search_scheduling.Service'),
        ),
    ]
