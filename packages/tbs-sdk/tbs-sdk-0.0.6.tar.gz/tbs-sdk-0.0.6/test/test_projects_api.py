# coding: utf-8

"""
    3blades API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ ProjectsApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.projects_api.ProjectsApi()

    def tearDown(self):
        pass

    def test_project_copy(self):
        """
        Test case for project_copy

        Copy a project to your own account.
        """
        pass

    def test_project_copy_check(self):
        """
        Test case for project_copy_check

        Check if you are able to copy a project to your account.
        """
        pass

    def test_projects_collaborators_create(self):
        """
        Test case for projects_collaborators_create

        Create project collaborators
        """
        pass

    def test_projects_collaborators_delete(self):
        """
        Test case for projects_collaborators_delete

        Delete a project collaborator
        """
        pass

    def test_projects_collaborators_list(self):
        """
        Test case for projects_collaborators_list

        Get project collaborators
        """
        pass

    def test_projects_collaborators_read(self):
        """
        Test case for projects_collaborators_read

        Get a project collaborator
        """
        pass

    def test_projects_collaborators_update(self):
        """
        Test case for projects_collaborators_update

        Update project collaborator
        """
        pass

    def test_projects_create(self):
        """
        Test case for projects_create

        Create a new project
        """
        pass

    def test_projects_delete(self):
        """
        Test case for projects_delete

        Delete a project
        """
        pass

    def test_projects_list(self):
        """
        Test case for projects_list

        Get available projects
        """
        pass

    def test_projects_project_files_create(self):
        """
        Test case for projects_project_files_create

        Create project files
        """
        pass

    def test_projects_project_files_delete(self):
        """
        Test case for projects_project_files_delete

        Delete a project file
        """
        pass

    def test_projects_project_files_list(self):
        """
        Test case for projects_project_files_list

        Get project files
        """
        pass

    def test_projects_project_files_read(self):
        """
        Test case for projects_project_files_read

        Get a project file
        """
        pass

    def test_projects_project_files_replace(self):
        """
        Test case for projects_project_files_replace

        Replace a project file
        """
        pass

    def test_projects_project_files_update(self):
        """
        Test case for projects_project_files_update

        Update a project file
        """
        pass

    def test_projects_read(self):
        """
        Test case for projects_read

        Get a project
        """
        pass

    def test_projects_replace(self):
        """
        Test case for projects_replace

        Replace a project
        """
        pass

    def test_projects_servers_api_key(self):
        """
        Test case for projects_servers_api_key

        Get server API key
        """
        pass

    def test_projects_servers_auth(self):
        """
        Test case for projects_servers_auth

        Server api key validation
        """
        pass

    def test_projects_servers_create(self):
        """
        Test case for projects_servers_create

        Create a new server
        """
        pass

    def test_projects_servers_delete(self):
        """
        Test case for projects_servers_delete

        Delete a server
        """
        pass

    def test_projects_servers_list(self):
        """
        Test case for projects_servers_list

        Retrieve servers
        """
        pass

    def test_projects_servers_read(self):
        """
        Test case for projects_servers_read

        Retrieve a server
        """
        pass

    def test_projects_servers_replace(self):
        """
        Test case for projects_servers_replace

        Replace a server
        """
        pass

    def test_projects_servers_run_stats_create(self):
        """
        Test case for projects_servers_run_stats_create

        Create a new server's run statistics
        """
        pass

    def test_projects_servers_run_stats_delete(self):
        """
        Test case for projects_servers_run_stats_delete

        Delete a server's statistics
        """
        pass

    def test_projects_servers_run_stats_read(self):
        """
        Test case for projects_servers_run_stats_read

        Retrieve statistics for a server
        """
        pass

    def test_projects_servers_run_stats_replace(self):
        """
        Test case for projects_servers_run_stats_replace

        Replace a server's statistics
        """
        pass

    def test_projects_servers_run_stats_update(self):
        """
        Test case for projects_servers_run_stats_update

        Update a server's statistics
        """
        pass

    def test_projects_servers_ssh_tunnels_create(self):
        """
        Test case for projects_servers_ssh_tunnels_create

        Create SSH Tunnel associated to a server
        """
        pass

    def test_projects_servers_ssh_tunnels_delete(self):
        """
        Test case for projects_servers_ssh_tunnels_delete

        Delete an SSH Tunnel associated to a server
        """
        pass

    def test_projects_servers_ssh_tunnels_list(self):
        """
        Test case for projects_servers_ssh_tunnels_list

        Get SSH Tunnels associated to a server
        """
        pass

    def test_projects_servers_ssh_tunnels_read(self):
        """
        Test case for projects_servers_ssh_tunnels_read

        Get an SSH Tunnel associated to a server
        """
        pass

    def test_projects_servers_ssh_tunnels_replace(self):
        """
        Test case for projects_servers_ssh_tunnels_replace

        Replace SSH Tunnel associated to a server
        """
        pass

    def test_projects_servers_ssh_tunnels_update(self):
        """
        Test case for projects_servers_ssh_tunnels_update

        Update an SSH Tunnel associated to a server
        """
        pass

    def test_projects_servers_start(self):
        """
        Test case for projects_servers_start

        Start a server
        """
        pass

    def test_projects_servers_stats_delete(self):
        """
        Test case for projects_servers_stats_delete

        Delete a server's statistics
        """
        pass

    def test_projects_servers_stats_read(self):
        """
        Test case for projects_servers_stats_read

        Retrieve a server's statistics
        """
        pass

    def test_projects_servers_stats_replace(self):
        """
        Test case for projects_servers_stats_replace

        Replace a server's statistics
        """
        pass

    def test_projects_servers_stats_update(self):
        """
        Test case for projects_servers_stats_update

        Update a server's statistics
        """
        pass

    def test_projects_servers_stop(self):
        """
        Test case for projects_servers_stop

        Stop a server
        """
        pass

    def test_projects_servers_update(self):
        """
        Test case for projects_servers_update

        Update a server
        """
        pass

    def test_projects_update(self):
        """
        Test case for projects_update

        Update a project
        """
        pass

    def test_service_trigger_create(self):
        """
        Test case for service_trigger_create

        Create a new server trigger
        """
        pass

    def test_service_trigger_delete(self):
        """
        Test case for service_trigger_delete

        Delete a server trigger
        """
        pass

    def test_service_trigger_list(self):
        """
        Test case for service_trigger_list

        Retrieve server triggers
        """
        pass

    def test_service_trigger_read(self):
        """
        Test case for service_trigger_read

        Get a server trigger
        """
        pass

    def test_service_trigger_replace(self):
        """
        Test case for service_trigger_replace

        Replace a server trigger
        """
        pass

    def test_service_trigger_update(self):
        """
        Test case for service_trigger_update

        Update a server trigger
        """
        pass


if __name__ == '__main__':
    unittest.main()
