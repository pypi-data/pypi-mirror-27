# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-01-23 03:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[(b'formfactory.tests.actions.dummy_action', b'formfactory.tests.actions.dummy_action'), (b'formfactory.actions.login', b'formfactory.actions.login'), (b'formfactory.tests.actions.dummy_wizard_action', b'formfactory.tests.actions.dummy_wizard_action'), (b'formfactory.actions.send_email', b'formfactory.actions.send_email'), (b'formfactory.actions.store_data', b'formfactory.actions.store_data')], max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ActionParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=128)),
                ('value', models.CharField(max_length=128)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='params', to='formfactory.Action')),
            ],
        ),
        migrations.CreateModel(
            name='FieldChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128)),
                ('value', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='FieldGroupFormThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Field Group',
                'verbose_name_plural': 'Field Groups',
            },
        ),
        migrations.CreateModel(
            name='FieldGroupThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Field',
                'verbose_name_plural': 'Fields',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A short descriptive title.', max_length=256)),
                ('slug', models.SlugField(max_length=256, unique=True)),
                ('success_message', models.CharField(blank=True, max_length=256, null=True)),
                ('failure_message', models.CharField(blank=True, max_length=256, null=True)),
                ('post_to', models.CharField(blank=True, help_text=b'URL to which this form will be posted to. Leave blank to                     post back to original view.', max_length=256, null=True)),
                ('redirect_to', models.CharField(blank=True, help_text=b'URL to which this form will redirect to after processesing.', max_length=256, null=True)),
                ('submit_button_text', models.CharField(default=b'Submit', help_text=b'The text you would like on the form submit button.', max_length=64)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='FormActionThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Action')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Form')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Form Action',
                'verbose_name_plural': 'Form Actions',
            },
        ),
        migrations.CreateModel(
            name='FormData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Form')),
            ],
            options={
                'ordering': ['uuid'],
            },
        ),
        migrations.CreateModel(
            name='FormDataItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('form_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='formfactory.FormData')),
            ],
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A short descriptive title.', max_length=256)),
                ('slug', models.SlugField(max_length=256, unique=True)),
                ('field_type', models.CharField(choices=[(b'BooleanField', b'BooleanField'), (b'CharField', b'CharField'), (b'ChoiceField', b'ChoiceField'), (b'DateField', b'DateField'), (b'DateTimeField', b'DateTimeField'), (b'DecimalField', b'DecimalField'), (b'EmailField', b'EmailField'), (b'FloatField', b'FloatField'), (b'GenericIPAddressField', b'GenericIPAddressField'), (b'IntegerField', b'IntegerField'), (b'MultipleChoiceField', b'MultipleChoiceField'), (b'SlugField', b'SlugField'), (b'SplitDateTimeField', b'SplitDateTimeField'), (b'TimeField', b'TimeField'), (b'URLField', b'URLField'), (b'UUIDField', b'UUIDField')], max_length=128)),
                ('widget', models.CharField(blank=True, choices=[(b'TextInput', b'TextInput'), (b'NumberInput', b'NumberInput'), (b'EmailInput', b'EmailInput'), (b'URLInput', b'URLInput'), (b'PasswordInput', b'PasswordInput'), (b'HiddenInput', b'HiddenInput'), (b'DateInput', b'DateInput'), (b'DateTimeInput', b'DateTimeInput'), (b'TimeInput', b'TimeInput'), (b'Textarea', b'Textarea'), (b'CheckboxInput', b'CheckboxInput'), (b'Select', b'Select'), (b'NullBooleanSelect', b'NullBooleanSelect'), (b'SelectMultiple', b'SelectMultiple'), (b'RadioSelect', b'RadioSelect'), (b'CheckboxSelectMultiple', b'CheckboxSelectMultiple')], help_text='Leave blank if you prefer to use the default widget.', max_length=128, null=True)),
                ('label', models.CharField(blank=True, max_length=64, null=True)),
                ('initial', models.TextField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, default=256, null=True)),
                ('help_text', models.CharField(blank=True, max_length=256, null=True)),
                ('placeholder', models.CharField(blank=True, max_length=128, null=True)),
                ('required', models.BooleanField(default=True)),
                ('disabled', models.BooleanField(default=False)),
                ('additional_validators', models.CharField(blank=True, choices=[(b'formfactory.tests.validators.dummy_validator', b'formfactory.tests.validators.dummy_validator')], max_length=128, null=True)),
                ('choices', models.ManyToManyField(blank=True, null=True, to='formfactory.FieldChoice')),
            ],
        ),
        migrations.CreateModel(
            name='FormFieldGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A short descriptive title.', max_length=256)),
                ('forms', models.ManyToManyField(related_name='fieldgroups', through='formfactory.FieldGroupFormThrough', to='formfactory.Form')),
            ],
        ),
        migrations.CreateModel(
            name='Wizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A short descriptive title.', max_length=256)),
                ('slug', models.SlugField(max_length=256, unique=True)),
                ('success_message', models.CharField(blank=True, max_length=256, null=True)),
                ('failure_message', models.CharField(blank=True, max_length=256, null=True)),
                ('post_to', models.CharField(blank=True, help_text=b'URL to which this form will be posted to. Leave blank to                     post back to original view.', max_length=256, null=True)),
                ('redirect_to', models.CharField(blank=True, help_text=b'URL to which this form will redirect to after processesing.', max_length=256, null=True)),
                ('submit_button_text', models.CharField(default=b'Submit', help_text=b'The text you would like on the form submit button.', max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WizardActionThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Action')),
                ('wizard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Wizard')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Wizard Action',
                'verbose_name_plural': 'Wizard Actions',
            },
        ),
        migrations.CreateModel(
            name='WizardFormThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Form')),
                ('wizard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Wizard')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
            },
        ),
        migrations.AddField(
            model_name='wizard',
            name='actions',
            field=models.ManyToManyField(through='formfactory.WizardActionThrough', to='formfactory.Action'),
        ),
        migrations.AddField(
            model_name='wizard',
            name='forms',
            field=models.ManyToManyField(through='formfactory.WizardFormThrough', to='formfactory.Form'),
        ),
        migrations.AddField(
            model_name='formfield',
            name='field_groups',
            field=models.ManyToManyField(related_name='fields', through='formfactory.FieldGroupThrough', to='formfactory.FormFieldGroup'),
        ),
        migrations.AddField(
            model_name='formdataitem',
            name='form_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.FormField'),
        ),
        migrations.AddField(
            model_name='form',
            name='actions',
            field=models.ManyToManyField(through='formfactory.FormActionThrough', to='formfactory.Action'),
        ),
        migrations.AddField(
            model_name='fieldgroupthrough',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.FormField'),
        ),
        migrations.AddField(
            model_name='fieldgroupthrough',
            name='field_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.FormFieldGroup'),
        ),
        migrations.AddField(
            model_name='fieldgroupformthrough',
            name='field_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.FormFieldGroup'),
        ),
        migrations.AddField(
            model_name='fieldgroupformthrough',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formfactory.Form'),
        ),
    ]
