from setuptools import setup

setup(name='Power3D', version='1.1', description='OpenGL helper library making it easy to create 3D games in python!\nBE SURE TO INSTALL THE FOLLOWING FIRST: pygame, pyopengl, pillow, numpy\nHow to use Power3D:\n\nPart 1 - Creating a cube:\nImport the Power3D module:\n\nfrom Power3D import *\n\nFirst, you will need a cube model. Try the following code to create a cube model:\n\ncube = (((-1.0,1.0,1.0),(1.0,1.0,1.0),(1.0,-1.0,1.0),(-1.0,-1.0,1.0),(-1.0,1.0,-1.0),(1.0,1.0,-1.0),(1.0,-1.0,-1.0),(-1.0,-1.0,-1.0)),((0,1),(1,2),(2,3),(3,0),(4,5),(5,6),(6,7),(7,4),(0,4),(1,5),(2,6),(3,7)),((0,1,2,3),(4,5,6,7),(0,4,5,1),(1,5,6,2),(2,6,7,3),(0,3,7,4)))\n\nNow we need to create a game object out of that model and add it to the scene. Use the GameObject class:\n\nmyCube = GameObject(cube,0)\naddToScene(myCube)\n\nThe first parameter is the model, and the second is the texture to put on it. If you dont want a texture, just pu 0.\n\nWell get into loading textures later.\n\nNext, point the camera forward (in later versions, the camera will by default be pointed at the scene):\n\nrotateCamera(0,-90)\n\nWe now need to create a main game loop. Its not too hard. Just do this:\n\nwhile True:\n    drawScene()\n\nIt just looks like a square, so lets move it so we can see the sides. Change the game loop to this:\ndeg=0\nwhile True:\n    drawScene()\n    myCube.x=math.cos(math.radians(deg))*3\n    myCube.y=math.sin(math.radians(deg))*3\n    deg += 1\n\nPart 2 - Loading Textures:\n\nAs you remember from the first part, we can add textures to objects. Lets see how:\n\ntex = loadTexture("<filename>.png")\nmyCube = GameObject(cube,tex)\nYou obviously need to replace filename with the actual name of your texture file.', author='Howerd', packages=['Power3D'])