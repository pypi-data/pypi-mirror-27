{"version":3,"sources":["userFileAttachmentModel.es6.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA,GAAG,kBAAH,GAAwB,GAAG,YAAH,CAAgB,MAAhB,CAAuB;AAC3C,YAD2C,sBAChC;AACP,eAAO,EAAE,QAAF,CAAW;AACd,qBAAS,IADK;AAEd,sBAAU,EAFI;AAGd,yBAAa,IAHC;AAId,kBAAM,IAJQ;AAKd,sBAAU;AALI,SAAX,EAMJ,GAAG,YAAH,CAAgB,SAAhB,CAA0B,QAA1B,EANI,CAAP;AAOH,KAT0C;;;AAW3C,kBAAc,sBAX6B;AAY3C,qBAAiB,CAAC,MAAD,CAZ0B;;AAc3C,mBAAe;AACX,qBAAa,cADF;AAEX,cAAM;AAFK,KAd4B;;AAmB3C,qBAAiB,CACb,SADa,EAEb,MAFa,CAnB0B;;AAwB3C,uBAAmB,CACf,SADe,EAEf,aAFe,EAGf,UAHe,CAxBwB;;AA8B3C,iBAAa;AACT,cAAM,GAAG,eAAH,CAAmB;AADhB,KA9B8B;;AAkC3C;;;;;;;AAOA,OAzC2C,iBAyCrC;AACF,YAAM,WAAW,KAAK,GAAL,CAAS,UAAT,CAAjB;AACA,YAAM,MAAS,SAAT,kBAA+B,QAA/B,4BAAN;;AAEA,eAAO,KAAK,KAAL,KAAe,GAAf,QAAwB,GAAxB,GAA8B,KAAK,EAAnC,MAAP;AACH;AA9C0C,CAAvB,CAAxB","file":"userFileAttachmentModel.js","sourcesContent":["/**\n * A new or existing user file attachment.\n *\n * Model Attributes:\n *     caption (string):\n *         The file attachment's caption.\n *\n *     userName (string):\n *         The username of the owner of the file attachment.\n *\n *     downloadURL (string):\n *         The URL to download the file, for existing file attachments.\n *\n *     file (file):\n *         The file to upload. Only works for newly created\n *         UserFileAttachments.\n *\n *     filename (string):\n *         The name of the file, for existing file attachments.\n */\nRB.UserFileAttachment = RB.BaseResource.extend({\n    defaults() {\n        return _.defaults({\n            caption: null,\n            userName: '',\n            downloadURL: null,\n            file: null,\n            filename: null\n        }, RB.BaseResource.prototype.defaults());\n    },\n\n    rspNamespace: 'user_file_attachment',\n    payloadFileKeys: ['path'],\n\n    attrToJsonMap: {\n        downloadURL: 'absolute_url',\n        file: 'path'\n    },\n\n    serializedAttrs: [\n        'caption',\n        'file'\n    ],\n\n    deserializedAttrs: [\n        'caption',\n        'downloadURL',\n        'filename'\n    ],\n\n    serializers: {\n        file: RB.JSONSerializers.onlyIfValue\n    },\n\n    /**\n     * Return the URL to use for syncing the model.\n     *\n     * Returns:\n     *     string:\n     *     The URL for the resource.\n     */\n    url() {\n        const username = this.get('userName');\n        const url = `${SITE_ROOT}api/users/${username}/user-file-attachments/`;\n\n        return this.isNew() ? url : `${url}${this.id}/`;\n    }\n});\n"]}