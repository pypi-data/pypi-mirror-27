{"version":3,"sources":["diffFragmentQueueViewTests.es6.js"],"names":[],"mappings":"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","file":"diffFragmentQueueViewTests.js","sourcesContent":["suite('rb/views/DiffFragmentQueueView', function() {\n    const URL_PREFIX = '/r/123/_fragments/diff-comments/';\n\n    let fragmentQueue;\n\n    beforeEach(function() {\n        fragmentQueue = new RB.DiffFragmentQueueView({\n            containerPrefix: 'container1',\n            reviewRequestPath: '/r/123/',\n            queueName: 'diff_fragments'\n        });\n    });\n\n    describe('Diff fragment loading', function() {\n        let $container1;\n        let $container2;\n        let $container3;\n\n        beforeEach(function() {\n            $container1 = $('<div id=\"container1_123\"/>')\n                .appendTo(window.$testsScratch);\n            $container2 = $('<div id=\"container1_124\"/>')\n                .appendTo(window.$testsScratch);\n            $container3 = $('<div id=\"container1_125\"/>')\n                .appendTo(window.$testsScratch);\n\n            fragmentQueue.queueLoad('123', 'key1');\n            fragmentQueue.queueLoad('124', 'key1');\n            fragmentQueue.queueLoad('125', 'key2');\n        });\n\n        it('Fragment queueing', function() {\n            const queue = fragmentQueue._queue;\n\n            expect(queue.length).not.toBe(0);\n\n            expect(queue.key1.length).toBe(2);\n            expect(queue.key1).toContain({\n                commentID: '123',\n                onFragmentRendered: null,\n            });\n            expect(queue.key1).toContain({\n                commentID: '124',\n                onFragmentRendered: null,\n            });\n            expect(queue.key2.length).toBe(1);\n            expect(queue.key2).toContain({\n                commentID: '125',\n                onFragmentRendered: null,\n            });\n        });\n\n        it('Batch loading', function() {\n            const urls = [\n                `${URL_PREFIX}123,124/`,\n                `${URL_PREFIX}125/`,\n            ];\n\n            spyOn($, 'ajax').and.callFake(\n                function(options) {\n                    const url = options.url;\n\n                    if (url === urls[0]) {\n                        const html1 = '<span>Comment 1</span>';\n                        const html2 = '<span>Comment 2</span>';\n\n                        options.success('123\\n' +\n                                        `${html1.length}\\n` +\n                                        html1 +\n                                        '124\\n' +\n                                        `${html2.length}\\n` +\n                                        html2);\n                    } else if (url === urls[1]) {\n                        const html = '<span>Comment 3</span>';\n                        options.success(`125\\n${html.length}\\n${html}`);\n                    } else {\n                        fail(`Unexpected URL ${url}`);\n                    }\n                });\n\n            fragmentQueue.loadFragments();\n\n            expect($.ajax.calls.count()).toBe(2);\n\n            expect($container1.data('diff-fragment-view')).toBeTruthy();\n            expect($container1.html()).toBe('<span>Comment 1</span>');\n\n            expect($container2.data('diff-fragment-view')).toBeTruthy();\n            expect($container2.html()).toBe('<span>Comment 2</span>');\n\n            expect($container3.data('diff-fragment-view')).toBeTruthy();\n            expect($container3.html()).toBe('<span>Comment 3</span>');\n        });\n\n        it('With saved fragments', function() {\n            const urls = [\n                `${URL_PREFIX}124/`,\n                `${URL_PREFIX}125/`,\n            ];\n\n            spyOn($, 'ajax').and.callFake(\n                function(options) {\n                    const url = options.url;\n\n                    if (url === urls[0]) {\n                        const html = '<span>New comment 2</span>';\n                        options.success(`124\\n${html.length}\\n${html}`);\n                    } else if (url === urls[1]) {\n                        const html = '<span>New comment 3</span>';\n                        options.success(`125\\n${html.length}\\n${html}`);\n                    } else {\n                        fail(`Unexpected URL ${url}`);\n                    }\n                });\n\n            /*\n             * We'll set up the first two containers, but leave the third as\n             * completely new. Both the unsaved pre-loaded container (2) and\n             * the new container (3) will be loaded.\n             */\n            $container1\n                .html('<span>Comment 1</span>')\n                .data('diff-fragment-view', new RB.DiffFragmentView());\n\n            $container2\n                .html('<span>Comment 2</span>')\n                .data('diff-fragment-view', new RB.DiffFragmentView());\n\n            /*\n             * We're going to save 123 and 125 (which is not loaded). Only\n             * 123 will actually be saved.\n             */\n            fragmentQueue.saveFragment('123');\n            fragmentQueue.saveFragment('125');\n\n            fragmentQueue.loadFragments();\n\n            expect($.ajax.calls.count()).toBe(2);\n\n            expect($container1.data('diff-fragment-view')).toBeTruthy();\n            expect($container1.html()).toBe('<span>Comment 1</span>');\n\n            expect($container2.data('diff-fragment-view')).toBeTruthy();\n            expect($container2.html()).toBe('<span>New comment 2</span>');\n\n            expect($container3.data('diff-fragment-view')).toBeTruthy();\n            expect($container3.html()).toBe('<span>New comment 3</span>');\n\n            expect(fragmentQueue._saved).toEqual({});\n        });\n    });\n});\n"]}