.\" Automatically generated by Pandoc 2.0.3
.\"
.TH "pyplbar_d1" "1" "2016\-12\-15" "Python" "SHTOOLS 4.1"
.hy
.SH PlBar_d1
.PP
Compute all the 4\-pi (geodesy) normalized Legendre polynomials and
first derivatives.
.SH Usage
.PP
\f[C]p\f[], \f[C]dp\f[] = PlBar_d1 (\f[C]lmax\f[], \f[C]z\f[])
.SH Returns
.TP
.B \f[C]p\f[] : float, dimension (\f[C]lmax\f[]+1)
An array of 4\-pi (geodesy) normalized Legendre polynomials up to degree
\f[C]lmax\f[].
Degree \f[C]l\f[] corresponds to array index \f[C]l\f[].
.RS
.RE
.TP
.B \f[C]dp\f[] : float, dimension (\f[C]lmax\f[]+1)
An array of the first derivatives of the 4\-pi (geodesy) normalized
Legendre polynomials up to degree \f[C]lmax\f[].
.RS
.RE
.SH Parameters
.TP
.B \f[C]lmax\f[] : integer
The maximum degree of the Legendre polynomials to be computed.
.RS
.RE
.TP
.B \f[C]z\f[] : float
The argument of the Legendre polynomial.
.RS
.RE
.SH Description
.PP
\f[C]PlBar_d1\f[] will calculate all of the 4\-pi (geodesy) normalized
Legendre polynomials and first derivatives up to degree \f[C]lmax\f[]
for a given argument.
These are calculated using a standard three\-term recursion formula, and
the integral of the geodesy\-normalized Legendre polynomials over the
interval [\-1, 1] is 2.
Note that the derivative of the Legendre polynomials is calculated with
respect to its arguement \f[C]z\f[], and not latitude or colatitude.
If \f[C]z=cos(theta)\f[], where theta is the colatitude, then it is only
necessary to multiply \f[C]dp\f[] by \f[C]\-sin(theta)\f[] to obtain the
derivative with respect to theta.
.SH See also
.PP
\f[C]plbar\f[], \f[C]plmbar\f[], \f[C]plmbar_d1\f[], \f[C]plon\f[],
\f[C]plon_d1\f[], \f[C]plmon\f[], \f[C]plmon_d1\f[], \f[C]plschmidt\f[],
\f[C]plschmidt_d1\f[], \f[C]plmschmidt\f[], \f[C]plmschmidt_d1\f[],
\f[C]plegendre\f[], \f[C]plegendre_d1\f[], \f[C]plegendrea\f[],
\f[C]plegendrea_d1\f[]
