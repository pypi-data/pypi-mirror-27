
#============================================ General applications settings ============================================
# [wasp-launcher::applications::new::<registry id>]
# str
# module_name = module to import
# str
# class name = class to import from module
# bool
# enabled = whether to load application or not
# bool
# auto_start = whether to start app with launcher or not
#
# WCommandKit must have the following options:
# str - one of core, apps
# kit_context = whether this kit is a core kit or not
#
# WCommandKit may have the following options:
# str
# alias = optional, sets alias for kit name (kit registry id)
#
# WSchedulerTaskSourceInstaller must have the following options:
# str
# instance = whether this kit is a core kit or not

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.broker::init]
module_name = wasp_launcher.apps.broker.app
class_name = WBrokerInitApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.broker::start]
module_name = wasp_launcher.apps.broker.app
class_name = WBrokerApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.config]
module_name = wasp_launcher.apps.config
class_name = WConfigApp
enabled = True
auto_start = False

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.log]
module_name = wasp_launcher.apps.log
class_name = WLogApp
enabled = True
auto_start = False

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.model-load]
module_name = wasp_launcher.apps.model
class_name = WModelLoadApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.scheduler::init]
module_name = wasp_launcher.apps.scheduler_app
class_name = WSchedulerInitApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.scheduler::start]
module_name = wasp_launcher.apps.scheduler_app
class_name = WSchedulerApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.template-lookup]
module_name = wasp_launcher.apps.templates
class_name = WTemplateLookupApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.web::init]
module_name = wasp_launcher.apps.web_service
class_name = WWebServiceInitApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.web::start]
module_name = wasp_launcher.apps.web_service
class_name = WWebServiceApp
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.web-debugger::datastore]
module_name = wasp_launcher.apps.web_debugger
class_name = WWebAppDebuggerDatastore
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.web.wasp-debug]
module_name = wasp_launcher.apps.web.debug
class_name = WWaspDebugApps
enabled = True
auto_start = False

[wasp-launcher::applications::com.binblob.wasp-launcher.apps.web.wasp-basic]
module_name = wasp_launcher.apps.web.wasp
class_name = WWaspBasicApps
enabled = True
auto_start = True

[wasp-launcher::applications::com.binblob.wasp-launcher.broker.kits.health]
module_name = wasp_launcher.apps.kits.health
class_name = WHealthCommandKit
enabled = True
auto_start = True
kit_context = core
alias = health

[wasp-launcher::applications::com.binblob.wasp-launcher.broker.kits.model-db]
module_name = wasp_launcher.apps.kits.extra
class_name = WModelDBCommandKit
enabled = True
auto_start = True
kit_context = core
alias = model-db

[wasp-launcher::applications::com.binblob.wasp-launcher.broker.kits.model-obj]
module_name = wasp_launcher.apps.kits.extra
class_name = WModelObjCommandKit
enabled = True
auto_start = True
kit_context = core
alias = model-obj

[wasp-launcher::applications::com.binblob.wasp-launcher.broker.kits.apps]
module_name = wasp_launcher.apps.kits.extra
class_name = WAppsCommandKit
enabled = True
auto_start = True
kit_context = core
alias = apps

[wasp-launcher::applications::com.binblob.wasp-launcher.broker.kits.scheduler]
module_name = wasp_launcher.apps.kits.scheduler
class_name = WSchedulerCommandKit
enabled = True
auto_start = True
kit_context = core
alias = scheduler

#===================================================== Web settings ====================================================

[wasp-launcher::web]
bind_address = 127.0.0.1:80
error_presenter = com.binblob.wasp-launcher.apps.wasp-basic.error-presenter

[wasp-launcher::web:routes]

[wasp-launcher::web:templates]
# bool
modules_directory = True
# default mako template encoding
input_encoding =

[wasp-launcher::web:debug]
mongo_connection = mongodb://localhost:27017/
mongo_database = wasp-launcher-debug
# off/on/on error
mode = off

#================================================== Scheduler settings =================================================

[wasp-launcher::scheduler::instance]
maximum_running_records = 10
maximum_postponed_records =

[wasp-launcher::scheduler::cron]

#================================================== Discovery settings =================================================

[wasp-launcher::discovery]
# one of: none, static, beacon
lookup_method = none

[wasp-launcher::discovery::static]
# coma-separated list of hosts (ip addresses or resolvable names) with port if it is other then
hosts =

[wasp-launcher::discovery::beacon]
bind_address =
address = 255.255.255.255
port = 7210
public_address =
public_port =
lookup_timeout = 15
# coma-separated list of host group names
hostgroups =

#=============================================== Broker control settings ===============================================

[wasp-launcher::broker::connection]
bind = True
bind_address =
port = 7220

named_socket = True
named_socket_path = /var/run/wasp-launcher/remote-control

[wasp-launcher::broker::connection::cli]
named_socket = True
tcp_address =
command_timeout = 20

[wasp-launcher::broker::connection::tunnel]
# FUTURE USE!
# messaging encoding, one of: plain, session-key
mode = session-key

[wasp-launcher::broker::connection::auth]
# FUTURE USE!
# bool - enables/disables authentication
auth_required = False
# one of: trust, static (single-password), public-key
auth_method = trust
# role name, that limits connection or empty string if no restrictions are required
restrictions =

[wasp-launcher::broker::connection::auth::static]
# FUTURE USE!
password_hash =
hash_method =
salt =

[wasp-launcher::broker::connection::auth::pk]
# FUTURE USE!
ca =
private_key =
public_key =
