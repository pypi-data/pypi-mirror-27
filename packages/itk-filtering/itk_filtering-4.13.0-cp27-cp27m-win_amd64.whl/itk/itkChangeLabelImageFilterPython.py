# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkChangeLabelImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkChangeLabelImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkChangeLabelImageFilterPython')
    _itkChangeLabelImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkChangeLabelImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkChangeLabelImageFilterPython
            return _itkChangeLabelImageFilterPython
        try:
            _mod = imp.load_module('_itkChangeLabelImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkChangeLabelImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkChangeLabelImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImagePython
import stdcomplexPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkChangeLabelImageFilterISS3ISS3_New():
  return itkChangeLabelImageFilterISS3ISS3.New()


def itkChangeLabelImageFilterISS3ISS3_Superclass_New():
  return itkChangeLabelImageFilterISS3ISS3_Superclass.New()


def itkChangeLabelImageFilterISS2ISS2_New():
  return itkChangeLabelImageFilterISS2ISS2.New()


def itkChangeLabelImageFilterISS2ISS2_Superclass_New():
  return itkChangeLabelImageFilterISS2ISS2_Superclass.New()


def itkChangeLabelImageFilterIUC3IUC3_New():
  return itkChangeLabelImageFilterIUC3IUC3.New()


def itkChangeLabelImageFilterIUC3IUC3_Superclass_New():
  return itkChangeLabelImageFilterIUC3IUC3_Superclass.New()


def itkChangeLabelImageFilterIUC2IUC2_New():
  return itkChangeLabelImageFilterIUC2IUC2.New()


def itkChangeLabelImageFilterIUC2IUC2_Superclass_New():
  return itkChangeLabelImageFilterIUC2IUC2_Superclass.New()

class itkChangeLabelImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkChangeLabelImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterISS2ISS2_Superclass self) -> itkChangeLabelImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkChangeLabelImageFilterISS2ISS2_Superclass self) -> itk::Functor::ChangeLabel< short,short >
        GetFunctor(itkChangeLabelImageFilterISS2ISS2_Superclass self) -> itk::Functor::ChangeLabel< short,short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkChangeLabelImageFilterISS2ISS2_Superclass self, itk::Functor::ChangeLabel< short,short > const & functor)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS2ISS2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterISS2ISS2_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterISS2ISS2_Superclass self) -> itkChangeLabelImageFilterISS2ISS2_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS2ISS2_Superclass

        Create a new object of the class itkChangeLabelImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_Clone, None, itkChangeLabelImageFilterISS2ISS2_Superclass)
itkChangeLabelImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_GetFunctor, None, itkChangeLabelImageFilterISS2ISS2_Superclass)
itkChangeLabelImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_SetFunctor, None, itkChangeLabelImageFilterISS2ISS2_Superclass)
itkChangeLabelImageFilterISS2ISS2_Superclass.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_GetPointer, None, itkChangeLabelImageFilterISS2ISS2_Superclass)
itkChangeLabelImageFilterISS2ISS2_Superclass_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_swigregister
itkChangeLabelImageFilterISS2ISS2_Superclass_swigregister(itkChangeLabelImageFilterISS2ISS2_Superclass)

def itkChangeLabelImageFilterISS2ISS2_Superclass___New_orig__():
    """itkChangeLabelImageFilterISS2ISS2_Superclass___New_orig__() -> itkChangeLabelImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass___New_orig__()

def itkChangeLabelImageFilterISS2ISS2_Superclass_cast(obj):
    """itkChangeLabelImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkChangeLabelImageFilterISS2ISS2_Superclass"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_cast(obj)

class itkChangeLabelImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkChangeLabelImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterISS3ISS3_Superclass self) -> itkChangeLabelImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkChangeLabelImageFilterISS3ISS3_Superclass self) -> itk::Functor::ChangeLabel< short,short >
        GetFunctor(itkChangeLabelImageFilterISS3ISS3_Superclass self) -> itk::Functor::ChangeLabel< short,short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkChangeLabelImageFilterISS3ISS3_Superclass self, itk::Functor::ChangeLabel< short,short > const & functor)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS3ISS3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterISS3ISS3_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterISS3ISS3_Superclass self) -> itkChangeLabelImageFilterISS3ISS3_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS3ISS3_Superclass

        Create a new object of the class itkChangeLabelImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_Clone, None, itkChangeLabelImageFilterISS3ISS3_Superclass)
itkChangeLabelImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_GetFunctor, None, itkChangeLabelImageFilterISS3ISS3_Superclass)
itkChangeLabelImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_SetFunctor, None, itkChangeLabelImageFilterISS3ISS3_Superclass)
itkChangeLabelImageFilterISS3ISS3_Superclass.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_GetPointer, None, itkChangeLabelImageFilterISS3ISS3_Superclass)
itkChangeLabelImageFilterISS3ISS3_Superclass_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_swigregister
itkChangeLabelImageFilterISS3ISS3_Superclass_swigregister(itkChangeLabelImageFilterISS3ISS3_Superclass)

def itkChangeLabelImageFilterISS3ISS3_Superclass___New_orig__():
    """itkChangeLabelImageFilterISS3ISS3_Superclass___New_orig__() -> itkChangeLabelImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass___New_orig__()

def itkChangeLabelImageFilterISS3ISS3_Superclass_cast(obj):
    """itkChangeLabelImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkChangeLabelImageFilterISS3ISS3_Superclass"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_cast(obj)

class itkChangeLabelImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkChangeLabelImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterIUC2IUC2_Superclass self) -> itkChangeLabelImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkChangeLabelImageFilterIUC2IUC2_Superclass self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char >
        GetFunctor(itkChangeLabelImageFilterIUC2IUC2_Superclass self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkChangeLabelImageFilterIUC2IUC2_Superclass self, itk::Functor::ChangeLabel< unsigned char,unsigned char > const & functor)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC2IUC2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC2IUC2_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterIUC2IUC2_Superclass self) -> itkChangeLabelImageFilterIUC2IUC2_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_Clone, None, itkChangeLabelImageFilterIUC2IUC2_Superclass)
itkChangeLabelImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkChangeLabelImageFilterIUC2IUC2_Superclass)
itkChangeLabelImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkChangeLabelImageFilterIUC2IUC2_Superclass)
itkChangeLabelImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_GetPointer, None, itkChangeLabelImageFilterIUC2IUC2_Superclass)
itkChangeLabelImageFilterIUC2IUC2_Superclass_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_swigregister
itkChangeLabelImageFilterIUC2IUC2_Superclass_swigregister(itkChangeLabelImageFilterIUC2IUC2_Superclass)

def itkChangeLabelImageFilterIUC2IUC2_Superclass___New_orig__():
    """itkChangeLabelImageFilterIUC2IUC2_Superclass___New_orig__() -> itkChangeLabelImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass___New_orig__()

def itkChangeLabelImageFilterIUC2IUC2_Superclass_cast(obj):
    """itkChangeLabelImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC2IUC2_Superclass"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_cast(obj)

class itkChangeLabelImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkChangeLabelImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterIUC3IUC3_Superclass self) -> itkChangeLabelImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkChangeLabelImageFilterIUC3IUC3_Superclass self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char >
        GetFunctor(itkChangeLabelImageFilterIUC3IUC3_Superclass self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkChangeLabelImageFilterIUC3IUC3_Superclass self, itk::Functor::ChangeLabel< unsigned char,unsigned char > const & functor)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC3IUC3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC3IUC3_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterIUC3IUC3_Superclass self) -> itkChangeLabelImageFilterIUC3IUC3_Superclass"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_Clone, None, itkChangeLabelImageFilterIUC3IUC3_Superclass)
itkChangeLabelImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkChangeLabelImageFilterIUC3IUC3_Superclass)
itkChangeLabelImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkChangeLabelImageFilterIUC3IUC3_Superclass)
itkChangeLabelImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_GetPointer, None, itkChangeLabelImageFilterIUC3IUC3_Superclass)
itkChangeLabelImageFilterIUC3IUC3_Superclass_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_swigregister
itkChangeLabelImageFilterIUC3IUC3_Superclass_swigregister(itkChangeLabelImageFilterIUC3IUC3_Superclass)

def itkChangeLabelImageFilterIUC3IUC3_Superclass___New_orig__():
    """itkChangeLabelImageFilterIUC3IUC3_Superclass___New_orig__() -> itkChangeLabelImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass___New_orig__()

def itkChangeLabelImageFilterIUC3IUC3_Superclass_cast(obj):
    """itkChangeLabelImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC3IUC3_Superclass"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_cast(obj)

class itkChangeLabelImageFilterISS2ISS2(itkChangeLabelImageFilterISS2ISS2_Superclass):
    """


    Change Sets of Labels.

    This filter produces an output image whose pixels are either copied
    from the input if they are not being changed or are rewritten based on
    the change parameters

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    Tim Kelliher. GE Research, Niskayuna, NY.

    This work was supported by a grant from DARPA, executed by the U.S.
    Army Medical Research and Materiel Command/TATRC Assistance Agreement,
    Contract::W81XWH-05-2-0059.

    C++ includes: itkChangeLabelImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterISS2ISS2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterISS2ISS2 self) -> itkChangeLabelImageFilterISS2ISS2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Clone(self)


    def SetChange(self, original, result):
        """
        SetChange(itkChangeLabelImageFilterISS2ISS2 self, short const & original, short const & result)

        Set up a change of a
        single label 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_SetChange(self, original, result)


    def SetChangeMap(self, changeMap):
        """
        SetChangeMap(itkChangeLabelImageFilterISS2ISS2 self, mapSSSS changeMap)

        Set the entire change
        map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_SetChangeMap(self, changeMap)


    def ClearChangeMap(self):
        """
        ClearChangeMap(itkChangeLabelImageFilterISS2ISS2 self)

        Clears the entire
        change map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_ClearChangeMap(self)

    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_InputConvertibleToOutputCheck
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_PixelTypeComparable
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterISS2ISS2"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterISS2ISS2 self) -> itkChangeLabelImageFilterISS2ISS2"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS2ISS2

        Create a new object of the class itkChangeLabelImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterISS2ISS2.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Clone, None, itkChangeLabelImageFilterISS2ISS2)
itkChangeLabelImageFilterISS2ISS2.SetChange = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_SetChange, None, itkChangeLabelImageFilterISS2ISS2)
itkChangeLabelImageFilterISS2ISS2.SetChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_SetChangeMap, None, itkChangeLabelImageFilterISS2ISS2)
itkChangeLabelImageFilterISS2ISS2.ClearChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_ClearChangeMap, None, itkChangeLabelImageFilterISS2ISS2)
itkChangeLabelImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_GetPointer, None, itkChangeLabelImageFilterISS2ISS2)
itkChangeLabelImageFilterISS2ISS2_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_swigregister
itkChangeLabelImageFilterISS2ISS2_swigregister(itkChangeLabelImageFilterISS2ISS2)

def itkChangeLabelImageFilterISS2ISS2___New_orig__():
    """itkChangeLabelImageFilterISS2ISS2___New_orig__() -> itkChangeLabelImageFilterISS2ISS2_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2___New_orig__()

def itkChangeLabelImageFilterISS2ISS2_cast(obj):
    """itkChangeLabelImageFilterISS2ISS2_cast(itkLightObject obj) -> itkChangeLabelImageFilterISS2ISS2"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_cast(obj)

class itkChangeLabelImageFilterISS3ISS3(itkChangeLabelImageFilterISS3ISS3_Superclass):
    """


    Change Sets of Labels.

    This filter produces an output image whose pixels are either copied
    from the input if they are not being changed or are rewritten based on
    the change parameters

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    Tim Kelliher. GE Research, Niskayuna, NY.

    This work was supported by a grant from DARPA, executed by the U.S.
    Army Medical Research and Materiel Command/TATRC Assistance Agreement,
    Contract::W81XWH-05-2-0059.

    C++ includes: itkChangeLabelImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterISS3ISS3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterISS3ISS3 self) -> itkChangeLabelImageFilterISS3ISS3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Clone(self)


    def SetChange(self, original, result):
        """
        SetChange(itkChangeLabelImageFilterISS3ISS3 self, short const & original, short const & result)

        Set up a change of a
        single label 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_SetChange(self, original, result)


    def SetChangeMap(self, changeMap):
        """
        SetChangeMap(itkChangeLabelImageFilterISS3ISS3 self, mapSSSS changeMap)

        Set the entire change
        map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_SetChangeMap(self, changeMap)


    def ClearChangeMap(self):
        """
        ClearChangeMap(itkChangeLabelImageFilterISS3ISS3 self)

        Clears the entire
        change map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_ClearChangeMap(self)

    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_InputConvertibleToOutputCheck
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_PixelTypeComparable
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterISS3ISS3"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterISS3ISS3 self) -> itkChangeLabelImageFilterISS3ISS3"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS3ISS3

        Create a new object of the class itkChangeLabelImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterISS3ISS3.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Clone, None, itkChangeLabelImageFilterISS3ISS3)
itkChangeLabelImageFilterISS3ISS3.SetChange = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_SetChange, None, itkChangeLabelImageFilterISS3ISS3)
itkChangeLabelImageFilterISS3ISS3.SetChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_SetChangeMap, None, itkChangeLabelImageFilterISS3ISS3)
itkChangeLabelImageFilterISS3ISS3.ClearChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_ClearChangeMap, None, itkChangeLabelImageFilterISS3ISS3)
itkChangeLabelImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_GetPointer, None, itkChangeLabelImageFilterISS3ISS3)
itkChangeLabelImageFilterISS3ISS3_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_swigregister
itkChangeLabelImageFilterISS3ISS3_swigregister(itkChangeLabelImageFilterISS3ISS3)

def itkChangeLabelImageFilterISS3ISS3___New_orig__():
    """itkChangeLabelImageFilterISS3ISS3___New_orig__() -> itkChangeLabelImageFilterISS3ISS3_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3___New_orig__()

def itkChangeLabelImageFilterISS3ISS3_cast(obj):
    """itkChangeLabelImageFilterISS3ISS3_cast(itkLightObject obj) -> itkChangeLabelImageFilterISS3ISS3"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_cast(obj)

class itkChangeLabelImageFilterIUC2IUC2(itkChangeLabelImageFilterIUC2IUC2_Superclass):
    """


    Change Sets of Labels.

    This filter produces an output image whose pixels are either copied
    from the input if they are not being changed or are rewritten based on
    the change parameters

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    Tim Kelliher. GE Research, Niskayuna, NY.

    This work was supported by a grant from DARPA, executed by the U.S.
    Army Medical Research and Materiel Command/TATRC Assistance Agreement,
    Contract::W81XWH-05-2-0059.

    C++ includes: itkChangeLabelImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterIUC2IUC2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterIUC2IUC2 self) -> itkChangeLabelImageFilterIUC2IUC2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Clone(self)


    def SetChange(self, original, result):
        """
        SetChange(itkChangeLabelImageFilterIUC2IUC2 self, unsigned char const & original, unsigned char const & result)

        Set up a change of a
        single label 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_SetChange(self, original, result)


    def SetChangeMap(self, changeMap):
        """
        SetChangeMap(itkChangeLabelImageFilterIUC2IUC2 self, mapUCUC changeMap)

        Set the entire change
        map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_SetChangeMap(self, changeMap)


    def ClearChangeMap(self):
        """
        ClearChangeMap(itkChangeLabelImageFilterIUC2IUC2 self)

        Clears the entire
        change map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_ClearChangeMap(self)

    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_PixelTypeComparable
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC2IUC2"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterIUC2IUC2 self) -> itkChangeLabelImageFilterIUC2IUC2"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC2IUC2

        Create a new object of the class itkChangeLabelImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterIUC2IUC2.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Clone, None, itkChangeLabelImageFilterIUC2IUC2)
itkChangeLabelImageFilterIUC2IUC2.SetChange = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_SetChange, None, itkChangeLabelImageFilterIUC2IUC2)
itkChangeLabelImageFilterIUC2IUC2.SetChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_SetChangeMap, None, itkChangeLabelImageFilterIUC2IUC2)
itkChangeLabelImageFilterIUC2IUC2.ClearChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_ClearChangeMap, None, itkChangeLabelImageFilterIUC2IUC2)
itkChangeLabelImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_GetPointer, None, itkChangeLabelImageFilterIUC2IUC2)
itkChangeLabelImageFilterIUC2IUC2_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_swigregister
itkChangeLabelImageFilterIUC2IUC2_swigregister(itkChangeLabelImageFilterIUC2IUC2)

def itkChangeLabelImageFilterIUC2IUC2___New_orig__():
    """itkChangeLabelImageFilterIUC2IUC2___New_orig__() -> itkChangeLabelImageFilterIUC2IUC2_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2___New_orig__()

def itkChangeLabelImageFilterIUC2IUC2_cast(obj):
    """itkChangeLabelImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC2IUC2"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_cast(obj)

class itkChangeLabelImageFilterIUC3IUC3(itkChangeLabelImageFilterIUC3IUC3_Superclass):
    """


    Change Sets of Labels.

    This filter produces an output image whose pixels are either copied
    from the input if they are not being changed or are rewritten based on
    the change parameters

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    Tim Kelliher. GE Research, Niskayuna, NY.

    This work was supported by a grant from DARPA, executed by the U.S.
    Army Medical Research and Materiel Command/TATRC Assistance Agreement,
    Contract::W81XWH-05-2-0059.

    C++ includes: itkChangeLabelImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkChangeLabelImageFilterIUC3IUC3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkChangeLabelImageFilterIUC3IUC3 self) -> itkChangeLabelImageFilterIUC3IUC3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Clone(self)


    def SetChange(self, original, result):
        """
        SetChange(itkChangeLabelImageFilterIUC3IUC3 self, unsigned char const & original, unsigned char const & result)

        Set up a change of a
        single label 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_SetChange(self, original, result)


    def SetChangeMap(self, changeMap):
        """
        SetChangeMap(itkChangeLabelImageFilterIUC3IUC3 self, mapUCUC changeMap)

        Set the entire change
        map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_SetChangeMap(self, changeMap)


    def ClearChangeMap(self):
        """
        ClearChangeMap(itkChangeLabelImageFilterIUC3IUC3 self)

        Clears the entire
        change map 
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_ClearChangeMap(self)

    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_PixelTypeComparable
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC3IUC3"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkChangeLabelImageFilterIUC3IUC3 self) -> itkChangeLabelImageFilterIUC3IUC3"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC3IUC3

        Create a new object of the class itkChangeLabelImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkChangeLabelImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkChangeLabelImageFilterIUC3IUC3.Clone = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Clone, None, itkChangeLabelImageFilterIUC3IUC3)
itkChangeLabelImageFilterIUC3IUC3.SetChange = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_SetChange, None, itkChangeLabelImageFilterIUC3IUC3)
itkChangeLabelImageFilterIUC3IUC3.SetChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_SetChangeMap, None, itkChangeLabelImageFilterIUC3IUC3)
itkChangeLabelImageFilterIUC3IUC3.ClearChangeMap = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_ClearChangeMap, None, itkChangeLabelImageFilterIUC3IUC3)
itkChangeLabelImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_GetPointer, None, itkChangeLabelImageFilterIUC3IUC3)
itkChangeLabelImageFilterIUC3IUC3_swigregister = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_swigregister
itkChangeLabelImageFilterIUC3IUC3_swigregister(itkChangeLabelImageFilterIUC3IUC3)

def itkChangeLabelImageFilterIUC3IUC3___New_orig__():
    """itkChangeLabelImageFilterIUC3IUC3___New_orig__() -> itkChangeLabelImageFilterIUC3IUC3_Pointer"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3___New_orig__()

def itkChangeLabelImageFilterIUC3IUC3_cast(obj):
    """itkChangeLabelImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkChangeLabelImageFilterIUC3IUC3"""
    return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_cast(obj)



