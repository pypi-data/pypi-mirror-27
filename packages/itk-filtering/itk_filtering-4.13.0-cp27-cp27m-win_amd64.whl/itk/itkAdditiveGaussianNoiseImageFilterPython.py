# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkAdditiveGaussianNoiseImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkAdditiveGaussianNoiseImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkAdditiveGaussianNoiseImageFilterPython')
    _itkAdditiveGaussianNoiseImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAdditiveGaussianNoiseImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAdditiveGaussianNoiseImageFilterPython
            return _itkAdditiveGaussianNoiseImageFilterPython
        try:
            _mod = imp.load_module('_itkAdditiveGaussianNoiseImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkAdditiveGaussianNoiseImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAdditiveGaussianNoiseImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkNoiseBaseImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImagePython
import stdcomplexPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkAdditiveGaussianNoiseImageFilterIF3IF3_New():
  return itkAdditiveGaussianNoiseImageFilterIF3IF3.New()


def itkAdditiveGaussianNoiseImageFilterIF2IF2_New():
  return itkAdditiveGaussianNoiseImageFilterIF2IF2.New()


def itkAdditiveGaussianNoiseImageFilterIUC3IUC3_New():
  return itkAdditiveGaussianNoiseImageFilterIUC3IUC3.New()


def itkAdditiveGaussianNoiseImageFilterIUC2IUC2_New():
  return itkAdditiveGaussianNoiseImageFilterIUC2IUC2.New()


def itkAdditiveGaussianNoiseImageFilterISS3ISS3_New():
  return itkAdditiveGaussianNoiseImageFilterISS3ISS3.New()


def itkAdditiveGaussianNoiseImageFilterISS2ISS2_New():
  return itkAdditiveGaussianNoiseImageFilterISS2ISS2.New()

class itkAdditiveGaussianNoiseImageFilterIF2IF2(itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2):
    """


    Alter an image with additive Gaussian white noise.

    Additive Gaussian white noise can be modeled as:

    $ I = I_0 + N $

    where $ I $ is the observed image, $ I_0 $ is the noise-free image and
    $ N $ is a normally distributed random variable of mean $ \\mu $ and
    variance $ \\sigma^2 $:

    $ N \\sim \\mathcal{N}(\\mu, \\sigma^2) $  The noise is
    independent of the pixel intensities.

    Gaetan Lehmann  This code was contributed in the Insight Journal paper
    "Noise Simulation".https://hdl.handle.net/10380/3158

    C++ includes: itkAdditiveGaussianNoiseImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkAdditiveGaussianNoiseImageFilterIF2IF2_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkAdditiveGaussianNoiseImageFilterIF2IF2 self) -> itkAdditiveGaussianNoiseImageFilterIF2IF2_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_Clone(self)


    def GetMean(self):
        """
        GetMean(itkAdditiveGaussianNoiseImageFilterIF2IF2 self) -> double

        Set/Get the mean of the
        Gaussian distribution. Defaults to 0.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetMean(self)


    def SetMean(self, _arg):
        """SetMean(itkAdditiveGaussianNoiseImageFilterIF2IF2 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetMean(self, _arg)


    def GetStandardDeviation(self):
        """
        GetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIF2IF2 self) -> double

        Set/Get the
        standard deviation of the Gaussian distribution. Defaults to 1.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetStandardDeviation(self)


    def SetStandardDeviation(self, _arg):
        """SetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIF2IF2 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetStandardDeviation(self, _arg)

    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIF2IF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF2IF2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkAdditiveGaussianNoiseImageFilterIF2IF2 self) -> itkAdditiveGaussianNoiseImageFilterIF2IF2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIF2IF2

        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIF2IF2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_Clone, None, itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetMean, None, itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetMean, None, itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetPointer, None, itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_swigregister
itkAdditiveGaussianNoiseImageFilterIF2IF2_swigregister(itkAdditiveGaussianNoiseImageFilterIF2IF2)

def itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__():
    """itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__() -> itkAdditiveGaussianNoiseImageFilterIF2IF2_Pointer"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(obj):
    """itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF2IF2"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(obj)

class itkAdditiveGaussianNoiseImageFilterIF3IF3(itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3):
    """


    Alter an image with additive Gaussian white noise.

    Additive Gaussian white noise can be modeled as:

    $ I = I_0 + N $

    where $ I $ is the observed image, $ I_0 $ is the noise-free image and
    $ N $ is a normally distributed random variable of mean $ \\mu $ and
    variance $ \\sigma^2 $:

    $ N \\sim \\mathcal{N}(\\mu, \\sigma^2) $  The noise is
    independent of the pixel intensities.

    Gaetan Lehmann  This code was contributed in the Insight Journal paper
    "Noise Simulation".https://hdl.handle.net/10380/3158

    C++ includes: itkAdditiveGaussianNoiseImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkAdditiveGaussianNoiseImageFilterIF3IF3_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkAdditiveGaussianNoiseImageFilterIF3IF3 self) -> itkAdditiveGaussianNoiseImageFilterIF3IF3_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_Clone(self)


    def GetMean(self):
        """
        GetMean(itkAdditiveGaussianNoiseImageFilterIF3IF3 self) -> double

        Set/Get the mean of the
        Gaussian distribution. Defaults to 0.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetMean(self)


    def SetMean(self, _arg):
        """SetMean(itkAdditiveGaussianNoiseImageFilterIF3IF3 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetMean(self, _arg)


    def GetStandardDeviation(self):
        """
        GetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIF3IF3 self) -> double

        Set/Get the
        standard deviation of the Gaussian distribution. Defaults to 1.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetStandardDeviation(self)


    def SetStandardDeviation(self, _arg):
        """SetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIF3IF3 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetStandardDeviation(self, _arg)

    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIF3IF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF3IF3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkAdditiveGaussianNoiseImageFilterIF3IF3 self) -> itkAdditiveGaussianNoiseImageFilterIF3IF3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIF3IF3

        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIF3IF3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_Clone, None, itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetMean, None, itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetMean, None, itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetPointer, None, itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_swigregister
itkAdditiveGaussianNoiseImageFilterIF3IF3_swigregister(itkAdditiveGaussianNoiseImageFilterIF3IF3)

def itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__():
    """itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__() -> itkAdditiveGaussianNoiseImageFilterIF3IF3_Pointer"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(obj):
    """itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF3IF3"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(obj)

class itkAdditiveGaussianNoiseImageFilterISS2ISS2(itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2):
    """


    Alter an image with additive Gaussian white noise.

    Additive Gaussian white noise can be modeled as:

    $ I = I_0 + N $

    where $ I $ is the observed image, $ I_0 $ is the noise-free image and
    $ N $ is a normally distributed random variable of mean $ \\mu $ and
    variance $ \\sigma^2 $:

    $ N \\sim \\mathcal{N}(\\mu, \\sigma^2) $  The noise is
    independent of the pixel intensities.

    Gaetan Lehmann  This code was contributed in the Insight Journal paper
    "Noise Simulation".https://hdl.handle.net/10380/3158

    C++ includes: itkAdditiveGaussianNoiseImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkAdditiveGaussianNoiseImageFilterISS2ISS2_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkAdditiveGaussianNoiseImageFilterISS2ISS2 self) -> itkAdditiveGaussianNoiseImageFilterISS2ISS2_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_Clone(self)


    def GetMean(self):
        """
        GetMean(itkAdditiveGaussianNoiseImageFilterISS2ISS2 self) -> double

        Set/Get the mean of the
        Gaussian distribution. Defaults to 0.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_GetMean(self)


    def SetMean(self, _arg):
        """SetMean(itkAdditiveGaussianNoiseImageFilterISS2ISS2 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_SetMean(self, _arg)


    def GetStandardDeviation(self):
        """
        GetStandardDeviation(itkAdditiveGaussianNoiseImageFilterISS2ISS2 self) -> double

        Set/Get the
        standard deviation of the Gaussian distribution. Defaults to 1.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_GetStandardDeviation(self)


    def SetStandardDeviation(self, _arg):
        """SetStandardDeviation(itkAdditiveGaussianNoiseImageFilterISS2ISS2 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_SetStandardDeviation(self, _arg)

    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterISS2ISS2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkAdditiveGaussianNoiseImageFilterISS2ISS2 self) -> itkAdditiveGaussianNoiseImageFilterISS2ISS2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterISS2ISS2

        Create a new object of the class itkAdditiveGaussianNoiseImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterISS2ISS2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_Clone, None, itkAdditiveGaussianNoiseImageFilterISS2ISS2)
itkAdditiveGaussianNoiseImageFilterISS2ISS2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_GetMean, None, itkAdditiveGaussianNoiseImageFilterISS2ISS2)
itkAdditiveGaussianNoiseImageFilterISS2ISS2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_SetMean, None, itkAdditiveGaussianNoiseImageFilterISS2ISS2)
itkAdditiveGaussianNoiseImageFilterISS2ISS2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_GetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterISS2ISS2)
itkAdditiveGaussianNoiseImageFilterISS2ISS2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_SetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterISS2ISS2)
itkAdditiveGaussianNoiseImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_GetPointer, None, itkAdditiveGaussianNoiseImageFilterISS2ISS2)
itkAdditiveGaussianNoiseImageFilterISS2ISS2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_swigregister
itkAdditiveGaussianNoiseImageFilterISS2ISS2_swigregister(itkAdditiveGaussianNoiseImageFilterISS2ISS2)

def itkAdditiveGaussianNoiseImageFilterISS2ISS2___New_orig__():
    """itkAdditiveGaussianNoiseImageFilterISS2ISS2___New_orig__() -> itkAdditiveGaussianNoiseImageFilterISS2ISS2_Pointer"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterISS2ISS2_cast(obj):
    """itkAdditiveGaussianNoiseImageFilterISS2ISS2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterISS2ISS2"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS2ISS2_cast(obj)

class itkAdditiveGaussianNoiseImageFilterISS3ISS3(itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3):
    """


    Alter an image with additive Gaussian white noise.

    Additive Gaussian white noise can be modeled as:

    $ I = I_0 + N $

    where $ I $ is the observed image, $ I_0 $ is the noise-free image and
    $ N $ is a normally distributed random variable of mean $ \\mu $ and
    variance $ \\sigma^2 $:

    $ N \\sim \\mathcal{N}(\\mu, \\sigma^2) $  The noise is
    independent of the pixel intensities.

    Gaetan Lehmann  This code was contributed in the Insight Journal paper
    "Noise Simulation".https://hdl.handle.net/10380/3158

    C++ includes: itkAdditiveGaussianNoiseImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkAdditiveGaussianNoiseImageFilterISS3ISS3_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkAdditiveGaussianNoiseImageFilterISS3ISS3 self) -> itkAdditiveGaussianNoiseImageFilterISS3ISS3_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_Clone(self)


    def GetMean(self):
        """
        GetMean(itkAdditiveGaussianNoiseImageFilterISS3ISS3 self) -> double

        Set/Get the mean of the
        Gaussian distribution. Defaults to 0.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_GetMean(self)


    def SetMean(self, _arg):
        """SetMean(itkAdditiveGaussianNoiseImageFilterISS3ISS3 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_SetMean(self, _arg)


    def GetStandardDeviation(self):
        """
        GetStandardDeviation(itkAdditiveGaussianNoiseImageFilterISS3ISS3 self) -> double

        Set/Get the
        standard deviation of the Gaussian distribution. Defaults to 1.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_GetStandardDeviation(self)


    def SetStandardDeviation(self, _arg):
        """SetStandardDeviation(itkAdditiveGaussianNoiseImageFilterISS3ISS3 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_SetStandardDeviation(self, _arg)

    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterISS3ISS3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkAdditiveGaussianNoiseImageFilterISS3ISS3 self) -> itkAdditiveGaussianNoiseImageFilterISS3ISS3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterISS3ISS3

        Create a new object of the class itkAdditiveGaussianNoiseImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterISS3ISS3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_Clone, None, itkAdditiveGaussianNoiseImageFilterISS3ISS3)
itkAdditiveGaussianNoiseImageFilterISS3ISS3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_GetMean, None, itkAdditiveGaussianNoiseImageFilterISS3ISS3)
itkAdditiveGaussianNoiseImageFilterISS3ISS3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_SetMean, None, itkAdditiveGaussianNoiseImageFilterISS3ISS3)
itkAdditiveGaussianNoiseImageFilterISS3ISS3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_GetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterISS3ISS3)
itkAdditiveGaussianNoiseImageFilterISS3ISS3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_SetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterISS3ISS3)
itkAdditiveGaussianNoiseImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_GetPointer, None, itkAdditiveGaussianNoiseImageFilterISS3ISS3)
itkAdditiveGaussianNoiseImageFilterISS3ISS3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_swigregister
itkAdditiveGaussianNoiseImageFilterISS3ISS3_swigregister(itkAdditiveGaussianNoiseImageFilterISS3ISS3)

def itkAdditiveGaussianNoiseImageFilterISS3ISS3___New_orig__():
    """itkAdditiveGaussianNoiseImageFilterISS3ISS3___New_orig__() -> itkAdditiveGaussianNoiseImageFilterISS3ISS3_Pointer"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterISS3ISS3_cast(obj):
    """itkAdditiveGaussianNoiseImageFilterISS3ISS3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterISS3ISS3"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterISS3ISS3_cast(obj)

class itkAdditiveGaussianNoiseImageFilterIUC2IUC2(itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2):
    """


    Alter an image with additive Gaussian white noise.

    Additive Gaussian white noise can be modeled as:

    $ I = I_0 + N $

    where $ I $ is the observed image, $ I_0 $ is the noise-free image and
    $ N $ is a normally distributed random variable of mean $ \\mu $ and
    variance $ \\sigma^2 $:

    $ N \\sim \\mathcal{N}(\\mu, \\sigma^2) $  The noise is
    independent of the pixel intensities.

    Gaetan Lehmann  This code was contributed in the Insight Journal paper
    "Noise Simulation".https://hdl.handle.net/10380/3158

    C++ includes: itkAdditiveGaussianNoiseImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkAdditiveGaussianNoiseImageFilterIUC2IUC2 self) -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_Clone(self)


    def GetMean(self):
        """
        GetMean(itkAdditiveGaussianNoiseImageFilterIUC2IUC2 self) -> double

        Set/Get the mean of the
        Gaussian distribution. Defaults to 0.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetMean(self)


    def SetMean(self, _arg):
        """SetMean(itkAdditiveGaussianNoiseImageFilterIUC2IUC2 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetMean(self, _arg)


    def GetStandardDeviation(self):
        """
        GetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIUC2IUC2 self) -> double

        Set/Get the
        standard deviation of the Gaussian distribution. Defaults to 1.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetStandardDeviation(self)


    def SetStandardDeviation(self, _arg):
        """SetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIUC2IUC2 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetStandardDeviation(self, _arg)

    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkAdditiveGaussianNoiseImageFilterIUC2IUC2 self) -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2

        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUC2IUC2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_Clone, None, itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetMean, None, itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetMean, None, itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetPointer, None, itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_swigregister
itkAdditiveGaussianNoiseImageFilterIUC2IUC2_swigregister(itkAdditiveGaussianNoiseImageFilterIUC2IUC2)

def itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__():
    """itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__() -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2_Pointer"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(obj):
    """itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(obj)

class itkAdditiveGaussianNoiseImageFilterIUC3IUC3(itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3):
    """


    Alter an image with additive Gaussian white noise.

    Additive Gaussian white noise can be modeled as:

    $ I = I_0 + N $

    where $ I $ is the observed image, $ I_0 $ is the noise-free image and
    $ N $ is a normally distributed random variable of mean $ \\mu $ and
    variance $ \\sigma^2 $:

    $ N \\sim \\mathcal{N}(\\mu, \\sigma^2) $  The noise is
    independent of the pixel intensities.

    Gaetan Lehmann  This code was contributed in the Insight Journal paper
    "Noise Simulation".https://hdl.handle.net/10380/3158

    C++ includes: itkAdditiveGaussianNoiseImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkAdditiveGaussianNoiseImageFilterIUC3IUC3 self) -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3_Pointer"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_Clone(self)


    def GetMean(self):
        """
        GetMean(itkAdditiveGaussianNoiseImageFilterIUC3IUC3 self) -> double

        Set/Get the mean of the
        Gaussian distribution. Defaults to 0.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetMean(self)


    def SetMean(self, _arg):
        """SetMean(itkAdditiveGaussianNoiseImageFilterIUC3IUC3 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetMean(self, _arg)


    def GetStandardDeviation(self):
        """
        GetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIUC3IUC3 self) -> double

        Set/Get the
        standard deviation of the Gaussian distribution. Defaults to 1.0. 
        """
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetStandardDeviation(self)


    def SetStandardDeviation(self, _arg):
        """SetStandardDeviation(itkAdditiveGaussianNoiseImageFilterIUC3IUC3 self, double const _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetStandardDeviation(self, _arg)

    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkAdditiveGaussianNoiseImageFilterIUC3IUC3 self) -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3

        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUC3IUC3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_Clone, None, itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetMean, None, itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetMean, None, itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetStandardDeviation, None, itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetPointer, None, itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_swigregister
itkAdditiveGaussianNoiseImageFilterIUC3IUC3_swigregister(itkAdditiveGaussianNoiseImageFilterIUC3IUC3)

def itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__():
    """itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__() -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3_Pointer"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(obj):
    """itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3"""
    return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(obj)



