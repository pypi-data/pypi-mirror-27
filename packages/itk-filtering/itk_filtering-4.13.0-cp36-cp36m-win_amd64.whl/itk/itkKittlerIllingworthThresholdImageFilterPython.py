# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkKittlerIllingworthThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkKittlerIllingworthThresholdImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkKittlerIllingworthThresholdImageFilterPython')
    _itkKittlerIllingworthThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkKittlerIllingworthThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkKittlerIllingworthThresholdImageFilterPython
            return _itkKittlerIllingworthThresholdImageFilterPython
        try:
            _mod = imp.load_module('_itkKittlerIllingworthThresholdImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkKittlerIllingworthThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkKittlerIllingworthThresholdImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkHistogramThresholdImageFilterPython
import itkImagePython
import itkCovariantVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import itkSizePython
import itkPointPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkArrayPython
import itkSamplePython
import itkSimpleDataObjectDecoratorPython

def itkKittlerIllingworthThresholdImageFilterIF3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterIF2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterIF3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterIF2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()


def itkKittlerIllingworthThresholdImageFilterIUC3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterIUC2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterIUC3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterIUC2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()


def itkKittlerIllingworthThresholdImageFilterISS3IUC3_New():
  return itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()


def itkKittlerIllingworthThresholdImageFilterISS2IUC2_New():
  return itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()


def itkKittlerIllingworthThresholdImageFilterISS3ISS3_New():
  return itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()


def itkKittlerIllingworthThresholdImageFilterISS2ISS2_New():
  return itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIF2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIF2ISS2)
itkKittlerIllingworthThresholdImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIF2ISS2)
itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2ISS2)

def itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIF2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterIF2IUC2)
itkKittlerIllingworthThresholdImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIF2IUC2)
itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2IUC2)

def itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIF3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIF3ISS3)
itkKittlerIllingworthThresholdImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIF3ISS3)
itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3ISS3)

def itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIF3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIF3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterIF3IUC3)
itkKittlerIllingworthThresholdImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIF3IUC3)
itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3IUC3)

def itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIF3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterISS2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterISS2ISS2)
itkKittlerIllingworthThresholdImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_GetPointer, None, itkKittlerIllingworthThresholdImageFilterISS2ISS2)
itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2ISS2)

def itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterISS2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterISS2IUC2)
itkKittlerIllingworthThresholdImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_GetPointer, None, itkKittlerIllingworthThresholdImageFilterISS2IUC2)
itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2IUC2)

def itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterISS3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterISS3ISS3)
itkKittlerIllingworthThresholdImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_GetPointer, None, itkKittlerIllingworthThresholdImageFilterISS3ISS3)
itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3ISS3)

def itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterISS3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterISS3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterISS3IUC3)
itkKittlerIllingworthThresholdImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_GetPointer, None, itkKittlerIllingworthThresholdImageFilterISS3IUC3)
itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3IUC3)

def itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterISS3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIUC2ISS2 self) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC2ISS2)
itkKittlerIllingworthThresholdImageFilterIUC2ISS2.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIUC2ISS2)
itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister
itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2ISS2)

def itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2ISS2 *":
    """itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIUC2IUC2 self) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC2IUC2)
itkKittlerIllingworthThresholdImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIUC2IUC2)
itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister
itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2IUC2)

def itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC2IUC2 *":
    """itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIUC3ISS3 self) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC3ISS3)
itkKittlerIllingworthThresholdImageFilterIUC3ISS3.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIUC3ISS3)
itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister
itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3ISS3)

def itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3ISS3 *":
    """itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(obj)

class itkKittlerIllingworthThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkKittlerIllingworthThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkKittlerIllingworthThresholdImageFilterIUC3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3 *":
        """GetPointer(itkKittlerIllingworthThresholdImageFilterIUC3IUC3 self) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkKittlerIllingworthThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Clone, None, itkKittlerIllingworthThresholdImageFilterIUC3IUC3)
itkKittlerIllingworthThresholdImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_GetPointer, None, itkKittlerIllingworthThresholdImageFilterIUC3IUC3)
itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister
itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3IUC3)

def itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__() -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer":
    """itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__()

def itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkKittlerIllingworthThresholdImageFilterIUC3IUC3 *":
    """itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3"""
    return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(obj)



