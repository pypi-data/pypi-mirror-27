# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkShanbhagThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkShanbhagThresholdImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkShanbhagThresholdImageFilterPython')
    _itkShanbhagThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkShanbhagThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkShanbhagThresholdImageFilterPython
            return _itkShanbhagThresholdImageFilterPython
        try:
            _mod = imp.load_module('_itkShanbhagThresholdImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkShanbhagThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkShanbhagThresholdImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkHistogramThresholdImageFilterPython
import itkImagePython
import itkCovariantVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import itkSizePython
import itkPointPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkArrayPython
import itkSamplePython
import itkSimpleDataObjectDecoratorPython

def itkShanbhagThresholdImageFilterIF3IUC3_New():
  return itkShanbhagThresholdImageFilterIF3IUC3.New()


def itkShanbhagThresholdImageFilterIF2IUC2_New():
  return itkShanbhagThresholdImageFilterIF2IUC2.New()


def itkShanbhagThresholdImageFilterIF3ISS3_New():
  return itkShanbhagThresholdImageFilterIF3ISS3.New()


def itkShanbhagThresholdImageFilterIF2ISS2_New():
  return itkShanbhagThresholdImageFilterIF2ISS2.New()


def itkShanbhagThresholdImageFilterIUC3IUC3_New():
  return itkShanbhagThresholdImageFilterIUC3IUC3.New()


def itkShanbhagThresholdImageFilterIUC2IUC2_New():
  return itkShanbhagThresholdImageFilterIUC2IUC2.New()


def itkShanbhagThresholdImageFilterIUC3ISS3_New():
  return itkShanbhagThresholdImageFilterIUC3ISS3.New()


def itkShanbhagThresholdImageFilterIUC2ISS2_New():
  return itkShanbhagThresholdImageFilterIUC2ISS2.New()


def itkShanbhagThresholdImageFilterISS3IUC3_New():
  return itkShanbhagThresholdImageFilterISS3IUC3.New()


def itkShanbhagThresholdImageFilterISS2IUC2_New():
  return itkShanbhagThresholdImageFilterISS2IUC2.New()


def itkShanbhagThresholdImageFilterISS3ISS3_New():
  return itkShanbhagThresholdImageFilterISS3ISS3.New()


def itkShanbhagThresholdImageFilterISS2ISS2_New():
  return itkShanbhagThresholdImageFilterISS2ISS2.New()

class itkShanbhagThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIF2ISS2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIF2ISS2 self) -> itkShanbhagThresholdImageFilterIF2ISS2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF2ISS2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIF2ISS2 *":
        """GetPointer(itkShanbhagThresholdImageFilterIF2ISS2 self) -> itkShanbhagThresholdImageFilterIF2ISS2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_Clone, None, itkShanbhagThresholdImageFilterIF2ISS2)
itkShanbhagThresholdImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_GetPointer, None, itkShanbhagThresholdImageFilterIF2ISS2)
itkShanbhagThresholdImageFilterIF2ISS2_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_swigregister
itkShanbhagThresholdImageFilterIF2ISS2_swigregister(itkShanbhagThresholdImageFilterIF2ISS2)

def itkShanbhagThresholdImageFilterIF2ISS2___New_orig__() -> "itkShanbhagThresholdImageFilterIF2ISS2_Pointer":
    """itkShanbhagThresholdImageFilterIF2ISS2___New_orig__() -> itkShanbhagThresholdImageFilterIF2ISS2_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2___New_orig__()

def itkShanbhagThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF2ISS2 *":
    """itkShanbhagThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF2ISS2"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2ISS2_cast(obj)

class itkShanbhagThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIF2IUC2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIF2IUC2 self) -> itkShanbhagThresholdImageFilterIF2IUC2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF2IUC2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIF2IUC2 *":
        """GetPointer(itkShanbhagThresholdImageFilterIF2IUC2 self) -> itkShanbhagThresholdImageFilterIF2IUC2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_Clone, None, itkShanbhagThresholdImageFilterIF2IUC2)
itkShanbhagThresholdImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_GetPointer, None, itkShanbhagThresholdImageFilterIF2IUC2)
itkShanbhagThresholdImageFilterIF2IUC2_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_swigregister
itkShanbhagThresholdImageFilterIF2IUC2_swigregister(itkShanbhagThresholdImageFilterIF2IUC2)

def itkShanbhagThresholdImageFilterIF2IUC2___New_orig__() -> "itkShanbhagThresholdImageFilterIF2IUC2_Pointer":
    """itkShanbhagThresholdImageFilterIF2IUC2___New_orig__() -> itkShanbhagThresholdImageFilterIF2IUC2_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2___New_orig__()

def itkShanbhagThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF2IUC2 *":
    """itkShanbhagThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF2IUC2"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF2IUC2_cast(obj)

class itkShanbhagThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIF3ISS3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIF3ISS3 self) -> itkShanbhagThresholdImageFilterIF3ISS3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF3ISS3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIF3ISS3 *":
        """GetPointer(itkShanbhagThresholdImageFilterIF3ISS3 self) -> itkShanbhagThresholdImageFilterIF3ISS3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_Clone, None, itkShanbhagThresholdImageFilterIF3ISS3)
itkShanbhagThresholdImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_GetPointer, None, itkShanbhagThresholdImageFilterIF3ISS3)
itkShanbhagThresholdImageFilterIF3ISS3_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_swigregister
itkShanbhagThresholdImageFilterIF3ISS3_swigregister(itkShanbhagThresholdImageFilterIF3ISS3)

def itkShanbhagThresholdImageFilterIF3ISS3___New_orig__() -> "itkShanbhagThresholdImageFilterIF3ISS3_Pointer":
    """itkShanbhagThresholdImageFilterIF3ISS3___New_orig__() -> itkShanbhagThresholdImageFilterIF3ISS3_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3___New_orig__()

def itkShanbhagThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF3ISS3 *":
    """itkShanbhagThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF3ISS3"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3ISS3_cast(obj)

class itkShanbhagThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIF3IUC3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIF3IUC3 self) -> itkShanbhagThresholdImageFilterIF3IUC3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF3IUC3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIF3IUC3 *":
        """GetPointer(itkShanbhagThresholdImageFilterIF3IUC3 self) -> itkShanbhagThresholdImageFilterIF3IUC3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIF3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_Clone, None, itkShanbhagThresholdImageFilterIF3IUC3)
itkShanbhagThresholdImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_GetPointer, None, itkShanbhagThresholdImageFilterIF3IUC3)
itkShanbhagThresholdImageFilterIF3IUC3_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_swigregister
itkShanbhagThresholdImageFilterIF3IUC3_swigregister(itkShanbhagThresholdImageFilterIF3IUC3)

def itkShanbhagThresholdImageFilterIF3IUC3___New_orig__() -> "itkShanbhagThresholdImageFilterIF3IUC3_Pointer":
    """itkShanbhagThresholdImageFilterIF3IUC3___New_orig__() -> itkShanbhagThresholdImageFilterIF3IUC3_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3___New_orig__()

def itkShanbhagThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIF3IUC3 *":
    """itkShanbhagThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIF3IUC3"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIF3IUC3_cast(obj)

class itkShanbhagThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterISS2ISS2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkShanbhagThresholdImageFilterISS2ISS2 self) -> itkShanbhagThresholdImageFilterISS2ISS2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS2ISS2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterISS2ISS2 *":
        """GetPointer(itkShanbhagThresholdImageFilterISS2ISS2 self) -> itkShanbhagThresholdImageFilterISS2ISS2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_Clone, None, itkShanbhagThresholdImageFilterISS2ISS2)
itkShanbhagThresholdImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_GetPointer, None, itkShanbhagThresholdImageFilterISS2ISS2)
itkShanbhagThresholdImageFilterISS2ISS2_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_swigregister
itkShanbhagThresholdImageFilterISS2ISS2_swigregister(itkShanbhagThresholdImageFilterISS2ISS2)

def itkShanbhagThresholdImageFilterISS2ISS2___New_orig__() -> "itkShanbhagThresholdImageFilterISS2ISS2_Pointer":
    """itkShanbhagThresholdImageFilterISS2ISS2___New_orig__() -> itkShanbhagThresholdImageFilterISS2ISS2_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2___New_orig__()

def itkShanbhagThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS2ISS2 *":
    """itkShanbhagThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS2ISS2"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2ISS2_cast(obj)

class itkShanbhagThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterISS2IUC2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkShanbhagThresholdImageFilterISS2IUC2 self) -> itkShanbhagThresholdImageFilterISS2IUC2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS2IUC2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterISS2IUC2 *":
        """GetPointer(itkShanbhagThresholdImageFilterISS2IUC2 self) -> itkShanbhagThresholdImageFilterISS2IUC2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_Clone, None, itkShanbhagThresholdImageFilterISS2IUC2)
itkShanbhagThresholdImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_GetPointer, None, itkShanbhagThresholdImageFilterISS2IUC2)
itkShanbhagThresholdImageFilterISS2IUC2_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_swigregister
itkShanbhagThresholdImageFilterISS2IUC2_swigregister(itkShanbhagThresholdImageFilterISS2IUC2)

def itkShanbhagThresholdImageFilterISS2IUC2___New_orig__() -> "itkShanbhagThresholdImageFilterISS2IUC2_Pointer":
    """itkShanbhagThresholdImageFilterISS2IUC2___New_orig__() -> itkShanbhagThresholdImageFilterISS2IUC2_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2___New_orig__()

def itkShanbhagThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS2IUC2 *":
    """itkShanbhagThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS2IUC2"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS2IUC2_cast(obj)

class itkShanbhagThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterISS3ISS3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkShanbhagThresholdImageFilterISS3ISS3 self) -> itkShanbhagThresholdImageFilterISS3ISS3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS3ISS3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterISS3ISS3 *":
        """GetPointer(itkShanbhagThresholdImageFilterISS3ISS3 self) -> itkShanbhagThresholdImageFilterISS3ISS3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_Clone, None, itkShanbhagThresholdImageFilterISS3ISS3)
itkShanbhagThresholdImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_GetPointer, None, itkShanbhagThresholdImageFilterISS3ISS3)
itkShanbhagThresholdImageFilterISS3ISS3_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_swigregister
itkShanbhagThresholdImageFilterISS3ISS3_swigregister(itkShanbhagThresholdImageFilterISS3ISS3)

def itkShanbhagThresholdImageFilterISS3ISS3___New_orig__() -> "itkShanbhagThresholdImageFilterISS3ISS3_Pointer":
    """itkShanbhagThresholdImageFilterISS3ISS3___New_orig__() -> itkShanbhagThresholdImageFilterISS3ISS3_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3___New_orig__()

def itkShanbhagThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS3ISS3 *":
    """itkShanbhagThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS3ISS3"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3ISS3_cast(obj)

class itkShanbhagThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterISS3IUC3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkShanbhagThresholdImageFilterISS3IUC3 self) -> itkShanbhagThresholdImageFilterISS3IUC3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS3IUC3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterISS3IUC3 *":
        """GetPointer(itkShanbhagThresholdImageFilterISS3IUC3 self) -> itkShanbhagThresholdImageFilterISS3IUC3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterISS3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_Clone, None, itkShanbhagThresholdImageFilterISS3IUC3)
itkShanbhagThresholdImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_GetPointer, None, itkShanbhagThresholdImageFilterISS3IUC3)
itkShanbhagThresholdImageFilterISS3IUC3_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_swigregister
itkShanbhagThresholdImageFilterISS3IUC3_swigregister(itkShanbhagThresholdImageFilterISS3IUC3)

def itkShanbhagThresholdImageFilterISS3IUC3___New_orig__() -> "itkShanbhagThresholdImageFilterISS3IUC3_Pointer":
    """itkShanbhagThresholdImageFilterISS3IUC3___New_orig__() -> itkShanbhagThresholdImageFilterISS3IUC3_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3___New_orig__()

def itkShanbhagThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterISS3IUC3 *":
    """itkShanbhagThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterISS3IUC3"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterISS3IUC3_cast(obj)

class itkShanbhagThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIUC2ISS2 self) -> itkShanbhagThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC2ISS2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIUC2ISS2 *":
        """GetPointer(itkShanbhagThresholdImageFilterIUC2ISS2 self) -> itkShanbhagThresholdImageFilterIUC2ISS2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC2ISS2

        Create a new object of the class itkShanbhagThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_Clone, None, itkShanbhagThresholdImageFilterIUC2ISS2)
itkShanbhagThresholdImageFilterIUC2ISS2.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_GetPointer, None, itkShanbhagThresholdImageFilterIUC2ISS2)
itkShanbhagThresholdImageFilterIUC2ISS2_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_swigregister
itkShanbhagThresholdImageFilterIUC2ISS2_swigregister(itkShanbhagThresholdImageFilterIUC2ISS2)

def itkShanbhagThresholdImageFilterIUC2ISS2___New_orig__() -> "itkShanbhagThresholdImageFilterIUC2ISS2_Pointer":
    """itkShanbhagThresholdImageFilterIUC2ISS2___New_orig__() -> itkShanbhagThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2___New_orig__()

def itkShanbhagThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC2ISS2 *":
    """itkShanbhagThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC2ISS2"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2ISS2_cast(obj)

class itkShanbhagThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIUC2IUC2 self) -> itkShanbhagThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC2IUC2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIUC2IUC2 *":
        """GetPointer(itkShanbhagThresholdImageFilterIUC2IUC2 self) -> itkShanbhagThresholdImageFilterIUC2IUC2"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC2IUC2

        Create a new object of the class itkShanbhagThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_Clone, None, itkShanbhagThresholdImageFilterIUC2IUC2)
itkShanbhagThresholdImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_GetPointer, None, itkShanbhagThresholdImageFilterIUC2IUC2)
itkShanbhagThresholdImageFilterIUC2IUC2_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_swigregister
itkShanbhagThresholdImageFilterIUC2IUC2_swigregister(itkShanbhagThresholdImageFilterIUC2IUC2)

def itkShanbhagThresholdImageFilterIUC2IUC2___New_orig__() -> "itkShanbhagThresholdImageFilterIUC2IUC2_Pointer":
    """itkShanbhagThresholdImageFilterIUC2IUC2___New_orig__() -> itkShanbhagThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2___New_orig__()

def itkShanbhagThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC2IUC2 *":
    """itkShanbhagThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC2IUC2"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC2IUC2_cast(obj)

class itkShanbhagThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIUC3ISS3 self) -> itkShanbhagThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC3ISS3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIUC3ISS3 *":
        """GetPointer(itkShanbhagThresholdImageFilterIUC3ISS3 self) -> itkShanbhagThresholdImageFilterIUC3ISS3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC3ISS3

        Create a new object of the class itkShanbhagThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_Clone, None, itkShanbhagThresholdImageFilterIUC3ISS3)
itkShanbhagThresholdImageFilterIUC3ISS3.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_GetPointer, None, itkShanbhagThresholdImageFilterIUC3ISS3)
itkShanbhagThresholdImageFilterIUC3ISS3_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_swigregister
itkShanbhagThresholdImageFilterIUC3ISS3_swigregister(itkShanbhagThresholdImageFilterIUC3ISS3)

def itkShanbhagThresholdImageFilterIUC3ISS3___New_orig__() -> "itkShanbhagThresholdImageFilterIUC3ISS3_Pointer":
    """itkShanbhagThresholdImageFilterIUC3ISS3___New_orig__() -> itkShanbhagThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3___New_orig__()

def itkShanbhagThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC3ISS3 *":
    """itkShanbhagThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC3ISS3"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3ISS3_cast(obj)

class itkShanbhagThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the Shanbhag Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the ShanbhagThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkShanbhagThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkShanbhagThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkShanbhagThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkShanbhagThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkShanbhagThresholdImageFilterIUC3IUC3 self) -> itkShanbhagThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkShanbhagThresholdImageFilterPython.delete_itkShanbhagThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC3IUC3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkShanbhagThresholdImageFilterIUC3IUC3 *":
        """GetPointer(itkShanbhagThresholdImageFilterIUC3IUC3 self) -> itkShanbhagThresholdImageFilterIUC3IUC3"""
        return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkShanbhagThresholdImageFilterIUC3IUC3

        Create a new object of the class itkShanbhagThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShanbhagThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkShanbhagThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShanbhagThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShanbhagThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_Clone, None, itkShanbhagThresholdImageFilterIUC3IUC3)
itkShanbhagThresholdImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_GetPointer, None, itkShanbhagThresholdImageFilterIUC3IUC3)
itkShanbhagThresholdImageFilterIUC3IUC3_swigregister = _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_swigregister
itkShanbhagThresholdImageFilterIUC3IUC3_swigregister(itkShanbhagThresholdImageFilterIUC3IUC3)

def itkShanbhagThresholdImageFilterIUC3IUC3___New_orig__() -> "itkShanbhagThresholdImageFilterIUC3IUC3_Pointer":
    """itkShanbhagThresholdImageFilterIUC3IUC3___New_orig__() -> itkShanbhagThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3___New_orig__()

def itkShanbhagThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkShanbhagThresholdImageFilterIUC3IUC3 *":
    """itkShanbhagThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkShanbhagThresholdImageFilterIUC3IUC3"""
    return _itkShanbhagThresholdImageFilterPython.itkShanbhagThresholdImageFilterIUC3IUC3_cast(obj)



