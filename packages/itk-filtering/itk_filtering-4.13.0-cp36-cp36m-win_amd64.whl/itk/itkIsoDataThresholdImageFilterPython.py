# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIsoDataThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkIsoDataThresholdImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkIsoDataThresholdImageFilterPython')
    _itkIsoDataThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIsoDataThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIsoDataThresholdImageFilterPython
            return _itkIsoDataThresholdImageFilterPython
        try:
            _mod = imp.load_module('_itkIsoDataThresholdImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkIsoDataThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIsoDataThresholdImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkHistogramThresholdImageFilterPython
import itkImagePython
import itkCovariantVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import itkSizePython
import itkPointPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkHistogramThresholdCalculatorPython
import itkHistogramPython
import itkArrayPython
import itkSamplePython
import itkSimpleDataObjectDecoratorPython

def itkIsoDataThresholdImageFilterIF3IUC3_New():
  return itkIsoDataThresholdImageFilterIF3IUC3.New()


def itkIsoDataThresholdImageFilterIF2IUC2_New():
  return itkIsoDataThresholdImageFilterIF2IUC2.New()


def itkIsoDataThresholdImageFilterIF3ISS3_New():
  return itkIsoDataThresholdImageFilterIF3ISS3.New()


def itkIsoDataThresholdImageFilterIF2ISS2_New():
  return itkIsoDataThresholdImageFilterIF2ISS2.New()


def itkIsoDataThresholdImageFilterIUC3IUC3_New():
  return itkIsoDataThresholdImageFilterIUC3IUC3.New()


def itkIsoDataThresholdImageFilterIUC2IUC2_New():
  return itkIsoDataThresholdImageFilterIUC2IUC2.New()


def itkIsoDataThresholdImageFilterIUC3ISS3_New():
  return itkIsoDataThresholdImageFilterIUC3ISS3.New()


def itkIsoDataThresholdImageFilterIUC2ISS2_New():
  return itkIsoDataThresholdImageFilterIUC2ISS2.New()


def itkIsoDataThresholdImageFilterISS3IUC3_New():
  return itkIsoDataThresholdImageFilterISS3IUC3.New()


def itkIsoDataThresholdImageFilterISS2IUC2_New():
  return itkIsoDataThresholdImageFilterISS2IUC2.New()


def itkIsoDataThresholdImageFilterISS3ISS3_New():
  return itkIsoDataThresholdImageFilterISS3ISS3.New()


def itkIsoDataThresholdImageFilterISS2ISS2_New():
  return itkIsoDataThresholdImageFilterISS2ISS2.New()

class itkIsoDataThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF2ISS2 self) -> itkIsoDataThresholdImageFilterIF2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIF2ISS2 *":
        """GetPointer(itkIsoDataThresholdImageFilterIF2ISS2 self) -> itkIsoDataThresholdImageFilterIF2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_Clone, None, itkIsoDataThresholdImageFilterIF2ISS2)
itkIsoDataThresholdImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_GetPointer, None, itkIsoDataThresholdImageFilterIF2ISS2)
itkIsoDataThresholdImageFilterIF2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_swigregister
itkIsoDataThresholdImageFilterIF2ISS2_swigregister(itkIsoDataThresholdImageFilterIF2ISS2)

def itkIsoDataThresholdImageFilterIF2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterIF2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterIF2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterIF2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2ISS2 *":
    """itkIsoDataThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF2IUC2 self) -> itkIsoDataThresholdImageFilterIF2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIF2IUC2 *":
        """GetPointer(itkIsoDataThresholdImageFilterIF2IUC2 self) -> itkIsoDataThresholdImageFilterIF2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_Clone, None, itkIsoDataThresholdImageFilterIF2IUC2)
itkIsoDataThresholdImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_GetPointer, None, itkIsoDataThresholdImageFilterIF2IUC2)
itkIsoDataThresholdImageFilterIF2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_swigregister
itkIsoDataThresholdImageFilterIF2IUC2_swigregister(itkIsoDataThresholdImageFilterIF2IUC2)

def itkIsoDataThresholdImageFilterIF2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterIF2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterIF2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterIF2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF2IUC2 *":
    """itkIsoDataThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF3ISS3 self) -> itkIsoDataThresholdImageFilterIF3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIF3ISS3 *":
        """GetPointer(itkIsoDataThresholdImageFilterIF3ISS3 self) -> itkIsoDataThresholdImageFilterIF3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_Clone, None, itkIsoDataThresholdImageFilterIF3ISS3)
itkIsoDataThresholdImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_GetPointer, None, itkIsoDataThresholdImageFilterIF3ISS3)
itkIsoDataThresholdImageFilterIF3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_swigregister
itkIsoDataThresholdImageFilterIF3ISS3_swigregister(itkIsoDataThresholdImageFilterIF3ISS3)

def itkIsoDataThresholdImageFilterIF3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterIF3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterIF3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterIF3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3ISS3 *":
    """itkIsoDataThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIF3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIF3IUC3 self) -> itkIsoDataThresholdImageFilterIF3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIF3IUC3 *":
        """GetPointer(itkIsoDataThresholdImageFilterIF3IUC3 self) -> itkIsoDataThresholdImageFilterIF3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIF3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_Clone, None, itkIsoDataThresholdImageFilterIF3IUC3)
itkIsoDataThresholdImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_GetPointer, None, itkIsoDataThresholdImageFilterIF3IUC3)
itkIsoDataThresholdImageFilterIF3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_swigregister
itkIsoDataThresholdImageFilterIF3IUC3_swigregister(itkIsoDataThresholdImageFilterIF3IUC3)

def itkIsoDataThresholdImageFilterIF3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterIF3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterIF3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterIF3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIF3IUC3 *":
    """itkIsoDataThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIF3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIF3IUC3_cast(obj)

class itkIsoDataThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS2ISS2 self) -> itkIsoDataThresholdImageFilterISS2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterISS2ISS2 *":
        """GetPointer(itkIsoDataThresholdImageFilterISS2ISS2 self) -> itkIsoDataThresholdImageFilterISS2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_Clone, None, itkIsoDataThresholdImageFilterISS2ISS2)
itkIsoDataThresholdImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_GetPointer, None, itkIsoDataThresholdImageFilterISS2ISS2)
itkIsoDataThresholdImageFilterISS2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_swigregister
itkIsoDataThresholdImageFilterISS2ISS2_swigregister(itkIsoDataThresholdImageFilterISS2ISS2)

def itkIsoDataThresholdImageFilterISS2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterISS2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterISS2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterISS2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2ISS2 *":
    """itkIsoDataThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS2IUC2 self) -> itkIsoDataThresholdImageFilterISS2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterISS2IUC2 *":
        """GetPointer(itkIsoDataThresholdImageFilterISS2IUC2 self) -> itkIsoDataThresholdImageFilterISS2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_Clone, None, itkIsoDataThresholdImageFilterISS2IUC2)
itkIsoDataThresholdImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_GetPointer, None, itkIsoDataThresholdImageFilterISS2IUC2)
itkIsoDataThresholdImageFilterISS2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_swigregister
itkIsoDataThresholdImageFilterISS2IUC2_swigregister(itkIsoDataThresholdImageFilterISS2IUC2)

def itkIsoDataThresholdImageFilterISS2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterISS2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterISS2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterISS2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS2IUC2 *":
    """itkIsoDataThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS3ISS3 self) -> itkIsoDataThresholdImageFilterISS3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterISS3ISS3 *":
        """GetPointer(itkIsoDataThresholdImageFilterISS3ISS3 self) -> itkIsoDataThresholdImageFilterISS3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_Clone, None, itkIsoDataThresholdImageFilterISS3ISS3)
itkIsoDataThresholdImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_GetPointer, None, itkIsoDataThresholdImageFilterISS3ISS3)
itkIsoDataThresholdImageFilterISS3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_swigregister
itkIsoDataThresholdImageFilterISS3ISS3_swigregister(itkIsoDataThresholdImageFilterISS3ISS3)

def itkIsoDataThresholdImageFilterISS3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterISS3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterISS3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterISS3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3ISS3 *":
    """itkIsoDataThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterISS3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterISS3IUC3 self) -> itkIsoDataThresholdImageFilterISS3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterISS3IUC3 *":
        """GetPointer(itkIsoDataThresholdImageFilterISS3IUC3 self) -> itkIsoDataThresholdImageFilterISS3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterISS3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_Clone, None, itkIsoDataThresholdImageFilterISS3IUC3)
itkIsoDataThresholdImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_GetPointer, None, itkIsoDataThresholdImageFilterISS3IUC3)
itkIsoDataThresholdImageFilterISS3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_swigregister
itkIsoDataThresholdImageFilterISS3IUC3_swigregister(itkIsoDataThresholdImageFilterISS3IUC3)

def itkIsoDataThresholdImageFilterISS3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterISS3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterISS3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterISS3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterISS3IUC3 *":
    """itkIsoDataThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterISS3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterISS3IUC3_cast(obj)

class itkIsoDataThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC2ISS2 self) -> itkIsoDataThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIUC2ISS2 *":
        """GetPointer(itkIsoDataThresholdImageFilterIUC2ISS2 self) -> itkIsoDataThresholdImageFilterIUC2ISS2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2ISS2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_Clone, None, itkIsoDataThresholdImageFilterIUC2ISS2)
itkIsoDataThresholdImageFilterIUC2ISS2.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_GetPointer, None, itkIsoDataThresholdImageFilterIUC2ISS2)
itkIsoDataThresholdImageFilterIUC2ISS2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_swigregister
itkIsoDataThresholdImageFilterIUC2ISS2_swigregister(itkIsoDataThresholdImageFilterIUC2ISS2)

def itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__() -> "itkIsoDataThresholdImageFilterIUC2ISS2_Pointer":
    """itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__() -> itkIsoDataThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2___New_orig__()

def itkIsoDataThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2ISS2 *":
    """itkIsoDataThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2ISS2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2ISS2_cast(obj)

class itkIsoDataThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC2IUC2 self) -> itkIsoDataThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIUC2IUC2 *":
        """GetPointer(itkIsoDataThresholdImageFilterIUC2IUC2 self) -> itkIsoDataThresholdImageFilterIUC2IUC2"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC2IUC2

        Create a new object of the class itkIsoDataThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_Clone, None, itkIsoDataThresholdImageFilterIUC2IUC2)
itkIsoDataThresholdImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_GetPointer, None, itkIsoDataThresholdImageFilterIUC2IUC2)
itkIsoDataThresholdImageFilterIUC2IUC2_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_swigregister
itkIsoDataThresholdImageFilterIUC2IUC2_swigregister(itkIsoDataThresholdImageFilterIUC2IUC2)

def itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__() -> "itkIsoDataThresholdImageFilterIUC2IUC2_Pointer":
    """itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__() -> itkIsoDataThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2___New_orig__()

def itkIsoDataThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC2IUC2 *":
    """itkIsoDataThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC2IUC2"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC2IUC2_cast(obj)

class itkIsoDataThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC3ISS3 self) -> itkIsoDataThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIUC3ISS3 *":
        """GetPointer(itkIsoDataThresholdImageFilterIUC3ISS3 self) -> itkIsoDataThresholdImageFilterIUC3ISS3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3ISS3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_Clone, None, itkIsoDataThresholdImageFilterIUC3ISS3)
itkIsoDataThresholdImageFilterIUC3ISS3.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_GetPointer, None, itkIsoDataThresholdImageFilterIUC3ISS3)
itkIsoDataThresholdImageFilterIUC3ISS3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_swigregister
itkIsoDataThresholdImageFilterIUC3ISS3_swigregister(itkIsoDataThresholdImageFilterIUC3ISS3)

def itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__() -> "itkIsoDataThresholdImageFilterIUC3ISS3_Pointer":
    """itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__() -> itkIsoDataThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3___New_orig__()

def itkIsoDataThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3ISS3 *":
    """itkIsoDataThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3ISS3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3ISS3_cast(obj)

class itkIsoDataThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the IsoData Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the IsoDataThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkIsoDataThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIsoDataThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkIsoDataThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIsoDataThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkIsoDataThresholdImageFilterIUC3IUC3 self) -> itkIsoDataThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkIsoDataThresholdImageFilterPython.delete_itkIsoDataThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIsoDataThresholdImageFilterIUC3IUC3 *":
        """GetPointer(itkIsoDataThresholdImageFilterIUC3IUC3 self) -> itkIsoDataThresholdImageFilterIUC3IUC3"""
        return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdImageFilterIUC3IUC3

        Create a new object of the class itkIsoDataThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIsoDataThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIsoDataThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_Clone, None, itkIsoDataThresholdImageFilterIUC3IUC3)
itkIsoDataThresholdImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_GetPointer, None, itkIsoDataThresholdImageFilterIUC3IUC3)
itkIsoDataThresholdImageFilterIUC3IUC3_swigregister = _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_swigregister
itkIsoDataThresholdImageFilterIUC3IUC3_swigregister(itkIsoDataThresholdImageFilterIUC3IUC3)

def itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__() -> "itkIsoDataThresholdImageFilterIUC3IUC3_Pointer":
    """itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__() -> itkIsoDataThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3___New_orig__()

def itkIsoDataThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkIsoDataThresholdImageFilterIUC3IUC3 *":
    """itkIsoDataThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkIsoDataThresholdImageFilterIUC3IUC3"""
    return _itkIsoDataThresholdImageFilterPython.itkIsoDataThresholdImageFilterIUC3IUC3_cast(obj)



