# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHuangThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkHuangThresholdImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkHuangThresholdImageFilterPython')
    _itkHuangThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHuangThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHuangThresholdImageFilterPython
            return _itkHuangThresholdImageFilterPython
        try:
            _mod = imp.load_module('_itkHuangThresholdImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkHuangThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHuangThresholdImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdImageFilterPython
import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkRGBPixelPython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkIndexPython
import itkPointPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkImageRegionPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkHistogramThresholdCalculatorPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython
import itkHistogramPython
import itkSamplePython

def itkHuangThresholdImageFilterIF3IUC3_New():
  return itkHuangThresholdImageFilterIF3IUC3.New()


def itkHuangThresholdImageFilterIF2IUC2_New():
  return itkHuangThresholdImageFilterIF2IUC2.New()


def itkHuangThresholdImageFilterIF3ISS3_New():
  return itkHuangThresholdImageFilterIF3ISS3.New()


def itkHuangThresholdImageFilterIF2ISS2_New():
  return itkHuangThresholdImageFilterIF2ISS2.New()


def itkHuangThresholdImageFilterIUC3IUC3_New():
  return itkHuangThresholdImageFilterIUC3IUC3.New()


def itkHuangThresholdImageFilterIUC2IUC2_New():
  return itkHuangThresholdImageFilterIUC2IUC2.New()


def itkHuangThresholdImageFilterIUC3ISS3_New():
  return itkHuangThresholdImageFilterIUC3ISS3.New()


def itkHuangThresholdImageFilterIUC2ISS2_New():
  return itkHuangThresholdImageFilterIUC2ISS2.New()


def itkHuangThresholdImageFilterISS3IUC3_New():
  return itkHuangThresholdImageFilterISS3IUC3.New()


def itkHuangThresholdImageFilterISS2IUC2_New():
  return itkHuangThresholdImageFilterISS2IUC2.New()


def itkHuangThresholdImageFilterISS3ISS3_New():
  return itkHuangThresholdImageFilterISS3ISS3.New()


def itkHuangThresholdImageFilterISS2ISS2_New():
  return itkHuangThresholdImageFilterISS2ISS2.New()

class itkHuangThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIF2ISS2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkHuangThresholdImageFilterIF2ISS2 self) -> itkHuangThresholdImageFilterIF2ISS2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF2ISS2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIF2ISS2 *":
        """GetPointer(itkHuangThresholdImageFilterIF2ISS2 self) -> itkHuangThresholdImageFilterIF2ISS2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF2ISS2

        Create a new object of the class itkHuangThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_Clone, None, itkHuangThresholdImageFilterIF2ISS2)
itkHuangThresholdImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_GetPointer, None, itkHuangThresholdImageFilterIF2ISS2)
itkHuangThresholdImageFilterIF2ISS2_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_swigregister
itkHuangThresholdImageFilterIF2ISS2_swigregister(itkHuangThresholdImageFilterIF2ISS2)

def itkHuangThresholdImageFilterIF2ISS2___New_orig__() -> "itkHuangThresholdImageFilterIF2ISS2_Pointer":
    """itkHuangThresholdImageFilterIF2ISS2___New_orig__() -> itkHuangThresholdImageFilterIF2ISS2_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2___New_orig__()

def itkHuangThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF2ISS2 *":
    """itkHuangThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF2ISS2"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2ISS2_cast(obj)

class itkHuangThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIF2IUC2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkHuangThresholdImageFilterIF2IUC2 self) -> itkHuangThresholdImageFilterIF2IUC2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF2IUC2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIF2IUC2 *":
        """GetPointer(itkHuangThresholdImageFilterIF2IUC2 self) -> itkHuangThresholdImageFilterIF2IUC2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF2IUC2

        Create a new object of the class itkHuangThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_Clone, None, itkHuangThresholdImageFilterIF2IUC2)
itkHuangThresholdImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_GetPointer, None, itkHuangThresholdImageFilterIF2IUC2)
itkHuangThresholdImageFilterIF2IUC2_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_swigregister
itkHuangThresholdImageFilterIF2IUC2_swigregister(itkHuangThresholdImageFilterIF2IUC2)

def itkHuangThresholdImageFilterIF2IUC2___New_orig__() -> "itkHuangThresholdImageFilterIF2IUC2_Pointer":
    """itkHuangThresholdImageFilterIF2IUC2___New_orig__() -> itkHuangThresholdImageFilterIF2IUC2_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2___New_orig__()

def itkHuangThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF2IUC2 *":
    """itkHuangThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF2IUC2"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF2IUC2_cast(obj)

class itkHuangThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIF3ISS3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkHuangThresholdImageFilterIF3ISS3 self) -> itkHuangThresholdImageFilterIF3ISS3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF3ISS3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIF3ISS3 *":
        """GetPointer(itkHuangThresholdImageFilterIF3ISS3 self) -> itkHuangThresholdImageFilterIF3ISS3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF3ISS3

        Create a new object of the class itkHuangThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_Clone, None, itkHuangThresholdImageFilterIF3ISS3)
itkHuangThresholdImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_GetPointer, None, itkHuangThresholdImageFilterIF3ISS3)
itkHuangThresholdImageFilterIF3ISS3_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_swigregister
itkHuangThresholdImageFilterIF3ISS3_swigregister(itkHuangThresholdImageFilterIF3ISS3)

def itkHuangThresholdImageFilterIF3ISS3___New_orig__() -> "itkHuangThresholdImageFilterIF3ISS3_Pointer":
    """itkHuangThresholdImageFilterIF3ISS3___New_orig__() -> itkHuangThresholdImageFilterIF3ISS3_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3___New_orig__()

def itkHuangThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF3ISS3 *":
    """itkHuangThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF3ISS3"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3ISS3_cast(obj)

class itkHuangThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIF3IUC3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkHuangThresholdImageFilterIF3IUC3 self) -> itkHuangThresholdImageFilterIF3IUC3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF3IUC3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIF3IUC3 *":
        """GetPointer(itkHuangThresholdImageFilterIF3IUC3 self) -> itkHuangThresholdImageFilterIF3IUC3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIF3IUC3

        Create a new object of the class itkHuangThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_Clone, None, itkHuangThresholdImageFilterIF3IUC3)
itkHuangThresholdImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_GetPointer, None, itkHuangThresholdImageFilterIF3IUC3)
itkHuangThresholdImageFilterIF3IUC3_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_swigregister
itkHuangThresholdImageFilterIF3IUC3_swigregister(itkHuangThresholdImageFilterIF3IUC3)

def itkHuangThresholdImageFilterIF3IUC3___New_orig__() -> "itkHuangThresholdImageFilterIF3IUC3_Pointer":
    """itkHuangThresholdImageFilterIF3IUC3___New_orig__() -> itkHuangThresholdImageFilterIF3IUC3_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3___New_orig__()

def itkHuangThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIF3IUC3 *":
    """itkHuangThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIF3IUC3"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIF3IUC3_cast(obj)

class itkHuangThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterISS2ISS2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkHuangThresholdImageFilterISS2ISS2 self) -> itkHuangThresholdImageFilterISS2ISS2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS2ISS2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterISS2ISS2 *":
        """GetPointer(itkHuangThresholdImageFilterISS2ISS2 self) -> itkHuangThresholdImageFilterISS2ISS2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS2ISS2

        Create a new object of the class itkHuangThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_Clone, None, itkHuangThresholdImageFilterISS2ISS2)
itkHuangThresholdImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_GetPointer, None, itkHuangThresholdImageFilterISS2ISS2)
itkHuangThresholdImageFilterISS2ISS2_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_swigregister
itkHuangThresholdImageFilterISS2ISS2_swigregister(itkHuangThresholdImageFilterISS2ISS2)

def itkHuangThresholdImageFilterISS2ISS2___New_orig__() -> "itkHuangThresholdImageFilterISS2ISS2_Pointer":
    """itkHuangThresholdImageFilterISS2ISS2___New_orig__() -> itkHuangThresholdImageFilterISS2ISS2_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2___New_orig__()

def itkHuangThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS2ISS2 *":
    """itkHuangThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS2ISS2"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2ISS2_cast(obj)

class itkHuangThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterISS2IUC2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkHuangThresholdImageFilterISS2IUC2 self) -> itkHuangThresholdImageFilterISS2IUC2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS2IUC2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterISS2IUC2 *":
        """GetPointer(itkHuangThresholdImageFilterISS2IUC2 self) -> itkHuangThresholdImageFilterISS2IUC2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS2IUC2

        Create a new object of the class itkHuangThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_Clone, None, itkHuangThresholdImageFilterISS2IUC2)
itkHuangThresholdImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_GetPointer, None, itkHuangThresholdImageFilterISS2IUC2)
itkHuangThresholdImageFilterISS2IUC2_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_swigregister
itkHuangThresholdImageFilterISS2IUC2_swigregister(itkHuangThresholdImageFilterISS2IUC2)

def itkHuangThresholdImageFilterISS2IUC2___New_orig__() -> "itkHuangThresholdImageFilterISS2IUC2_Pointer":
    """itkHuangThresholdImageFilterISS2IUC2___New_orig__() -> itkHuangThresholdImageFilterISS2IUC2_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2___New_orig__()

def itkHuangThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS2IUC2 *":
    """itkHuangThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS2IUC2"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS2IUC2_cast(obj)

class itkHuangThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterISS3ISS3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkHuangThresholdImageFilterISS3ISS3 self) -> itkHuangThresholdImageFilterISS3ISS3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS3ISS3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterISS3ISS3 *":
        """GetPointer(itkHuangThresholdImageFilterISS3ISS3 self) -> itkHuangThresholdImageFilterISS3ISS3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS3ISS3

        Create a new object of the class itkHuangThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_Clone, None, itkHuangThresholdImageFilterISS3ISS3)
itkHuangThresholdImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_GetPointer, None, itkHuangThresholdImageFilterISS3ISS3)
itkHuangThresholdImageFilterISS3ISS3_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_swigregister
itkHuangThresholdImageFilterISS3ISS3_swigregister(itkHuangThresholdImageFilterISS3ISS3)

def itkHuangThresholdImageFilterISS3ISS3___New_orig__() -> "itkHuangThresholdImageFilterISS3ISS3_Pointer":
    """itkHuangThresholdImageFilterISS3ISS3___New_orig__() -> itkHuangThresholdImageFilterISS3ISS3_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3___New_orig__()

def itkHuangThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS3ISS3 *":
    """itkHuangThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS3ISS3"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3ISS3_cast(obj)

class itkHuangThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterISS3IUC3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkHuangThresholdImageFilterISS3IUC3 self) -> itkHuangThresholdImageFilterISS3IUC3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS3IUC3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterISS3IUC3 *":
        """GetPointer(itkHuangThresholdImageFilterISS3IUC3 self) -> itkHuangThresholdImageFilterISS3IUC3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterISS3IUC3

        Create a new object of the class itkHuangThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_Clone, None, itkHuangThresholdImageFilterISS3IUC3)
itkHuangThresholdImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_GetPointer, None, itkHuangThresholdImageFilterISS3IUC3)
itkHuangThresholdImageFilterISS3IUC3_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_swigregister
itkHuangThresholdImageFilterISS3IUC3_swigregister(itkHuangThresholdImageFilterISS3IUC3)

def itkHuangThresholdImageFilterISS3IUC3___New_orig__() -> "itkHuangThresholdImageFilterISS3IUC3_Pointer":
    """itkHuangThresholdImageFilterISS3IUC3___New_orig__() -> itkHuangThresholdImageFilterISS3IUC3_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3___New_orig__()

def itkHuangThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterISS3IUC3 *":
    """itkHuangThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkHuangThresholdImageFilterISS3IUC3"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterISS3IUC3_cast(obj)

class itkHuangThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIUC2ISS2_Pointer":
        """Clone(itkHuangThresholdImageFilterIUC2ISS2 self) -> itkHuangThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC2ISS2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIUC2ISS2 *":
        """GetPointer(itkHuangThresholdImageFilterIUC2ISS2 self) -> itkHuangThresholdImageFilterIUC2ISS2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC2ISS2

        Create a new object of the class itkHuangThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_Clone, None, itkHuangThresholdImageFilterIUC2ISS2)
itkHuangThresholdImageFilterIUC2ISS2.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_GetPointer, None, itkHuangThresholdImageFilterIUC2ISS2)
itkHuangThresholdImageFilterIUC2ISS2_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_swigregister
itkHuangThresholdImageFilterIUC2ISS2_swigregister(itkHuangThresholdImageFilterIUC2ISS2)

def itkHuangThresholdImageFilterIUC2ISS2___New_orig__() -> "itkHuangThresholdImageFilterIUC2ISS2_Pointer":
    """itkHuangThresholdImageFilterIUC2ISS2___New_orig__() -> itkHuangThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2___New_orig__()

def itkHuangThresholdImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC2ISS2 *":
    """itkHuangThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC2ISS2"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2ISS2_cast(obj)

class itkHuangThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkHuangThresholdImageFilterIUC2IUC2 self) -> itkHuangThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC2IUC2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIUC2IUC2 *":
        """GetPointer(itkHuangThresholdImageFilterIUC2IUC2 self) -> itkHuangThresholdImageFilterIUC2IUC2"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC2IUC2

        Create a new object of the class itkHuangThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_Clone, None, itkHuangThresholdImageFilterIUC2IUC2)
itkHuangThresholdImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_GetPointer, None, itkHuangThresholdImageFilterIUC2IUC2)
itkHuangThresholdImageFilterIUC2IUC2_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_swigregister
itkHuangThresholdImageFilterIUC2IUC2_swigregister(itkHuangThresholdImageFilterIUC2IUC2)

def itkHuangThresholdImageFilterIUC2IUC2___New_orig__() -> "itkHuangThresholdImageFilterIUC2IUC2_Pointer":
    """itkHuangThresholdImageFilterIUC2IUC2___New_orig__() -> itkHuangThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2___New_orig__()

def itkHuangThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC2IUC2 *":
    """itkHuangThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC2IUC2"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC2IUC2_cast(obj)

class itkHuangThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIUC3ISS3_Pointer":
        """Clone(itkHuangThresholdImageFilterIUC3ISS3 self) -> itkHuangThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC3ISS3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIUC3ISS3 *":
        """GetPointer(itkHuangThresholdImageFilterIUC3ISS3 self) -> itkHuangThresholdImageFilterIUC3ISS3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC3ISS3

        Create a new object of the class itkHuangThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_Clone, None, itkHuangThresholdImageFilterIUC3ISS3)
itkHuangThresholdImageFilterIUC3ISS3.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_GetPointer, None, itkHuangThresholdImageFilterIUC3ISS3)
itkHuangThresholdImageFilterIUC3ISS3_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_swigregister
itkHuangThresholdImageFilterIUC3ISS3_swigregister(itkHuangThresholdImageFilterIUC3ISS3)

def itkHuangThresholdImageFilterIUC3ISS3___New_orig__() -> "itkHuangThresholdImageFilterIUC3ISS3_Pointer":
    """itkHuangThresholdImageFilterIUC3ISS3___New_orig__() -> itkHuangThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3___New_orig__()

def itkHuangThresholdImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC3ISS3 *":
    """itkHuangThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC3ISS3"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3ISS3_cast(obj)

class itkHuangThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the Huang Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the HuangThresholdCalculator and applies that
    threshold to the input image using the BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter

    C++ includes: itkHuangThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHuangThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkHuangThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHuangThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkHuangThresholdImageFilterIUC3IUC3 self) -> itkHuangThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkHuangThresholdImageFilterPython.delete_itkHuangThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC3IUC3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHuangThresholdImageFilterIUC3IUC3 *":
        """GetPointer(itkHuangThresholdImageFilterIUC3IUC3 self) -> itkHuangThresholdImageFilterIUC3IUC3"""
        return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHuangThresholdImageFilterIUC3IUC3

        Create a new object of the class itkHuangThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHuangThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHuangThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHuangThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHuangThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_Clone, None, itkHuangThresholdImageFilterIUC3IUC3)
itkHuangThresholdImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_GetPointer, None, itkHuangThresholdImageFilterIUC3IUC3)
itkHuangThresholdImageFilterIUC3IUC3_swigregister = _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_swigregister
itkHuangThresholdImageFilterIUC3IUC3_swigregister(itkHuangThresholdImageFilterIUC3IUC3)

def itkHuangThresholdImageFilterIUC3IUC3___New_orig__() -> "itkHuangThresholdImageFilterIUC3IUC3_Pointer":
    """itkHuangThresholdImageFilterIUC3IUC3___New_orig__() -> itkHuangThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3___New_orig__()

def itkHuangThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkHuangThresholdImageFilterIUC3IUC3 *":
    """itkHuangThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkHuangThresholdImageFilterIUC3IUC3"""
    return _itkHuangThresholdImageFilterPython.itkHuangThresholdImageFilterIUC3IUC3_cast(obj)



