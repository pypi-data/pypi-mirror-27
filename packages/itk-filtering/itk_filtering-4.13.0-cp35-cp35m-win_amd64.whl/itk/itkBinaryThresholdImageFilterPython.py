# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkBinaryThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkBinaryThresholdImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkBinaryThresholdImageFilterPython')
    _itkBinaryThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkBinaryThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkBinaryThresholdImageFilterPython
            return _itkBinaryThresholdImageFilterPython
        try:
            _mod = imp.load_module('_itkBinaryThresholdImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkBinaryThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkBinaryThresholdImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkSimpleDataObjectDecoratorPython
import itkRGBPixelPython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkArrayPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkCovariantVectorPython
import itkImageRegionPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython

def itkBinaryThresholdImageFilterIF3IF3_New():
  return itkBinaryThresholdImageFilterIF3IF3.New()


def itkBinaryThresholdImageFilterIF3IF3_Superclass_New():
  return itkBinaryThresholdImageFilterIF3IF3_Superclass.New()


def itkBinaryThresholdImageFilterIF2IF2_New():
  return itkBinaryThresholdImageFilterIF2IF2.New()


def itkBinaryThresholdImageFilterIF2IF2_Superclass_New():
  return itkBinaryThresholdImageFilterIF2IF2_Superclass.New()


def itkBinaryThresholdImageFilterIF3ISS3_New():
  return itkBinaryThresholdImageFilterIF3ISS3.New()


def itkBinaryThresholdImageFilterIF3ISS3_Superclass_New():
  return itkBinaryThresholdImageFilterIF3ISS3_Superclass.New()


def itkBinaryThresholdImageFilterIF2ISS2_New():
  return itkBinaryThresholdImageFilterIF2ISS2.New()


def itkBinaryThresholdImageFilterIF2ISS2_Superclass_New():
  return itkBinaryThresholdImageFilterIF2ISS2_Superclass.New()


def itkBinaryThresholdImageFilterIF3IUC3_New():
  return itkBinaryThresholdImageFilterIF3IUC3.New()


def itkBinaryThresholdImageFilterIF3IUC3_Superclass_New():
  return itkBinaryThresholdImageFilterIF3IUC3_Superclass.New()


def itkBinaryThresholdImageFilterIF2IUC2_New():
  return itkBinaryThresholdImageFilterIF2IUC2.New()


def itkBinaryThresholdImageFilterIF2IUC2_Superclass_New():
  return itkBinaryThresholdImageFilterIF2IUC2_Superclass.New()


def itkBinaryThresholdImageFilterIUC3IUC3_New():
  return itkBinaryThresholdImageFilterIUC3IUC3.New()


def itkBinaryThresholdImageFilterIUC3IUC3_Superclass_New():
  return itkBinaryThresholdImageFilterIUC3IUC3_Superclass.New()


def itkBinaryThresholdImageFilterIUC2IUC2_New():
  return itkBinaryThresholdImageFilterIUC2IUC2.New()


def itkBinaryThresholdImageFilterIUC2IUC2_Superclass_New():
  return itkBinaryThresholdImageFilterIUC2IUC2_Superclass.New()


def itkBinaryThresholdImageFilterISS3ISS3_New():
  return itkBinaryThresholdImageFilterISS3ISS3.New()


def itkBinaryThresholdImageFilterISS3ISS3_Superclass_New():
  return itkBinaryThresholdImageFilterISS3ISS3_Superclass.New()


def itkBinaryThresholdImageFilterISS2ISS2_New():
  return itkBinaryThresholdImageFilterISS2ISS2.New()


def itkBinaryThresholdImageFilterISS2ISS2_Superclass_New():
  return itkBinaryThresholdImageFilterISS2ISS2_Superclass.New()


def itkBinaryThresholdImageFilterISS3IUC3_New():
  return itkBinaryThresholdImageFilterISS3IUC3.New()


def itkBinaryThresholdImageFilterISS3IUC3_Superclass_New():
  return itkBinaryThresholdImageFilterISS3IUC3_Superclass.New()


def itkBinaryThresholdImageFilterISS2IUC2_New():
  return itkBinaryThresholdImageFilterISS2IUC2.New()


def itkBinaryThresholdImageFilterISS2IUC2_Superclass_New():
  return itkBinaryThresholdImageFilterISS2IUC2_Superclass.New()

class itkBinaryThresholdImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkBinaryThresholdImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF2IF2_Superclass self) -> itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< float,float > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIF2IF2_Superclass self) -> itk::Functor::BinaryThreshold< float,float >
        GetFunctor(itkBinaryThresholdImageFilterIF2IF2_Superclass self) -> itk::Functor::BinaryThreshold< float,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< float,float > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIF2IF2_Superclass self, itk::Functor::BinaryThreshold< float,float > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IF2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF2IF2_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIF2IF2_Superclass self) -> itkBinaryThresholdImageFilterIF2IF2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IF2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_Clone, None, itkBinaryThresholdImageFilterIF2IF2_Superclass)
itkBinaryThresholdImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIF2IF2_Superclass)
itkBinaryThresholdImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIF2IF2_Superclass)
itkBinaryThresholdImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIF2IF2_Superclass)
itkBinaryThresholdImageFilterIF2IF2_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_swigregister
itkBinaryThresholdImageFilterIF2IF2_Superclass_swigregister(itkBinaryThresholdImageFilterIF2IF2_Superclass)

def itkBinaryThresholdImageFilterIF2IF2_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIF2IF2_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IF2_Superclass *":
    """itkBinaryThresholdImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IF2_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIF2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    """Proxy of C++ itkBinaryThresholdImageFilterIF2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF2ISS2_Superclass self) -> itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< float,short > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIF2ISS2_Superclass self) -> itk::Functor::BinaryThreshold< float,short >
        GetFunctor(itkBinaryThresholdImageFilterIF2ISS2_Superclass self) -> itk::Functor::BinaryThreshold< float,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< float,short > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIF2ISS2_Superclass self, itk::Functor::BinaryThreshold< float,short > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2ISS2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF2ISS2_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIF2ISS2_Superclass self) -> itkBinaryThresholdImageFilterIF2ISS2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2ISS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF2ISS2_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_Clone, None, itkBinaryThresholdImageFilterIF2ISS2_Superclass)
itkBinaryThresholdImageFilterIF2ISS2_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIF2ISS2_Superclass)
itkBinaryThresholdImageFilterIF2ISS2_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIF2ISS2_Superclass)
itkBinaryThresholdImageFilterIF2ISS2_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIF2ISS2_Superclass)
itkBinaryThresholdImageFilterIF2ISS2_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_swigregister
itkBinaryThresholdImageFilterIF2ISS2_Superclass_swigregister(itkBinaryThresholdImageFilterIF2ISS2_Superclass)

def itkBinaryThresholdImageFilterIF2ISS2_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIF2ISS2_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIF2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2ISS2_Superclass *":
    """itkBinaryThresholdImageFilterIF2ISS2_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2ISS2_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIF2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    """Proxy of C++ itkBinaryThresholdImageFilterIF2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF2IUC2_Superclass self) -> itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< float,unsigned char > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIF2IUC2_Superclass self) -> itk::Functor::BinaryThreshold< float,unsigned char >
        GetFunctor(itkBinaryThresholdImageFilterIF2IUC2_Superclass self) -> itk::Functor::BinaryThreshold< float,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< float,unsigned char > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIF2IUC2_Superclass self, itk::Functor::BinaryThreshold< float,unsigned char > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IUC2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF2IUC2_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIF2IUC2_Superclass self) -> itkBinaryThresholdImageFilterIF2IUC2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF2IUC2_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_Clone, None, itkBinaryThresholdImageFilterIF2IUC2_Superclass)
itkBinaryThresholdImageFilterIF2IUC2_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIF2IUC2_Superclass)
itkBinaryThresholdImageFilterIF2IUC2_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIF2IUC2_Superclass)
itkBinaryThresholdImageFilterIF2IUC2_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIF2IUC2_Superclass)
itkBinaryThresholdImageFilterIF2IUC2_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_swigregister
itkBinaryThresholdImageFilterIF2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterIF2IUC2_Superclass)

def itkBinaryThresholdImageFilterIF2IUC2_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIF2IUC2_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIF2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IUC2_Superclass *":
    """itkBinaryThresholdImageFilterIF2IUC2_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IUC2_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkBinaryThresholdImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF3IF3_Superclass self) -> itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< float,float > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIF3IF3_Superclass self) -> itk::Functor::BinaryThreshold< float,float >
        GetFunctor(itkBinaryThresholdImageFilterIF3IF3_Superclass self) -> itk::Functor::BinaryThreshold< float,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< float,float > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIF3IF3_Superclass self, itk::Functor::BinaryThreshold< float,float > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IF3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF3IF3_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIF3IF3_Superclass self) -> itkBinaryThresholdImageFilterIF3IF3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IF3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_Clone, None, itkBinaryThresholdImageFilterIF3IF3_Superclass)
itkBinaryThresholdImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIF3IF3_Superclass)
itkBinaryThresholdImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIF3IF3_Superclass)
itkBinaryThresholdImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIF3IF3_Superclass)
itkBinaryThresholdImageFilterIF3IF3_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_swigregister
itkBinaryThresholdImageFilterIF3IF3_Superclass_swigregister(itkBinaryThresholdImageFilterIF3IF3_Superclass)

def itkBinaryThresholdImageFilterIF3IF3_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIF3IF3_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IF3_Superclass *":
    """itkBinaryThresholdImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IF3_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIF3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    """Proxy of C++ itkBinaryThresholdImageFilterIF3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF3ISS3_Superclass self) -> itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< float,short > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIF3ISS3_Superclass self) -> itk::Functor::BinaryThreshold< float,short >
        GetFunctor(itkBinaryThresholdImageFilterIF3ISS3_Superclass self) -> itk::Functor::BinaryThreshold< float,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< float,short > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIF3ISS3_Superclass self, itk::Functor::BinaryThreshold< float,short > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3ISS3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF3ISS3_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIF3ISS3_Superclass self) -> itkBinaryThresholdImageFilterIF3ISS3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3ISS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF3ISS3_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_Clone, None, itkBinaryThresholdImageFilterIF3ISS3_Superclass)
itkBinaryThresholdImageFilterIF3ISS3_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIF3ISS3_Superclass)
itkBinaryThresholdImageFilterIF3ISS3_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIF3ISS3_Superclass)
itkBinaryThresholdImageFilterIF3ISS3_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIF3ISS3_Superclass)
itkBinaryThresholdImageFilterIF3ISS3_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_swigregister
itkBinaryThresholdImageFilterIF3ISS3_Superclass_swigregister(itkBinaryThresholdImageFilterIF3ISS3_Superclass)

def itkBinaryThresholdImageFilterIF3ISS3_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIF3ISS3_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIF3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3ISS3_Superclass *":
    """itkBinaryThresholdImageFilterIF3ISS3_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3ISS3_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIF3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    """Proxy of C++ itkBinaryThresholdImageFilterIF3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF3IUC3_Superclass self) -> itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< float,unsigned char > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIF3IUC3_Superclass self) -> itk::Functor::BinaryThreshold< float,unsigned char >
        GetFunctor(itkBinaryThresholdImageFilterIF3IUC3_Superclass self) -> itk::Functor::BinaryThreshold< float,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< float,unsigned char > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIF3IUC3_Superclass self, itk::Functor::BinaryThreshold< float,unsigned char > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IUC3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF3IUC3_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIF3IUC3_Superclass self) -> itkBinaryThresholdImageFilterIF3IUC3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF3IUC3_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_Clone, None, itkBinaryThresholdImageFilterIF3IUC3_Superclass)
itkBinaryThresholdImageFilterIF3IUC3_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIF3IUC3_Superclass)
itkBinaryThresholdImageFilterIF3IUC3_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIF3IUC3_Superclass)
itkBinaryThresholdImageFilterIF3IUC3_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIF3IUC3_Superclass)
itkBinaryThresholdImageFilterIF3IUC3_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_swigregister
itkBinaryThresholdImageFilterIF3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterIF3IUC3_Superclass)

def itkBinaryThresholdImageFilterIF3IUC3_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIF3IUC3_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIF3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IUC3_Superclass *":
    """itkBinaryThresholdImageFilterIF3IUC3_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IUC3_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_cast(obj)

class itkBinaryThresholdImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkBinaryThresholdImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS2ISS2_Superclass self) -> itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< short,short > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterISS2ISS2_Superclass self) -> itk::Functor::BinaryThreshold< short,short >
        GetFunctor(itkBinaryThresholdImageFilterISS2ISS2_Superclass self) -> itk::Functor::BinaryThreshold< short,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< short,short > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterISS2ISS2_Superclass self, itk::Functor::BinaryThreshold< short,short > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2ISS2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS2ISS2_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterISS2ISS2_Superclass self) -> itkBinaryThresholdImageFilterISS2ISS2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2ISS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_Clone, None, itkBinaryThresholdImageFilterISS2ISS2_Superclass)
itkBinaryThresholdImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterISS2ISS2_Superclass)
itkBinaryThresholdImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterISS2ISS2_Superclass)
itkBinaryThresholdImageFilterISS2ISS2_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_GetPointer, None, itkBinaryThresholdImageFilterISS2ISS2_Superclass)
itkBinaryThresholdImageFilterISS2ISS2_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_swigregister
itkBinaryThresholdImageFilterISS2ISS2_Superclass_swigregister(itkBinaryThresholdImageFilterISS2ISS2_Superclass)

def itkBinaryThresholdImageFilterISS2ISS2_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer":
    """itkBinaryThresholdImageFilterISS2ISS2_Superclass___New_orig__() -> itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass___New_orig__()

def itkBinaryThresholdImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2ISS2_Superclass *":
    """itkBinaryThresholdImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2ISS2_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_cast(obj)

class itkBinaryThresholdImageFilterISS2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    """Proxy of C++ itkBinaryThresholdImageFilterISS2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS2IUC2_Superclass self) -> itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< short,unsigned char > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterISS2IUC2_Superclass self) -> itk::Functor::BinaryThreshold< short,unsigned char >
        GetFunctor(itkBinaryThresholdImageFilterISS2IUC2_Superclass self) -> itk::Functor::BinaryThreshold< short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< short,unsigned char > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterISS2IUC2_Superclass self, itk::Functor::BinaryThreshold< short,unsigned char > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2IUC2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS2IUC2_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterISS2IUC2_Superclass self) -> itkBinaryThresholdImageFilterISS2IUC2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS2IUC2_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_Clone, None, itkBinaryThresholdImageFilterISS2IUC2_Superclass)
itkBinaryThresholdImageFilterISS2IUC2_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterISS2IUC2_Superclass)
itkBinaryThresholdImageFilterISS2IUC2_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterISS2IUC2_Superclass)
itkBinaryThresholdImageFilterISS2IUC2_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_GetPointer, None, itkBinaryThresholdImageFilterISS2IUC2_Superclass)
itkBinaryThresholdImageFilterISS2IUC2_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_swigregister
itkBinaryThresholdImageFilterISS2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterISS2IUC2_Superclass)

def itkBinaryThresholdImageFilterISS2IUC2_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer":
    """itkBinaryThresholdImageFilterISS2IUC2_Superclass___New_orig__() -> itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass___New_orig__()

def itkBinaryThresholdImageFilterISS2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2IUC2_Superclass *":
    """itkBinaryThresholdImageFilterISS2IUC2_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2IUC2_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_cast(obj)

class itkBinaryThresholdImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkBinaryThresholdImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS3ISS3_Superclass self) -> itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< short,short > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterISS3ISS3_Superclass self) -> itk::Functor::BinaryThreshold< short,short >
        GetFunctor(itkBinaryThresholdImageFilterISS3ISS3_Superclass self) -> itk::Functor::BinaryThreshold< short,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< short,short > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterISS3ISS3_Superclass self, itk::Functor::BinaryThreshold< short,short > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3ISS3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS3ISS3_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterISS3ISS3_Superclass self) -> itkBinaryThresholdImageFilterISS3ISS3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3ISS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_Clone, None, itkBinaryThresholdImageFilterISS3ISS3_Superclass)
itkBinaryThresholdImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterISS3ISS3_Superclass)
itkBinaryThresholdImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterISS3ISS3_Superclass)
itkBinaryThresholdImageFilterISS3ISS3_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_GetPointer, None, itkBinaryThresholdImageFilterISS3ISS3_Superclass)
itkBinaryThresholdImageFilterISS3ISS3_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_swigregister
itkBinaryThresholdImageFilterISS3ISS3_Superclass_swigregister(itkBinaryThresholdImageFilterISS3ISS3_Superclass)

def itkBinaryThresholdImageFilterISS3ISS3_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer":
    """itkBinaryThresholdImageFilterISS3ISS3_Superclass___New_orig__() -> itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass___New_orig__()

def itkBinaryThresholdImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3ISS3_Superclass *":
    """itkBinaryThresholdImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3ISS3_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_cast(obj)

class itkBinaryThresholdImageFilterISS3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    """Proxy of C++ itkBinaryThresholdImageFilterISS3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS3IUC3_Superclass self) -> itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< short,unsigned char > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterISS3IUC3_Superclass self) -> itk::Functor::BinaryThreshold< short,unsigned char >
        GetFunctor(itkBinaryThresholdImageFilterISS3IUC3_Superclass self) -> itk::Functor::BinaryThreshold< short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< short,unsigned char > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterISS3IUC3_Superclass self, itk::Functor::BinaryThreshold< short,unsigned char > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3IUC3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS3IUC3_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterISS3IUC3_Superclass self) -> itkBinaryThresholdImageFilterISS3IUC3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS3IUC3_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_Clone, None, itkBinaryThresholdImageFilterISS3IUC3_Superclass)
itkBinaryThresholdImageFilterISS3IUC3_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterISS3IUC3_Superclass)
itkBinaryThresholdImageFilterISS3IUC3_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterISS3IUC3_Superclass)
itkBinaryThresholdImageFilterISS3IUC3_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_GetPointer, None, itkBinaryThresholdImageFilterISS3IUC3_Superclass)
itkBinaryThresholdImageFilterISS3IUC3_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_swigregister
itkBinaryThresholdImageFilterISS3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterISS3IUC3_Superclass)

def itkBinaryThresholdImageFilterISS3IUC3_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer":
    """itkBinaryThresholdImageFilterISS3IUC3_Superclass___New_orig__() -> itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass___New_orig__()

def itkBinaryThresholdImageFilterISS3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3IUC3_Superclass *":
    """itkBinaryThresholdImageFilterISS3IUC3_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3IUC3_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkBinaryThresholdImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIUC2IUC2_Superclass self) -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIUC2IUC2_Superclass self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char >
        GetFunctor(itkBinaryThresholdImageFilterIUC2IUC2_Superclass self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIUC2IUC2_Superclass self, itk::Functor::BinaryThreshold< unsigned char,unsigned char > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIUC2IUC2_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIUC2IUC2_Superclass self) -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Clone, None, itkBinaryThresholdImageFilterIUC2IUC2_Superclass)
itkBinaryThresholdImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIUC2IUC2_Superclass)
itkBinaryThresholdImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIUC2IUC2_Superclass)
itkBinaryThresholdImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIUC2IUC2_Superclass)
itkBinaryThresholdImageFilterIUC2IUC2_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_swigregister
itkBinaryThresholdImageFilterIUC2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterIUC2IUC2_Superclass)

def itkBinaryThresholdImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIUC2IUC2_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC2IUC2_Superclass *":
    """itkBinaryThresholdImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkBinaryThresholdImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkBinaryThresholdImageFilterIUC3IUC3_Superclass self) -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkBinaryThresholdImageFilterIUC3IUC3_Superclass self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char >
        GetFunctor(itkBinaryThresholdImageFilterIUC3IUC3_Superclass self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkBinaryThresholdImageFilterIUC3IUC3_Superclass self, itk::Functor::BinaryThreshold< unsigned char,unsigned char > const & functor)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIUC3IUC3_Superclass *":
        """GetPointer(itkBinaryThresholdImageFilterIUC3IUC3_Superclass self) -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Clone, None, itkBinaryThresholdImageFilterIUC3IUC3_Superclass)
itkBinaryThresholdImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkBinaryThresholdImageFilterIUC3IUC3_Superclass)
itkBinaryThresholdImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkBinaryThresholdImageFilterIUC3IUC3_Superclass)
itkBinaryThresholdImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_GetPointer, None, itkBinaryThresholdImageFilterIUC3IUC3_Superclass)
itkBinaryThresholdImageFilterIUC3IUC3_Superclass_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_swigregister
itkBinaryThresholdImageFilterIUC3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterIUC3IUC3_Superclass)

def itkBinaryThresholdImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer":
    """itkBinaryThresholdImageFilterIUC3IUC3_Superclass___New_orig__() -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass___New_orig__()

def itkBinaryThresholdImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC3IUC3_Superclass *":
    """itkBinaryThresholdImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_cast(obj)

class itkBinaryThresholdImageFilterIF2IF2(itkBinaryThresholdImageFilterIF2IF2_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF2IF2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF2IF2_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF2IF2 self) -> itkBinaryThresholdImageFilterIF2IF2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Clone(self)


    def SetOutsideValue(self, _arg: 'float const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIF2IF2 self, float const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "float const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIF2IF2 self) -> float const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'float const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIF2IF2 self, float const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "float const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIF2IF2 self) -> float const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'float const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIF2IF2 self, float const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIF2IF2 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'float const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIF2IF2 self, float const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIF2IF2 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "float":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIF2IF2 self) -> float

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF2IF2 self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF2IF2 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "float":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIF2IF2 self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF2IF2 self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF2IF2 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IF2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF2IF2 *":
        """GetPointer(itkBinaryThresholdImageFilterIF2IF2 self) -> itkBinaryThresholdImageFilterIF2IF2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IF2

        Create a new object of the class itkBinaryThresholdImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF2IF2.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Clone, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetOutsideValue, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetOutsideValue, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetInsideValue, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetInsideValue, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetUpperThreshold, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetLowerThreshold, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetUpperThreshold, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetLowerThreshold, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetPointer, None, itkBinaryThresholdImageFilterIF2IF2)
itkBinaryThresholdImageFilterIF2IF2_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_swigregister
itkBinaryThresholdImageFilterIF2IF2_swigregister(itkBinaryThresholdImageFilterIF2IF2)

def itkBinaryThresholdImageFilterIF2IF2___New_orig__() -> "itkBinaryThresholdImageFilterIF2IF2_Pointer":
    """itkBinaryThresholdImageFilterIF2IF2___New_orig__() -> itkBinaryThresholdImageFilterIF2IF2_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2___New_orig__()

def itkBinaryThresholdImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IF2 *":
    """itkBinaryThresholdImageFilterIF2IF2_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IF2"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_cast(obj)

class itkBinaryThresholdImageFilterIF2ISS2(itkBinaryThresholdImageFilterIF2ISS2_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF2ISS2_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF2ISS2 self) -> itkBinaryThresholdImageFilterIF2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Clone(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIF2ISS2 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIF2ISS2 self) -> short const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIF2ISS2 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIF2ISS2 self) -> short const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'float const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIF2ISS2 self, float const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIF2ISS2 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'float const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIF2ISS2 self, float const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIF2ISS2 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "float":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIF2ISS2 self) -> float

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF2ISS2 self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF2ISS2 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "float":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIF2ISS2 self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF2ISS2 self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF2ISS2 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2ISS2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF2ISS2 *":
        """GetPointer(itkBinaryThresholdImageFilterIF2ISS2 self) -> itkBinaryThresholdImageFilterIF2ISS2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2ISS2

        Create a new object of the class itkBinaryThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Clone, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetOutsideValue, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetOutsideValue, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetInsideValue, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetInsideValue, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetUpperThreshold, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetLowerThreshold, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetUpperThreshold, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetLowerThreshold, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetPointer, None, itkBinaryThresholdImageFilterIF2ISS2)
itkBinaryThresholdImageFilterIF2ISS2_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_swigregister
itkBinaryThresholdImageFilterIF2ISS2_swigregister(itkBinaryThresholdImageFilterIF2ISS2)

def itkBinaryThresholdImageFilterIF2ISS2___New_orig__() -> "itkBinaryThresholdImageFilterIF2ISS2_Pointer":
    """itkBinaryThresholdImageFilterIF2ISS2___New_orig__() -> itkBinaryThresholdImageFilterIF2ISS2_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2___New_orig__()

def itkBinaryThresholdImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2ISS2 *":
    """itkBinaryThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2ISS2"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_cast(obj)

class itkBinaryThresholdImageFilterIF2IUC2(itkBinaryThresholdImageFilterIF2IUC2_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF2IUC2_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF2IUC2 self) -> itkBinaryThresholdImageFilterIF2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Clone(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIF2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIF2IUC2 self) -> unsigned char const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIF2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIF2IUC2 self) -> unsigned char const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'float const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIF2IUC2 self, float const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIF2IUC2 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'float const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIF2IUC2 self, float const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIF2IUC2 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "float":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIF2IUC2 self) -> float

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF2IUC2 self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF2IUC2 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "float":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIF2IUC2 self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF2IUC2 self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF2IUC2 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IUC2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF2IUC2 *":
        """GetPointer(itkBinaryThresholdImageFilterIF2IUC2 self) -> itkBinaryThresholdImageFilterIF2IUC2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Clone, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetOutsideValue, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetOutsideValue, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetInsideValue, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetInsideValue, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetUpperThreshold, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetLowerThreshold, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetUpperThreshold, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetLowerThreshold, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetPointer, None, itkBinaryThresholdImageFilterIF2IUC2)
itkBinaryThresholdImageFilterIF2IUC2_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_swigregister
itkBinaryThresholdImageFilterIF2IUC2_swigregister(itkBinaryThresholdImageFilterIF2IUC2)

def itkBinaryThresholdImageFilterIF2IUC2___New_orig__() -> "itkBinaryThresholdImageFilterIF2IUC2_Pointer":
    """itkBinaryThresholdImageFilterIF2IUC2___New_orig__() -> itkBinaryThresholdImageFilterIF2IUC2_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2___New_orig__()

def itkBinaryThresholdImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF2IUC2 *":
    """itkBinaryThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF2IUC2"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_cast(obj)

class itkBinaryThresholdImageFilterIF3IF3(itkBinaryThresholdImageFilterIF3IF3_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF3IF3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF3IF3_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF3IF3 self) -> itkBinaryThresholdImageFilterIF3IF3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Clone(self)


    def SetOutsideValue(self, _arg: 'float const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIF3IF3 self, float const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "float const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIF3IF3 self) -> float const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'float const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIF3IF3 self, float const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "float const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIF3IF3 self) -> float const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'float const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIF3IF3 self, float const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIF3IF3 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'float const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIF3IF3 self, float const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIF3IF3 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "float":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIF3IF3 self) -> float

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF3IF3 self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF3IF3 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "float":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIF3IF3 self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF3IF3 self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF3IF3 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IF3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF3IF3 *":
        """GetPointer(itkBinaryThresholdImageFilterIF3IF3 self) -> itkBinaryThresholdImageFilterIF3IF3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IF3

        Create a new object of the class itkBinaryThresholdImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF3IF3.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Clone, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetOutsideValue, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetOutsideValue, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetInsideValue, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetInsideValue, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetUpperThreshold, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetLowerThreshold, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetUpperThreshold, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetLowerThreshold, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetPointer, None, itkBinaryThresholdImageFilterIF3IF3)
itkBinaryThresholdImageFilterIF3IF3_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_swigregister
itkBinaryThresholdImageFilterIF3IF3_swigregister(itkBinaryThresholdImageFilterIF3IF3)

def itkBinaryThresholdImageFilterIF3IF3___New_orig__() -> "itkBinaryThresholdImageFilterIF3IF3_Pointer":
    """itkBinaryThresholdImageFilterIF3IF3___New_orig__() -> itkBinaryThresholdImageFilterIF3IF3_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3___New_orig__()

def itkBinaryThresholdImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IF3 *":
    """itkBinaryThresholdImageFilterIF3IF3_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IF3"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_cast(obj)

class itkBinaryThresholdImageFilterIF3ISS3(itkBinaryThresholdImageFilterIF3ISS3_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF3ISS3_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF3ISS3 self) -> itkBinaryThresholdImageFilterIF3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Clone(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIF3ISS3 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIF3ISS3 self) -> short const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIF3ISS3 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIF3ISS3 self) -> short const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'float const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIF3ISS3 self, float const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIF3ISS3 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'float const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIF3ISS3 self, float const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIF3ISS3 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "float":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIF3ISS3 self) -> float

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF3ISS3 self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF3ISS3 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "float":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIF3ISS3 self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF3ISS3 self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF3ISS3 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3ISS3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF3ISS3 *":
        """GetPointer(itkBinaryThresholdImageFilterIF3ISS3 self) -> itkBinaryThresholdImageFilterIF3ISS3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3ISS3

        Create a new object of the class itkBinaryThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Clone, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetOutsideValue, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetOutsideValue, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetInsideValue, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetInsideValue, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetUpperThreshold, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetLowerThreshold, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetUpperThreshold, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetLowerThreshold, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetPointer, None, itkBinaryThresholdImageFilterIF3ISS3)
itkBinaryThresholdImageFilterIF3ISS3_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_swigregister
itkBinaryThresholdImageFilterIF3ISS3_swigregister(itkBinaryThresholdImageFilterIF3ISS3)

def itkBinaryThresholdImageFilterIF3ISS3___New_orig__() -> "itkBinaryThresholdImageFilterIF3ISS3_Pointer":
    """itkBinaryThresholdImageFilterIF3ISS3___New_orig__() -> itkBinaryThresholdImageFilterIF3ISS3_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3___New_orig__()

def itkBinaryThresholdImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3ISS3 *":
    """itkBinaryThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3ISS3"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_cast(obj)

class itkBinaryThresholdImageFilterIF3IUC3(itkBinaryThresholdImageFilterIF3IUC3_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIF3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIF3IUC3_Pointer":
        """Clone(itkBinaryThresholdImageFilterIF3IUC3 self) -> itkBinaryThresholdImageFilterIF3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Clone(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIF3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIF3IUC3 self) -> unsigned char const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIF3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIF3IUC3 self) -> unsigned char const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'float const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIF3IUC3 self, float const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIF3IUC3 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'float const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIF3IUC3 self, float const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorF') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIF3IUC3 self, itkSimpleDataObjectDecoratorF arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "float":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIF3IUC3 self) -> float

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF3IUC3 self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIF3IUC3 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "float":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIF3IUC3 self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorF const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF3IUC3 self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIF3IUC3 self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IUC3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIF3IUC3 *":
        """GetPointer(itkBinaryThresholdImageFilterIF3IUC3 self) -> itkBinaryThresholdImageFilterIF3IUC3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Clone, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetOutsideValue, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetOutsideValue, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetInsideValue, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetInsideValue, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetUpperThreshold, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetLowerThreshold, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetUpperThreshold, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetLowerThreshold, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetPointer, None, itkBinaryThresholdImageFilterIF3IUC3)
itkBinaryThresholdImageFilterIF3IUC3_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_swigregister
itkBinaryThresholdImageFilterIF3IUC3_swigregister(itkBinaryThresholdImageFilterIF3IUC3)

def itkBinaryThresholdImageFilterIF3IUC3___New_orig__() -> "itkBinaryThresholdImageFilterIF3IUC3_Pointer":
    """itkBinaryThresholdImageFilterIF3IUC3___New_orig__() -> itkBinaryThresholdImageFilterIF3IUC3_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3___New_orig__()

def itkBinaryThresholdImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIF3IUC3 *":
    """itkBinaryThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIF3IUC3"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_cast(obj)

class itkBinaryThresholdImageFilterISS2ISS2(itkBinaryThresholdImageFilterISS2ISS2_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS2ISS2_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS2ISS2 self) -> itkBinaryThresholdImageFilterISS2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Clone(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterISS2ISS2 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterISS2ISS2 self) -> short const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterISS2ISS2 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterISS2ISS2 self) -> short const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'short const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterISS2ISS2 self, short const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterISS2ISS2 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'short const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterISS2ISS2 self, short const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterISS2ISS2 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "short":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterISS2ISS2 self) -> short

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS2ISS2 self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS2ISS2 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "short":
        """GetLowerThreshold(itkBinaryThresholdImageFilterISS2ISS2 self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS2ISS2 self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS2ISS2 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2ISS2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS2ISS2 *":
        """GetPointer(itkBinaryThresholdImageFilterISS2ISS2 self) -> itkBinaryThresholdImageFilterISS2ISS2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2ISS2

        Create a new object of the class itkBinaryThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Clone, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetOutsideValue, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetOutsideValue, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetInsideValue, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetInsideValue, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetUpperThreshold, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetLowerThreshold, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetUpperThreshold, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetLowerThreshold, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetPointer, None, itkBinaryThresholdImageFilterISS2ISS2)
itkBinaryThresholdImageFilterISS2ISS2_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_swigregister
itkBinaryThresholdImageFilterISS2ISS2_swigregister(itkBinaryThresholdImageFilterISS2ISS2)

def itkBinaryThresholdImageFilterISS2ISS2___New_orig__() -> "itkBinaryThresholdImageFilterISS2ISS2_Pointer":
    """itkBinaryThresholdImageFilterISS2ISS2___New_orig__() -> itkBinaryThresholdImageFilterISS2ISS2_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2___New_orig__()

def itkBinaryThresholdImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2ISS2 *":
    """itkBinaryThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2ISS2"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_cast(obj)

class itkBinaryThresholdImageFilterISS2IUC2(itkBinaryThresholdImageFilterISS2IUC2_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS2IUC2_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS2IUC2 self) -> itkBinaryThresholdImageFilterISS2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Clone(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterISS2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterISS2IUC2 self) -> unsigned char const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterISS2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterISS2IUC2 self) -> unsigned char const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'short const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterISS2IUC2 self, short const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterISS2IUC2 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'short const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterISS2IUC2 self, short const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterISS2IUC2 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "short":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterISS2IUC2 self) -> short

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS2IUC2 self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS2IUC2 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "short":
        """GetLowerThreshold(itkBinaryThresholdImageFilterISS2IUC2 self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS2IUC2 self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS2IUC2 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2IUC2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS2IUC2 *":
        """GetPointer(itkBinaryThresholdImageFilterISS2IUC2 self) -> itkBinaryThresholdImageFilterISS2IUC2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Clone, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetOutsideValue, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetOutsideValue, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetInsideValue, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetInsideValue, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetUpperThreshold, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetLowerThreshold, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetUpperThreshold, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetLowerThreshold, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetPointer, None, itkBinaryThresholdImageFilterISS2IUC2)
itkBinaryThresholdImageFilterISS2IUC2_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_swigregister
itkBinaryThresholdImageFilterISS2IUC2_swigregister(itkBinaryThresholdImageFilterISS2IUC2)

def itkBinaryThresholdImageFilterISS2IUC2___New_orig__() -> "itkBinaryThresholdImageFilterISS2IUC2_Pointer":
    """itkBinaryThresholdImageFilterISS2IUC2___New_orig__() -> itkBinaryThresholdImageFilterISS2IUC2_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2___New_orig__()

def itkBinaryThresholdImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS2IUC2 *":
    """itkBinaryThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS2IUC2"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_cast(obj)

class itkBinaryThresholdImageFilterISS3ISS3(itkBinaryThresholdImageFilterISS3ISS3_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS3ISS3_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS3ISS3 self) -> itkBinaryThresholdImageFilterISS3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Clone(self)


    def SetOutsideValue(self, _arg: 'short const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterISS3ISS3 self, short const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "short const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterISS3ISS3 self) -> short const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'short const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterISS3ISS3 self, short const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "short const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterISS3ISS3 self) -> short const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'short const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterISS3ISS3 self, short const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterISS3ISS3 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'short const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterISS3ISS3 self, short const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterISS3ISS3 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "short":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterISS3ISS3 self) -> short

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS3ISS3 self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS3ISS3 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "short":
        """GetLowerThreshold(itkBinaryThresholdImageFilterISS3ISS3 self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS3ISS3 self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS3ISS3 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3ISS3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS3ISS3 *":
        """GetPointer(itkBinaryThresholdImageFilterISS3ISS3 self) -> itkBinaryThresholdImageFilterISS3ISS3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3ISS3

        Create a new object of the class itkBinaryThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Clone, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetOutsideValue, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetOutsideValue, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetInsideValue, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetInsideValue, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetUpperThreshold, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetLowerThreshold, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetUpperThreshold, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetLowerThreshold, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetPointer, None, itkBinaryThresholdImageFilterISS3ISS3)
itkBinaryThresholdImageFilterISS3ISS3_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_swigregister
itkBinaryThresholdImageFilterISS3ISS3_swigregister(itkBinaryThresholdImageFilterISS3ISS3)

def itkBinaryThresholdImageFilterISS3ISS3___New_orig__() -> "itkBinaryThresholdImageFilterISS3ISS3_Pointer":
    """itkBinaryThresholdImageFilterISS3ISS3___New_orig__() -> itkBinaryThresholdImageFilterISS3ISS3_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3___New_orig__()

def itkBinaryThresholdImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3ISS3 *":
    """itkBinaryThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3ISS3"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_cast(obj)

class itkBinaryThresholdImageFilterISS3IUC3(itkBinaryThresholdImageFilterISS3IUC3_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterISS3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterISS3IUC3_Pointer":
        """Clone(itkBinaryThresholdImageFilterISS3IUC3 self) -> itkBinaryThresholdImageFilterISS3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Clone(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterISS3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterISS3IUC3 self) -> unsigned char const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterISS3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterISS3IUC3 self) -> unsigned char const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'short const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterISS3IUC3 self, short const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterISS3IUC3 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'short const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterISS3IUC3 self, short const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorSS') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterISS3IUC3 self, itkSimpleDataObjectDecoratorSS arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "short":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterISS3IUC3 self) -> short

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS3IUC3 self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(itkBinaryThresholdImageFilterISS3IUC3 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "short":
        """GetLowerThreshold(itkBinaryThresholdImageFilterISS3IUC3 self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorSS const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS3IUC3 self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(itkBinaryThresholdImageFilterISS3IUC3 self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3IUC3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterISS3IUC3 *":
        """GetPointer(itkBinaryThresholdImageFilterISS3IUC3 self) -> itkBinaryThresholdImageFilterISS3IUC3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Clone, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetOutsideValue, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetOutsideValue, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetInsideValue, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetInsideValue, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetUpperThreshold, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetLowerThreshold, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetUpperThreshold, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetLowerThreshold, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetPointer, None, itkBinaryThresholdImageFilterISS3IUC3)
itkBinaryThresholdImageFilterISS3IUC3_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_swigregister
itkBinaryThresholdImageFilterISS3IUC3_swigregister(itkBinaryThresholdImageFilterISS3IUC3)

def itkBinaryThresholdImageFilterISS3IUC3___New_orig__() -> "itkBinaryThresholdImageFilterISS3IUC3_Pointer":
    """itkBinaryThresholdImageFilterISS3IUC3___New_orig__() -> itkBinaryThresholdImageFilterISS3IUC3_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3___New_orig__()

def itkBinaryThresholdImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterISS3IUC3 *":
    """itkBinaryThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterISS3IUC3"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_cast(obj)

class itkBinaryThresholdImageFilterIUC2IUC2(itkBinaryThresholdImageFilterIUC2IUC2_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIUC2IUC2_Pointer":
        """Clone(itkBinaryThresholdImageFilterIUC2IUC2 self) -> itkBinaryThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Clone(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIUC2IUC2 self) -> unsigned char const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIUC2IUC2 self) -> unsigned char const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'unsigned char const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIUC2IUC2 self, unsigned char const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorUC') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIUC2IUC2 self, itkSimpleDataObjectDecoratorUC arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'unsigned char const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIUC2IUC2 self, unsigned char const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorUC') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIUC2IUC2 self, itkSimpleDataObjectDecoratorUC arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "unsigned char":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIUC2IUC2 self) -> unsigned char

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorUC const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIUC2IUC2 self) -> itkSimpleDataObjectDecoratorUC
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIUC2IUC2 self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "unsigned char":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorUC const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIUC2IUC2 self) -> itkSimpleDataObjectDecoratorUC
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIUC2IUC2 self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC2IUC2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIUC2IUC2 *":
        """GetPointer(itkBinaryThresholdImageFilterIUC2IUC2 self) -> itkBinaryThresholdImageFilterIUC2IUC2"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Clone, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetOutsideValue, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetOutsideValue, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetInsideValue, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetInsideValue, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetUpperThreshold, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetLowerThreshold, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetUpperThreshold, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetLowerThreshold, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetPointer, None, itkBinaryThresholdImageFilterIUC2IUC2)
itkBinaryThresholdImageFilterIUC2IUC2_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_swigregister
itkBinaryThresholdImageFilterIUC2IUC2_swigregister(itkBinaryThresholdImageFilterIUC2IUC2)

def itkBinaryThresholdImageFilterIUC2IUC2___New_orig__() -> "itkBinaryThresholdImageFilterIUC2IUC2_Pointer":
    """itkBinaryThresholdImageFilterIUC2IUC2___New_orig__() -> itkBinaryThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2___New_orig__()

def itkBinaryThresholdImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC2IUC2 *":
    """itkBinaryThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC2IUC2"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_cast(obj)

class itkBinaryThresholdImageFilterIUC3IUC3(itkBinaryThresholdImageFilterIUC3IUC3_Superclass):
    """


    Binarize an input image by thresholding.

    This filter produces an output image whose pixels are either one of
    two values ( OutsideValue or InsideValue ), depending on whether the
    corresponding input image pixels lie between the two thresholds (
    LowerThreshold and UpperThreshold ). Values equal to either threshold
    is considered to be between the thresholds.

    More precisely \\[ Output(x_i) = \\begin{cases} InsideValue &
    \\text{if $LowerThreshold \\leq x_i \\leq UpperThreshold$}
    \\\\ OutsideValue & \\text{otherwise} \\end{cases} \\]

    This filter is templated over the input image type and the output
    image type.

    The filter expect both images to have the same number of dimensions.

    The default values for LowerThreshold and UpperThreshold are:
    LowerThreshold = NumericTraits<TInput>::NonpositiveMin();
    UpperThreshold = NumericTraits<TInput>::max(); Therefore, generally
    only one of these needs to be set, depending on whether the user wants
    to threshold above or below the desired threshold.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/BinaryThresholdI
    mageFilter Threshold an image

    C++ includes: itkBinaryThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkBinaryThresholdImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkBinaryThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkBinaryThresholdImageFilterIUC3IUC3_Pointer":
        """Clone(itkBinaryThresholdImageFilterIUC3IUC3 self) -> itkBinaryThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Clone(self)


    def SetOutsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutsideValue(itkBinaryThresholdImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set the "outside"
        pixel value. The default value
        NumericTraits<OutputPixelType>::ZeroValue(). 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetOutsideValue(self, _arg)


    def GetOutsideValue(self) -> "unsigned char const &":
        """
        GetOutsideValue(itkBinaryThresholdImageFilterIUC3IUC3 self) -> unsigned char const &

        Get the "outside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetOutsideValue(self)


    def SetInsideValue(self, _arg: 'unsigned char const') -> "void":
        """
        SetInsideValue(itkBinaryThresholdImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set the "inside"
        pixel value. The default value NumericTraits<OutputPixelType>::max()

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetInsideValue(self, _arg)


    def GetInsideValue(self) -> "unsigned char const &":
        """
        GetInsideValue(itkBinaryThresholdImageFilterIUC3IUC3 self) -> unsigned char const &

        Get the "inside"
        pixel value. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetInsideValue(self)


    def SetUpperThreshold(self, threshold: 'unsigned char const') -> "void":
        """
        SetUpperThreshold(itkBinaryThresholdImageFilterIUC3IUC3 self, unsigned char const threshold)

        Set the
        thresholds. The default lower threshold is
        NumericTraits<InputPixelType>::NonpositiveMin(). The default upper
        threshold is NumericTraits<InputPixelType>::max. An execption is
        thrown if the lower threshold is greater than the upper threshold. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetUpperThreshold(self, threshold)


    def SetUpperThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorUC') -> "void":
        """SetUpperThresholdInput(itkBinaryThresholdImageFilterIUC3IUC3 self, itkSimpleDataObjectDecoratorUC arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetUpperThresholdInput(self, arg0)


    def SetLowerThreshold(self, threshold: 'unsigned char const') -> "void":
        """SetLowerThreshold(itkBinaryThresholdImageFilterIUC3IUC3 self, unsigned char const threshold)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetLowerThreshold(self, threshold)


    def SetLowerThresholdInput(self, arg0: 'itkSimpleDataObjectDecoratorUC') -> "void":
        """SetLowerThresholdInput(itkBinaryThresholdImageFilterIUC3IUC3 self, itkSimpleDataObjectDecoratorUC arg0)"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetLowerThresholdInput(self, arg0)


    def GetUpperThreshold(self) -> "unsigned char":
        """
        GetUpperThreshold(itkBinaryThresholdImageFilterIUC3IUC3 self) -> unsigned char

        Get the threshold
        values. 
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetUpperThreshold(self)


    def GetUpperThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorUC const *":
        """
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIUC3IUC3 self) -> itkSimpleDataObjectDecoratorUC
        GetUpperThresholdInput(itkBinaryThresholdImageFilterIUC3IUC3 self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetUpperThresholdInput(self, *args)


    def GetLowerThreshold(self) -> "unsigned char":
        """GetLowerThreshold(itkBinaryThresholdImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetLowerThreshold(self)


    def GetLowerThresholdInput(self, *args) -> "itkSimpleDataObjectDecoratorUC const *":
        """
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIUC3IUC3 self) -> itkSimpleDataObjectDecoratorUC
        GetLowerThresholdInput(itkBinaryThresholdImageFilterIUC3IUC3 self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetLowerThresholdInput(self, *args)

    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_OutputEqualityComparableCheck
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_InputPixelTypeComparable
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_InputOStreamWritableCheck
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_OutputOStreamWritableCheck
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC3IUC3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkBinaryThresholdImageFilterIUC3IUC3 *":
        """GetPointer(itkBinaryThresholdImageFilterIUC3IUC3 self) -> itkBinaryThresholdImageFilterIUC3IUC3"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBinaryThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBinaryThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Clone, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.SetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetOutsideValue, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.GetOutsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetOutsideValue, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.SetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetInsideValue, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.GetInsideValue = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetInsideValue, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.SetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetUpperThreshold, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.SetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetUpperThresholdInput, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.SetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetLowerThreshold, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.SetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetLowerThresholdInput, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.GetUpperThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetUpperThreshold, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.GetUpperThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetUpperThresholdInput, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.GetLowerThreshold = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetLowerThreshold, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.GetLowerThresholdInput = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetLowerThresholdInput, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetPointer, None, itkBinaryThresholdImageFilterIUC3IUC3)
itkBinaryThresholdImageFilterIUC3IUC3_swigregister = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_swigregister
itkBinaryThresholdImageFilterIUC3IUC3_swigregister(itkBinaryThresholdImageFilterIUC3IUC3)

def itkBinaryThresholdImageFilterIUC3IUC3___New_orig__() -> "itkBinaryThresholdImageFilterIUC3IUC3_Pointer":
    """itkBinaryThresholdImageFilterIUC3IUC3___New_orig__() -> itkBinaryThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3___New_orig__()

def itkBinaryThresholdImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkBinaryThresholdImageFilterIUC3IUC3 *":
    """itkBinaryThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkBinaryThresholdImageFilterIUC3IUC3"""
    return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_cast(obj)



