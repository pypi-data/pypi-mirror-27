# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIterativeDeconvolutionImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkIterativeDeconvolutionImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkIterativeDeconvolutionImageFilterPython')
    _itkIterativeDeconvolutionImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIterativeDeconvolutionImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIterativeDeconvolutionImageFilterPython
            return _itkIterativeDeconvolutionImageFilterPython
        try:
            _mod = imp.load_module('_itkIterativeDeconvolutionImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkIterativeDeconvolutionImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIterativeDeconvolutionImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkFFTConvolutionImageFilterPython
import itkSizePython
import itkImagePython
import itkOffsetPython
import itkRGBPixelPython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkIndexPython
import itkPointPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkImageRegionPython
import itkConvolutionImageFilterBasePython
import itkImageBoundaryConditionPython
import itkImageToImageFilterAPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython

def itkIterativeDeconvolutionImageFilterIF3IF3_New():
  return itkIterativeDeconvolutionImageFilterIF3IF3.New()


def itkIterativeDeconvolutionImageFilterIF2IF2_New():
  return itkIterativeDeconvolutionImageFilterIF2IF2.New()


def itkIterativeDeconvolutionImageFilterIUC3IUC3_New():
  return itkIterativeDeconvolutionImageFilterIUC3IUC3.New()


def itkIterativeDeconvolutionImageFilterIUC2IUC2_New():
  return itkIterativeDeconvolutionImageFilterIUC2IUC2.New()


def itkIterativeDeconvolutionImageFilterISS3ISS3_New():
  return itkIterativeDeconvolutionImageFilterISS3ISS3.New()


def itkIterativeDeconvolutionImageFilterISS2ISS2_New():
  return itkIterativeDeconvolutionImageFilterISS2ISS2.New()

class itkIterativeDeconvolutionImageFilterIF2IF2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2):
    """


    Abstract base class for filters that implement iterative deconvolution
    algorithms.

    This filter implements methods common to iterative deconvolution
    algorithms. The input blurred image is set with the usual SetInput()
    method and the blurring kernel is set with the SetKernelImage()
    method.

    The number of iterations can be set with the method
    SetNumberOfIterations(). This class emits an IterationEvent at the
    start of each iteration. Iteration can be terminated early by calling
    SetStopIteration( bool ) with the argument set to true. To resume
    iterating, you must call SetStopIteration( bool ) with the argument
    set to false before calling Update() a second time.

    This code was adapted from the Insight Journal contribution:

    "Deconvolution: infrastructure and reference algorithms" by Gaetan
    Lehmannhttps://hdl.handle.net/10380/3207

    C++ includes: itkIterativeDeconvolutionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfIterations(itkIterativeDeconvolutionImageFilterIF2IF2 self, unsigned int const _arg)

        Set/get the
        number of iterations. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(itkIterativeDeconvolutionImageFilterIF2IF2 self) -> unsigned int"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetNumberOfIterations(self)


    def GetModifiableCurrentEstimate(self) -> "itkImageD2 *":
        """GetModifiableCurrentEstimate(itkIterativeDeconvolutionImageFilterIF2IF2 self) -> itkImageD2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetModifiableCurrentEstimate(self)


    def GetCurrentEstimate(self, *args) -> "itkImageD2 *":
        """
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIF2IF2 self) -> itkImageD2
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIF2IF2 self) -> itkImageD2
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetCurrentEstimate(self, *args)


    def SetStopIteration(self, stop: 'bool') -> "void":
        """
        SetStopIteration(itkIterativeDeconvolutionImageFilterIF2IF2 self, bool stop)

        Stop iteration.
        When this method is called, the iteration will halt after the current
        iteration has completed. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_SetStopIteration(self, stop)


    def GetStopIteration(self) -> "bool":
        """GetStopIteration(itkIterativeDeconvolutionImageFilterIF2IF2 self) -> bool"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetStopIteration(self)


    def GetIteration(self) -> "unsigned int":
        """
        GetIteration(itkIterativeDeconvolutionImageFilterIF2IF2 self) -> unsigned int

        Get the current
        iteration. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetIteration(self)

    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIF2IF2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIterativeDeconvolutionImageFilterIF2IF2 *":
        """GetPointer(itkIterativeDeconvolutionImageFilterIF2IF2 self) -> itkIterativeDeconvolutionImageFilterIF2IF2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIF2IF2

        Create a new object of the class itkIterativeDeconvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeDeconvolutionImageFilterIF2IF2.SetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_SetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2.GetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2.GetModifiableCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetModifiableCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2.GetCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2.SetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_SetStopIteration, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2.GetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetStopIteration, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2.GetIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetIteration, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2.GetPointer = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_GetPointer, None, itkIterativeDeconvolutionImageFilterIF2IF2)
itkIterativeDeconvolutionImageFilterIF2IF2_swigregister = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_swigregister
itkIterativeDeconvolutionImageFilterIF2IF2_swigregister(itkIterativeDeconvolutionImageFilterIF2IF2)

def itkIterativeDeconvolutionImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIF2IF2 *":
    """itkIterativeDeconvolutionImageFilterIF2IF2_cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIF2IF2"""
    return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2_cast(obj)

class itkIterativeDeconvolutionImageFilterIF3IF3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3):
    """


    Abstract base class for filters that implement iterative deconvolution
    algorithms.

    This filter implements methods common to iterative deconvolution
    algorithms. The input blurred image is set with the usual SetInput()
    method and the blurring kernel is set with the SetKernelImage()
    method.

    The number of iterations can be set with the method
    SetNumberOfIterations(). This class emits an IterationEvent at the
    start of each iteration. Iteration can be terminated early by calling
    SetStopIteration( bool ) with the argument set to true. To resume
    iterating, you must call SetStopIteration( bool ) with the argument
    set to false before calling Update() a second time.

    This code was adapted from the Insight Journal contribution:

    "Deconvolution: infrastructure and reference algorithms" by Gaetan
    Lehmannhttps://hdl.handle.net/10380/3207

    C++ includes: itkIterativeDeconvolutionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfIterations(itkIterativeDeconvolutionImageFilterIF3IF3 self, unsigned int const _arg)

        Set/get the
        number of iterations. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(itkIterativeDeconvolutionImageFilterIF3IF3 self) -> unsigned int"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetNumberOfIterations(self)


    def GetModifiableCurrentEstimate(self) -> "itkImageD3 *":
        """GetModifiableCurrentEstimate(itkIterativeDeconvolutionImageFilterIF3IF3 self) -> itkImageD3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetModifiableCurrentEstimate(self)


    def GetCurrentEstimate(self, *args) -> "itkImageD3 *":
        """
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIF3IF3 self) -> itkImageD3
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIF3IF3 self) -> itkImageD3
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetCurrentEstimate(self, *args)


    def SetStopIteration(self, stop: 'bool') -> "void":
        """
        SetStopIteration(itkIterativeDeconvolutionImageFilterIF3IF3 self, bool stop)

        Stop iteration.
        When this method is called, the iteration will halt after the current
        iteration has completed. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_SetStopIteration(self, stop)


    def GetStopIteration(self) -> "bool":
        """GetStopIteration(itkIterativeDeconvolutionImageFilterIF3IF3 self) -> bool"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetStopIteration(self)


    def GetIteration(self) -> "unsigned int":
        """
        GetIteration(itkIterativeDeconvolutionImageFilterIF3IF3 self) -> unsigned int

        Get the current
        iteration. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetIteration(self)

    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIF3IF3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIterativeDeconvolutionImageFilterIF3IF3 *":
        """GetPointer(itkIterativeDeconvolutionImageFilterIF3IF3 self) -> itkIterativeDeconvolutionImageFilterIF3IF3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIF3IF3

        Create a new object of the class itkIterativeDeconvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeDeconvolutionImageFilterIF3IF3.SetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_SetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3.GetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3.GetModifiableCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetModifiableCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3.GetCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3.SetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_SetStopIteration, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3.GetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetStopIteration, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3.GetIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetIteration, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3.GetPointer = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_GetPointer, None, itkIterativeDeconvolutionImageFilterIF3IF3)
itkIterativeDeconvolutionImageFilterIF3IF3_swigregister = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_swigregister
itkIterativeDeconvolutionImageFilterIF3IF3_swigregister(itkIterativeDeconvolutionImageFilterIF3IF3)

def itkIterativeDeconvolutionImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIF3IF3 *":
    """itkIterativeDeconvolutionImageFilterIF3IF3_cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIF3IF3"""
    return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3_cast(obj)

class itkIterativeDeconvolutionImageFilterISS2ISS2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2):
    """


    Abstract base class for filters that implement iterative deconvolution
    algorithms.

    This filter implements methods common to iterative deconvolution
    algorithms. The input blurred image is set with the usual SetInput()
    method and the blurring kernel is set with the SetKernelImage()
    method.

    The number of iterations can be set with the method
    SetNumberOfIterations(). This class emits an IterationEvent at the
    start of each iteration. Iteration can be terminated early by calling
    SetStopIteration( bool ) with the argument set to true. To resume
    iterating, you must call SetStopIteration( bool ) with the argument
    set to false before calling Update() a second time.

    This code was adapted from the Insight Journal contribution:

    "Deconvolution: infrastructure and reference algorithms" by Gaetan
    Lehmannhttps://hdl.handle.net/10380/3207

    C++ includes: itkIterativeDeconvolutionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfIterations(itkIterativeDeconvolutionImageFilterISS2ISS2 self, unsigned int const _arg)

        Set/get the
        number of iterations. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(itkIterativeDeconvolutionImageFilterISS2ISS2 self) -> unsigned int"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetNumberOfIterations(self)


    def GetModifiableCurrentEstimate(self) -> "itkImageD2 *":
        """GetModifiableCurrentEstimate(itkIterativeDeconvolutionImageFilterISS2ISS2 self) -> itkImageD2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetModifiableCurrentEstimate(self)


    def GetCurrentEstimate(self, *args) -> "itkImageD2 *":
        """
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterISS2ISS2 self) -> itkImageD2
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterISS2ISS2 self) -> itkImageD2
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetCurrentEstimate(self, *args)


    def SetStopIteration(self, stop: 'bool') -> "void":
        """
        SetStopIteration(itkIterativeDeconvolutionImageFilterISS2ISS2 self, bool stop)

        Stop iteration.
        When this method is called, the iteration will halt after the current
        iteration has completed. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_SetStopIteration(self, stop)


    def GetStopIteration(self) -> "bool":
        """GetStopIteration(itkIterativeDeconvolutionImageFilterISS2ISS2 self) -> bool"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetStopIteration(self)


    def GetIteration(self) -> "unsigned int":
        """
        GetIteration(itkIterativeDeconvolutionImageFilterISS2ISS2 self) -> unsigned int

        Get the current
        iteration. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetIteration(self)

    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterISS2ISS2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIterativeDeconvolutionImageFilterISS2ISS2 *":
        """GetPointer(itkIterativeDeconvolutionImageFilterISS2ISS2 self) -> itkIterativeDeconvolutionImageFilterISS2ISS2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterISS2ISS2

        Create a new object of the class itkIterativeDeconvolutionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeDeconvolutionImageFilterISS2ISS2.SetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_SetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2.GetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2.GetModifiableCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetModifiableCurrentEstimate, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2.GetCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetCurrentEstimate, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2.SetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_SetStopIteration, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2.GetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetStopIteration, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2.GetIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetIteration, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_GetPointer, None, itkIterativeDeconvolutionImageFilterISS2ISS2)
itkIterativeDeconvolutionImageFilterISS2ISS2_swigregister = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_swigregister
itkIterativeDeconvolutionImageFilterISS2ISS2_swigregister(itkIterativeDeconvolutionImageFilterISS2ISS2)

def itkIterativeDeconvolutionImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterISS2ISS2 *":
    """itkIterativeDeconvolutionImageFilterISS2ISS2_cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterISS2ISS2"""
    return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2_cast(obj)

class itkIterativeDeconvolutionImageFilterISS3ISS3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3):
    """


    Abstract base class for filters that implement iterative deconvolution
    algorithms.

    This filter implements methods common to iterative deconvolution
    algorithms. The input blurred image is set with the usual SetInput()
    method and the blurring kernel is set with the SetKernelImage()
    method.

    The number of iterations can be set with the method
    SetNumberOfIterations(). This class emits an IterationEvent at the
    start of each iteration. Iteration can be terminated early by calling
    SetStopIteration( bool ) with the argument set to true. To resume
    iterating, you must call SetStopIteration( bool ) with the argument
    set to false before calling Update() a second time.

    This code was adapted from the Insight Journal contribution:

    "Deconvolution: infrastructure and reference algorithms" by Gaetan
    Lehmannhttps://hdl.handle.net/10380/3207

    C++ includes: itkIterativeDeconvolutionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfIterations(itkIterativeDeconvolutionImageFilterISS3ISS3 self, unsigned int const _arg)

        Set/get the
        number of iterations. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(itkIterativeDeconvolutionImageFilterISS3ISS3 self) -> unsigned int"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetNumberOfIterations(self)


    def GetModifiableCurrentEstimate(self) -> "itkImageD3 *":
        """GetModifiableCurrentEstimate(itkIterativeDeconvolutionImageFilterISS3ISS3 self) -> itkImageD3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetModifiableCurrentEstimate(self)


    def GetCurrentEstimate(self, *args) -> "itkImageD3 *":
        """
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterISS3ISS3 self) -> itkImageD3
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterISS3ISS3 self) -> itkImageD3
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetCurrentEstimate(self, *args)


    def SetStopIteration(self, stop: 'bool') -> "void":
        """
        SetStopIteration(itkIterativeDeconvolutionImageFilterISS3ISS3 self, bool stop)

        Stop iteration.
        When this method is called, the iteration will halt after the current
        iteration has completed. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_SetStopIteration(self, stop)


    def GetStopIteration(self) -> "bool":
        """GetStopIteration(itkIterativeDeconvolutionImageFilterISS3ISS3 self) -> bool"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetStopIteration(self)


    def GetIteration(self) -> "unsigned int":
        """
        GetIteration(itkIterativeDeconvolutionImageFilterISS3ISS3 self) -> unsigned int

        Get the current
        iteration. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetIteration(self)

    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterISS3ISS3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIterativeDeconvolutionImageFilterISS3ISS3 *":
        """GetPointer(itkIterativeDeconvolutionImageFilterISS3ISS3 self) -> itkIterativeDeconvolutionImageFilterISS3ISS3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterISS3ISS3

        Create a new object of the class itkIterativeDeconvolutionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeDeconvolutionImageFilterISS3ISS3.SetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_SetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3.GetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3.GetModifiableCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetModifiableCurrentEstimate, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3.GetCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetCurrentEstimate, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3.SetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_SetStopIteration, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3.GetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetStopIteration, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3.GetIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetIteration, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_GetPointer, None, itkIterativeDeconvolutionImageFilterISS3ISS3)
itkIterativeDeconvolutionImageFilterISS3ISS3_swigregister = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_swigregister
itkIterativeDeconvolutionImageFilterISS3ISS3_swigregister(itkIterativeDeconvolutionImageFilterISS3ISS3)

def itkIterativeDeconvolutionImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterISS3ISS3 *":
    """itkIterativeDeconvolutionImageFilterISS3ISS3_cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterISS3ISS3"""
    return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3_cast(obj)

class itkIterativeDeconvolutionImageFilterIUC2IUC2(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2):
    """


    Abstract base class for filters that implement iterative deconvolution
    algorithms.

    This filter implements methods common to iterative deconvolution
    algorithms. The input blurred image is set with the usual SetInput()
    method and the blurring kernel is set with the SetKernelImage()
    method.

    The number of iterations can be set with the method
    SetNumberOfIterations(). This class emits an IterationEvent at the
    start of each iteration. Iteration can be terminated early by calling
    SetStopIteration( bool ) with the argument set to true. To resume
    iterating, you must call SetStopIteration( bool ) with the argument
    set to false before calling Update() a second time.

    This code was adapted from the Insight Journal contribution:

    "Deconvolution: infrastructure and reference algorithms" by Gaetan
    Lehmannhttps://hdl.handle.net/10380/3207

    C++ includes: itkIterativeDeconvolutionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfIterations(itkIterativeDeconvolutionImageFilterIUC2IUC2 self, unsigned int const _arg)

        Set/get the
        number of iterations. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(itkIterativeDeconvolutionImageFilterIUC2IUC2 self) -> unsigned int"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetNumberOfIterations(self)


    def GetModifiableCurrentEstimate(self) -> "itkImageD2 *":
        """GetModifiableCurrentEstimate(itkIterativeDeconvolutionImageFilterIUC2IUC2 self) -> itkImageD2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetModifiableCurrentEstimate(self)


    def GetCurrentEstimate(self, *args) -> "itkImageD2 *":
        """
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIUC2IUC2 self) -> itkImageD2
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIUC2IUC2 self) -> itkImageD2
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetCurrentEstimate(self, *args)


    def SetStopIteration(self, stop: 'bool') -> "void":
        """
        SetStopIteration(itkIterativeDeconvolutionImageFilterIUC2IUC2 self, bool stop)

        Stop iteration.
        When this method is called, the iteration will halt after the current
        iteration has completed. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_SetStopIteration(self, stop)


    def GetStopIteration(self) -> "bool":
        """GetStopIteration(itkIterativeDeconvolutionImageFilterIUC2IUC2 self) -> bool"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetStopIteration(self)


    def GetIteration(self) -> "unsigned int":
        """
        GetIteration(itkIterativeDeconvolutionImageFilterIUC2IUC2 self) -> unsigned int

        Get the current
        iteration. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetIteration(self)

    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIUC2IUC2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIterativeDeconvolutionImageFilterIUC2IUC2 *":
        """GetPointer(itkIterativeDeconvolutionImageFilterIUC2IUC2 self) -> itkIterativeDeconvolutionImageFilterIUC2IUC2"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIUC2IUC2

        Create a new object of the class itkIterativeDeconvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeDeconvolutionImageFilterIUC2IUC2.SetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_SetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2.GetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2.GetModifiableCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetModifiableCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2.GetCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2.SetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_SetStopIteration, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2.GetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetStopIteration, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2.GetIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetIteration, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_GetPointer, None, itkIterativeDeconvolutionImageFilterIUC2IUC2)
itkIterativeDeconvolutionImageFilterIUC2IUC2_swigregister = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_swigregister
itkIterativeDeconvolutionImageFilterIUC2IUC2_swigregister(itkIterativeDeconvolutionImageFilterIUC2IUC2)

def itkIterativeDeconvolutionImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIUC2IUC2 *":
    """itkIterativeDeconvolutionImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIUC2IUC2"""
    return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2_cast(obj)

class itkIterativeDeconvolutionImageFilterIUC3IUC3(itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3):
    """


    Abstract base class for filters that implement iterative deconvolution
    algorithms.

    This filter implements methods common to iterative deconvolution
    algorithms. The input blurred image is set with the usual SetInput()
    method and the blurring kernel is set with the SetKernelImage()
    method.

    The number of iterations can be set with the method
    SetNumberOfIterations(). This class emits an IterationEvent at the
    start of each iteration. Iteration can be terminated early by calling
    SetStopIteration( bool ) with the argument set to true. To resume
    iterating, you must call SetStopIteration( bool ) with the argument
    set to false before calling Update() a second time.

    This code was adapted from the Insight Journal contribution:

    "Deconvolution: infrastructure and reference algorithms" by Gaetan
    Lehmannhttps://hdl.handle.net/10380/3207

    C++ includes: itkIterativeDeconvolutionImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetNumberOfIterations(self, _arg: 'unsigned int const') -> "void":
        """
        SetNumberOfIterations(itkIterativeDeconvolutionImageFilterIUC3IUC3 self, unsigned int const _arg)

        Set/get the
        number of iterations. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_SetNumberOfIterations(self, _arg)


    def GetNumberOfIterations(self) -> "unsigned int":
        """GetNumberOfIterations(itkIterativeDeconvolutionImageFilterIUC3IUC3 self) -> unsigned int"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetNumberOfIterations(self)


    def GetModifiableCurrentEstimate(self) -> "itkImageD3 *":
        """GetModifiableCurrentEstimate(itkIterativeDeconvolutionImageFilterIUC3IUC3 self) -> itkImageD3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetModifiableCurrentEstimate(self)


    def GetCurrentEstimate(self, *args) -> "itkImageD3 *":
        """
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIUC3IUC3 self) -> itkImageD3
        GetCurrentEstimate(itkIterativeDeconvolutionImageFilterIUC3IUC3 self) -> itkImageD3
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetCurrentEstimate(self, *args)


    def SetStopIteration(self, stop: 'bool') -> "void":
        """
        SetStopIteration(itkIterativeDeconvolutionImageFilterIUC3IUC3 self, bool stop)

        Stop iteration.
        When this method is called, the iteration will halt after the current
        iteration has completed. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_SetStopIteration(self, stop)


    def GetStopIteration(self) -> "bool":
        """GetStopIteration(itkIterativeDeconvolutionImageFilterIUC3IUC3 self) -> bool"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetStopIteration(self)


    def GetIteration(self) -> "unsigned int":
        """
        GetIteration(itkIterativeDeconvolutionImageFilterIUC3IUC3 self) -> unsigned int

        Get the current
        iteration. 
        """
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetIteration(self)

    __swig_destroy__ = _itkIterativeDeconvolutionImageFilterPython.delete_itkIterativeDeconvolutionImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIUC3IUC3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIterativeDeconvolutionImageFilterIUC3IUC3 *":
        """GetPointer(itkIterativeDeconvolutionImageFilterIUC3IUC3 self) -> itkIterativeDeconvolutionImageFilterIUC3IUC3"""
        return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIterativeDeconvolutionImageFilterIUC3IUC3

        Create a new object of the class itkIterativeDeconvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIterativeDeconvolutionImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIterativeDeconvolutionImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIterativeDeconvolutionImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIterativeDeconvolutionImageFilterIUC3IUC3.SetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_SetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3.GetNumberOfIterations = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetNumberOfIterations, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3.GetModifiableCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetModifiableCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3.GetCurrentEstimate = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetCurrentEstimate, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3.SetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_SetStopIteration, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3.GetStopIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetStopIteration, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3.GetIteration = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetIteration, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_GetPointer, None, itkIterativeDeconvolutionImageFilterIUC3IUC3)
itkIterativeDeconvolutionImageFilterIUC3IUC3_swigregister = _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_swigregister
itkIterativeDeconvolutionImageFilterIUC3IUC3_swigregister(itkIterativeDeconvolutionImageFilterIUC3IUC3)

def itkIterativeDeconvolutionImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkIterativeDeconvolutionImageFilterIUC3IUC3 *":
    """itkIterativeDeconvolutionImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkIterativeDeconvolutionImageFilterIUC3IUC3"""
    return _itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3_cast(obj)



