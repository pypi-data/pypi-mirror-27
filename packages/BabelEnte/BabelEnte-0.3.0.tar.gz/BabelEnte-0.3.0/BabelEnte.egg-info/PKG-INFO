Metadata-Version: 1.1
Name: BabelEnte
Version: 0.3.0
Summary: Entity extractioN, Translation and Evaluation using BabelFy
Home-page: https://github.com/proycon/babelente
Author: Maarten van Gompel, Iris Hendrickx
Author-email: proycon@anaproy.nl
License: GPL
Description-Content-Type: UNKNOWN
Description: BabelEnte: Entity extractioN, Translation and implicit Evaluation using BabelFy
        ===================================================================================
        
        This is an entity extractor, translator and evaluator that uses `BabelFy <http://babelfy.org>`_ . Initially developed
        for the TraMOOC project. It is written in Python 3.
        
        .. image:: https://github.com/proycon/babelente/blob/master/logo.jpg?raw=true
            :align: center
        
        Installation
        ---------------
        
        (not yet ready; to appear soonish)
        
        ::
        
            pip3 install babelente
        
        or clone this github repository and run ``python3 setup.py install``, optionally prepend the commands with ``sudo`` for
        global installation.
        
        Usage
        -------
        
        You will need a BabelFy API key, get it from `BabelNet.org <http://babelnet.org>`_ .
        
        See ``babelente -h`` for usage for now.
        
        To evaluate a translation (english to portuguese in this example), output wil be JSON to stdout:
        
        ``$ babelente -k "YOUR-API-KEY" -f en -t pt -S sentences.en.txt -T sentences.pt.txt > output.json``
        
        To re-evaluate:
        
        ``$ babelente --evalfile output.json -S sentences.en.txt -T sentences.pt.txt > newoutput.json``
        
        You can also use BabelEnte to just extract entities a single language, without evaluation:
        
        ``$ babelente -k "YOUR-API-KEY" -f en -S sentences.en.txt > output.json``
        
        
        Evaluation
        -----------
        
        The evaluation produces two metrics, computer per sentence/line pair and final score aggregated as macro-average:
        
        * **Precision** -How many of the target synsets are correct? (``|matchingsynsets| / |targetsynsets|``)
        * **Recall** - How many of the source synsets are found? (``|matchingsynsets| / |sourcesynsets|``)
        
        
        License
        -----------
        
        GNU - GPL 3.0
        
Keywords: nlp computational_linguistics entities wikipedia dbpedia linguistics tramooc
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Topic :: Text Processing :: Linguistic
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: POSIX
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
