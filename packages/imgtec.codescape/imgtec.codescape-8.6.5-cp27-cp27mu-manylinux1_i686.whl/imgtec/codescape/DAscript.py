# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_DAscript', [dirname(__file__)])
        except ImportError:
            import _DAscript
            return _DAscript
        if fp is not None:
            try:
                _mod = imp.load_module('_DAscript', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _DAscript = swig_import_helper()
    del swig_import_helper
else:
    import _DAscript
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


from _DAscript import Error
from _DAscript import BreakpointError
from _DAscript import CommsBaseError
from _DAscript import ExecutionStateError
from _DAscript import InvalidArgError
from _DAscript import LicenseError
from _DAscript import OperationCancelled
from _DAscript import ProfilerError
from _DAscript import NotAnELF
from _DAscript import ProgramFileError
from _DAscript import TargetError
from _DAscript import ThreadInvalidError
from _DAscript import ArgumentNotSuppliedError
from _DAscript import AssertionFailed
from _DAscript import CallBackError
from _DAscript import CommsError
from _DAscript import CommsProbeError
from _DAscript import CommsTargetError
from _DAscript import CoreDisabled
from _DAscript import CoreOffline
from _DAscript import ExpressionEvaluationError
from _DAscript import InvalidConversion
from _DAscript import LicenseCheckoutError
from _DAscript import LicenseConsistencyError
from _DAscript import LoadProgramFileError
from _DAscript import ResetOccurred
from _DAscript import TargetAlreadyConnected
from _DAscript import TargetDisconnected
from _DAscript import TargetInvalid
from _DAscript import TargetNotFound
from _DAscript import UnrecoverableMemoryFault
from _DAscript import CommsBadChannelNumberError
from _DAscript import CommsDeviceInUseError
from _DAscript import CommsDeviceNotFoundError
from _DAscript import CommsNoTransportFoundError
from _DAscript import CommsPayloadMissingError
from _DAscript import CommsPayloadShortError
from _DAscript import CommsProbeConnectionRefusedError
from _DAscript import CommsProbeFatalError
from _DAscript import CommsProbeFlashDataBadError
from _DAscript import CommsProbeFlashEraseError
from _DAscript import CommsProbeFlashImageCorruptError
from _DAscript import CommsProbeFlashWriteError
from _DAscript import CommsProbeTimeoutError
from _DAscript import CommsRegisterInvalidDataSizeError
from _DAscript import CommsSimInUseError
from _DAscript import CommsSimNotFoundError
from _DAscript import CommsTargetAddressError
from _DAscript import CommsTargetChannelBufferEmptyError
from _DAscript import CommsTargetChannelBufferFullError
from _DAscript import CommsTargetCheckInquiryError
from _DAscript import CommsTargetCommandNotAvailableError
from _DAscript import CommsTargetCommandUnknownError
from _DAscript import CommsTargetCountError
from _DAscript import CommsTargetFatalError
from _DAscript import CommsTargetJtagIncompatibleError
from _DAscript import CommsTargetMmuAddressNotMappedError
from _DAscript import CommsTargetMtxMemoryFaultError
from _DAscript import CommsTargetParameterError
from _DAscript import CommsTargetRejectedBusyError
from _DAscript import CommsTargetThread0BusError
from _DAscript import CommsTargetThread0JtagError
from _DAscript import CommsTargetThread1BusError
from _DAscript import CommsTargetThread1JtagError
from _DAscript import CommsTargetThread2BusError
from _DAscript import CommsTargetThread2JtagError
from _DAscript import CommsTargetThread3BusError
from _DAscript import CommsTargetThread3JtagError
from _DAscript import CommsTimeoutError
from _DAscript import CommsUnsupportedError
from _DAscript import CommsUserAbortError
from _DAscript import LicensePlatformError
from _DAscript import LoadProgramFileNonFatalError
class DAtiny(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _DAscript.new_DAtiny(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _DAscript.delete_DAtiny
    def UseTarget(self, *args): return _DAscript.DAtiny_UseTarget(self, *args)
    def UseTargetOn(self, *args): return _DAscript.DAtiny_UseTargetOn(self, *args)
    def ReadMemory(self, *args): return _DAscript.DAtiny_ReadMemory(self, *args)
    def WriteMemory(self, *args): return _DAscript.DAtiny_WriteMemory(self, *args)
    def CheckMemory(self, *args): return _DAscript.DAtiny_CheckMemory(self, *args)
    def PollMemory(self, *args): return _DAscript.DAtiny_PollMemory(self, *args)
    def SetThread(self, *args): return _DAscript.DAtiny_SetThread(self, *args)
    def SaveBinaryFile(self, *args): return _DAscript.DAtiny_SaveBinaryFile(self, *args)
    def LoadBinaryFile(self, *args): return _DAscript.DAtiny_LoadBinaryFile(self, *args)
    def FillMemory(self, *args): return _DAscript.DAtiny_FillMemory(self, *args)
    def TestMemory(self, *args): return _DAscript.DAtiny_TestMemory(self, *args)
    def CheckFile(self, *args): return _DAscript.DAtiny_CheckFile(self, *args)
    def SetJTAGClock(self, *args): return _DAscript.DAtiny_SetJTAGClock(self, *args)
    def GetJTAGClock(self): return _DAscript.DAtiny_GetJTAGClock(self)
    def Reset(self, *args): return _DAscript.DAtiny_Reset(self, *args)
    def HardReset(self): return _DAscript.DAtiny_HardReset(self)
    def LookUpIPAddress(self, *args): return _DAscript.DAtiny_LookUpIPAddress(self, *args)
    def TapReset(self, ResetType=""): return _DAscript.DAtiny_TapReset(self, ResetType)
    def DRScan(self, *args): return _DAscript.DAtiny_DRScan(self, *args)
    def IRScan(self, *args): return _DAscript.DAtiny_IRScan(self, *args)
    def Scan(self, *args): return _DAscript.DAtiny_Scan(self, *args)
    def DAReset(self): return _DAscript.DAtiny_DAReset(self)
    def AutoDetect(self, *args): return _DAscript.DAtiny_AutoDetect(self, *args)
    def GetDAMode(self): return _DAscript.DAtiny_GetDAMode(self)
    def GetThread(self): return _DAscript.DAtiny_GetThread(self)
    def GetDiagnosticFileList(self): return _DAscript.DAtiny_GetDiagnosticFileList(self)
    def GetDiagnosticFile(self, *args): return _DAscript.DAtiny_GetDiagnosticFile(self, *args)
    def ReadMemoryBlock(self, *args): return _DAscript.DAtiny_ReadMemoryBlock(self, *args)
    def WriteMemoryBlock(self, *args): return _DAscript.DAtiny_WriteMemoryBlock(self, *args)
    def ReadDAConfigurationData(self, Update=True): return _DAscript.DAtiny_ReadDAConfigurationData(self, Update)
    def WriteDAConfigurationData(self, *args): return _DAscript.DAtiny_WriteDAConfigurationData(self, *args)
    def GetSerialNumber(self): return _DAscript.DAtiny_GetSerialNumber(self)
    def GetIdentifier(self): return _DAscript.DAtiny_GetIdentifier(self)
    def GetVersion(self): return _DAscript.DAtiny_GetVersion(self)
    def GetFirmwareVersion(self): return _DAscript.DAtiny_GetFirmwareVersion(self)
    def GetFirmwareFlashCode(self): return _DAscript.DAtiny_GetFirmwareFlashCode(self)
    def GetLocation(self): return _DAscript.DAtiny_GetLocation(self)
    def GetName(self): return _DAscript.DAtiny_GetName(self)
    def GetDASettingList(self): return _DAscript.DAtiny_GetDASettingList(self)
    def ReadDASetting(self, *args): return _DAscript.DAtiny_ReadDASetting(self, *args)
    def WriteDASetting(self, *args): return _DAscript.DAtiny_WriteDASetting(self, *args)
    def GetProbeSettings(self): return _DAscript.DAtiny_GetProbeSettings(self)
    def SetProbeSetting(self, *args): return _DAscript.DAtiny_SetProbeSetting(self, *args)
    def GetCommsSettings(self): return _DAscript.DAtiny_GetCommsSettings(self)
    def SetCommsSetting(self, *args): return _DAscript.DAtiny_SetCommsSetting(self, *args)
    def Disconnect(self): return _DAscript.DAtiny_Disconnect(self)
    def SetCore(self, *args): return _DAscript.DAtiny_SetCore(self, *args)
    def GetCore(self): return _DAscript.DAtiny_GetCore(self)
    def GetCoreCount(self): return _DAscript.DAtiny_GetCoreCount(self)
    def SetSoC(self, *args): return _DAscript.DAtiny_SetSoC(self, *args)
    def GetSoC(self): return _DAscript.DAtiny_GetSoC(self)
    def GetSoCCount(self): return _DAscript.DAtiny_GetSoCCount(self)
    def GetThreadCount(self): return _DAscript.DAtiny_GetThreadCount(self)
    def GetTargetFamily(self): return _DAscript.DAtiny_GetTargetFamily(self)
    def GetEndian(self): return _DAscript.DAtiny_GetEndian(self)
    def GetChannelDataEndian(self): return _DAscript.DAtiny_GetChannelDataEndian(self)
    def ReadRegister(self, *args): return _DAscript.DAtiny_ReadRegister(self, *args)
    def WriteRegister(self, *args): return _DAscript.DAtiny_WriteRegister(self, *args)
    def ReadRegisters(self, *args): return _DAscript.DAtiny_ReadRegisters(self, *args)
    def WriteRegisters(self, *args): return _DAscript.DAtiny_WriteRegisters(self, *args)
    def ReadModWriteRegister(self, *args): return _DAscript.DAtiny_ReadModWriteRegister(self, *args)
    def ReadModWriteRegisters(self, *args): return _DAscript.DAtiny_ReadModWriteRegisters(self, *args)
    def GetJTAGId(self): return _DAscript.DAtiny_GetJTAGId(self)
    def ReadModWrite(self, *args): return _DAscript.DAtiny_ReadModWrite(self, *args)
    def ReadModWriteAtomic(self, *args): return _DAscript.DAtiny_ReadModWriteAtomic(self, *args)
    def CacheOperation(self, *args): return _DAscript.DAtiny_CacheOperation(self, *args)
    def ReadTLB(self, *args): return _DAscript.DAtiny_ReadTLB(self, *args)
    def WriteTLB(self, *args): return _DAscript.DAtiny_WriteTLB(self, *args)
    def SetActiveTC(self, *args): return _DAscript.DAtiny_SetActiveTC(self, *args)
    def GetActiveTC(self): return _DAscript.DAtiny_GetActiveTC(self)
    def GetTCs(self): return _DAscript.DAtiny_GetTCs(self)
    def GetTCStatus(self): return _DAscript.DAtiny_GetTCStatus(self)
    def GetCommsOptions(self, *args): return _DAscript.DAtiny_GetCommsOptions(self, *args)
    def BindTC(self, *args): return _DAscript.DAtiny_BindTC(self, *args)
    def SetABI(self, *args): return _DAscript.DAtiny_SetABI(self, *args)
    def GetABI(self): return _DAscript.DAtiny_GetABI(self)
    def GetABIs(self): return _DAscript.DAtiny_GetABIs(self)
    def Run(self, *args): return _DAscript.DAtiny_Run(self, *args)
    def Step(self, *args): return _DAscript.DAtiny_Step(self, *args)
    def Stop(self, *args): return _DAscript.DAtiny_Stop(self, *args)
    def GetCurrentISA(self, *args): return _DAscript.DAtiny_GetCurrentISA(self, *args)
    def Disassemble(self, *args): return _DAscript.DAtiny_Disassemble(self, *args)
    def GetState(self): return _DAscript.DAtiny_GetState(self)
    def GetNumTriggers(self): return _DAscript.DAtiny_GetNumTriggers(self)
    def CpuInfo(self, Update=False): return _DAscript.DAtiny_CpuInfo(self, Update)
    def RegistersInfo(self, abi="auto"): return _DAscript.DAtiny_RegistersInfo(self, abi)
    def ChannelReadString(self, *args): return _DAscript.DAtiny_ChannelReadString(self, *args)
    def ChannelWriteString(self, *args): return _DAscript.DAtiny_ChannelWriteString(self, *args)
    def GetHSPSettings(self, *args): return _DAscript.DAtiny_GetHSPSettings(self, *args)
    def SetHSPSettings(self, *args): return _DAscript.DAtiny_SetHSPSettings(self, *args)
    def GetConfiguredSimulators(self): return _DAscript.DAtiny_GetConfiguredSimulators(self)
    def EnableCore(self, *args): return _DAscript.DAtiny_EnableCore(self, *args)
    def IsCoreEnabled(self): return _DAscript.DAtiny_IsCoreEnabled(self)
    def ReflashFirmware(self, *args): return _DAscript.DAtiny_ReflashFirmware(self, *args)
    def CreateBreakpoint(self, *args): return _DAscript.DAtiny_CreateBreakpoint(self, *args)
    def EnableBreakpoint(self, *args): return _DAscript.DAtiny_EnableBreakpoint(self, *args)
    def SuppressBreakpoint(self, *args): return _DAscript.DAtiny_SuppressBreakpoint(self, *args)
    def DeleteBreakpoint(self, *args): return _DAscript.DAtiny_DeleteBreakpoint(self, *args)
    def FormatBreakpoint(self, *args): return _DAscript.DAtiny_FormatBreakpoint(self, *args)
    def GetBreakpoint(self, *args): return _DAscript.DAtiny_GetBreakpoint(self, *args)
    def GetAllBreakpointIDs(self): return _DAscript.DAtiny_GetAllBreakpointIDs(self)
    def GetTriggeredBreakpointID(self): return _DAscript.DAtiny_GetTriggeredBreakpointID(self)
    def RefreshBreakpoint(self, *args): return _DAscript.DAtiny_RefreshBreakpoint(self, *args)
    def InitBreakpointsFromHardware(self): return _DAscript.DAtiny_InitBreakpointsFromHardware(self)
    def ReadCache(self, *args): return _DAscript.DAtiny_ReadCache(self, *args)
    def WriteCache(self, *args): return _DAscript.DAtiny_WriteCache(self, *args)
    def CreateTeam(self, *args): return _DAscript.DAtiny_CreateTeam(self, *args)
    def DeleteTeam(self, *args): return _DAscript.DAtiny_DeleteTeam(self, *args)
    def ListTeams(self): return _DAscript.DAtiny_ListTeams(self)
    def ProbeInfo(self): return _DAscript.DAtiny_ProbeInfo(self)
    def GetActiveASID(self): return _DAscript.DAtiny_GetActiveASID(self)
    def SetActiveASID(self, *args): return _DAscript.DAtiny_SetActiveASID(self, *args)
    def FlashDeviceConfigure(self, *args): return _DAscript.DAtiny_FlashDeviceConfigure(self, *args)
    def FlashDeviceList(self): return _DAscript.DAtiny_FlashDeviceList(self)
    def FlashDeviceSettings(self, *args): return _DAscript.DAtiny_FlashDeviceSettings(self, *args)
    def FlashDeviceRemove(self, *args): return _DAscript.DAtiny_FlashDeviceRemove(self, *args)
    def FlashDeviceCommand(self, *args): return _DAscript.DAtiny_FlashDeviceCommand(self, *args)
    def SetLogger(self, *args): return _DAscript.DAtiny_SetLogger(self, *args)
    def RefreshLoggerLevels(self): return _DAscript.DAtiny_RefreshLoggerLevels(self)
    def SetTarget(self, *args): return _DAscript.DAtiny_SetTarget(self, *args)
    def GetTarget(self): return _DAscript.DAtiny_GetTarget(self)
    def GetTargetCount(self): return _DAscript.DAtiny_GetTargetCount(self)
    def GetFlatCore(self): return _DAscript.DAtiny_GetFlatCore(self)
    def PollTrace(self): return _DAscript.DAtiny_PollTrace(self)
    def ConfigureTrace(self, *args): return _DAscript.DAtiny_ConfigureTrace(self, *args)
    def TraceCount(self, *args): return _DAscript.DAtiny_TraceCount(self, *args)
    def NormaliseProbeIdentifier(self, *args): return _DAscript.DAtiny_NormaliseProbeIdentifier(self, *args)
    def DiscoverProbes(self, *args): return _DAscript.DAtiny_DiscoverProbes(self, *args)
DAtiny_swigregister = _DAscript.DAtiny_swigregister
DAtiny_swigregister(DAtiny)


def CreateDAtiny(*args):
  return _DAscript.CreateDAtiny(*args)
CreateDAtiny = _DAscript.CreateDAtiny
#  Convert unicode parameters to utf8
#       and ut8 return values to unicode

def _from_unicode(s, encoding='utf8'):
    #assert not isinstance(s, str)  # we could add this to verify that all calls are made with unicode
    return s.encode(encoding) if isinstance(s, (str, unicode)) else s
def _to_unicode(s):
    return s.decode('utf8') if isinstance(s, str) else s

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _DAscript.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
    
import functools
_old_new_instancemethod = new_instancemethod
def _new_new_instancemethod(func, inst, cls, fromencoding='utf8'):
    original = _old_new_instancemethod(func, inst, cls)
    @functools.wraps(func)
    def wrap_with_utf8_conversion(*args):
        args = [_from_unicode(x, fromencoding) for x in args]
        return _to_unicode(original(*args))
    return wrap_with_utf8_conversion
new_instancemethod = _new_new_instancemethod


invalid_id = _DAscript.invalid_id
comment_id = _DAscript.comment_id
text_id = _DAscript.text_id
document_id = _DAscript.document_id
processing_instruction_id = _DAscript.processing_instruction_id
cdata_section_id = _DAscript.cdata_section_id
document_type_id = _DAscript.document_type_id
class NodeList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def item(self, *args): return _DAscript.NodeList_item(self, *args)
    def length(self): return _DAscript.NodeList_length(self)
    def __len__(self): return _DAscript.NodeList___len__(self)
    def __getitem__(self, *args): return _DAscript.NodeList___getitem__(self, *args)
NodeList_swigregister = _DAscript.NodeList_swigregister
NodeList_swigregister(NodeList)

class NamedNodeMap(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def getNamedItem(self, *args): return _DAscript.NamedNodeMap_getNamedItem(self, *args)
    def setNamedItem(self, *args): return _DAscript.NamedNodeMap_setNamedItem(self, *args)
    def removeNamedItem(self, *args): return _DAscript.NamedNodeMap_removeNamedItem(self, *args)
    def item(self, *args): return _DAscript.NamedNodeMap_item(self, *args)
    def length(self): return _DAscript.NamedNodeMap_length(self)
    def __len__(self): return _DAscript.NamedNodeMap___len__(self)
    def __getitem__(self, *args): return _DAscript.NamedNodeMap___getitem__(self, *args)
NamedNodeMap_swigregister = _DAscript.NamedNodeMap_swigregister
NamedNodeMap_swigregister(NamedNodeMap)

class Node(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ELEMENT_NODE = _DAscript.Node_ELEMENT_NODE
    ATTRIBUTE_NODE = _DAscript.Node_ATTRIBUTE_NODE
    TEXT_NODE = _DAscript.Node_TEXT_NODE
    CDATA_SECTION_NODE = _DAscript.Node_CDATA_SECTION_NODE
    PROCESSING_INSTRUCTION_NODE = _DAscript.Node_PROCESSING_INSTRUCTION_NODE
    COMMENT_NODE = _DAscript.Node_COMMENT_NODE
    DOCUMENT_NODE = _DAscript.Node_DOCUMENT_NODE
    DOCUMENT_TYPE_NODE = _DAscript.Node_DOCUMENT_TYPE_NODE
    def nodeNameId(self): return _DAscript.Node_nodeNameId(self)
    def nodeName(self): return _DAscript.Node_nodeName(self)
    def nodeValue(self, *args): return _DAscript.Node_nodeValue(self, *args)
    def nodeType(self): return _DAscript.Node_nodeType(self)
    def parentNode(self, *args): return _DAscript.Node_parentNode(self, *args)
    def childNodes(self, *args): return _DAscript.Node_childNodes(self, *args)
    def firstChild(self, *args): return _DAscript.Node_firstChild(self, *args)
    def lastChild(self, *args): return _DAscript.Node_lastChild(self, *args)
    def previousSibling(self, *args): return _DAscript.Node_previousSibling(self, *args)
    def nextSibling(self, *args): return _DAscript.Node_nextSibling(self, *args)
    def attributes(self, *args): return _DAscript.Node_attributes(self, *args)
    def ownerDocument(self, *args): return _DAscript.Node_ownerDocument(self, *args)
    def insertBefore(self, *args): return _DAscript.Node_insertBefore(self, *args)
    def replaceChild(self, *args): return _DAscript.Node_replaceChild(self, *args)
    def removeChild(self, *args): return _DAscript.Node_removeChild(self, *args)
    def appendChild(self, *args): return _DAscript.Node_appendChild(self, *args)
    def hasChildNodes(self): return _DAscript.Node_hasChildNodes(self)
    def hasAttributes(self): return _DAscript.Node_hasAttributes(self)
    def tagName(self): return _DAscript.Node_tagName(self)
    def getAttribute(self, *args): return _DAscript.Node_getAttribute(self, *args)
    def setAttribute(self, *args): return _DAscript.Node_setAttribute(self, *args)
    def removeAttribute(self, *args): return _DAscript.Node_removeAttribute(self, *args)
    def hasAttribute(self, *args): return _DAscript.Node_hasAttribute(self, *args)
    def documentElement(self, *args): return _DAscript.Node_documentElement(self, *args)
    def createElement(self, *args): return _DAscript.Node_createElement(self, *args)
    def createTextNode(self, *args): return _DAscript.Node_createTextNode(self, *args)
    def createComment(self, *args): return _DAscript.Node_createComment(self, *args)
    def createCDATASection(self, *args): return _DAscript.Node_createCDATASection(self, *args)
    def createProcessingInstruction(self, *args): return _DAscript.Node_createProcessingInstruction(self, *args)
    def createAttribute(self, *args): return _DAscript.Node_createAttribute(self, *args)
    def data(self, *args): return _DAscript.Node_data(self, *args)
    def toxml(self): return _DAscript.Node_toxml(self)
    def encoding(self, *args): return _DAscript.Node_encoding(self, *args)
    __swig_destroy__ = _DAscript.delete_Node
    def __str__(self): return _DAscript.Node___str__(self)
    def line(self): return _DAscript.Node_line(self)
    def column(self): return _DAscript.Node_column(self)
    def unlink(self): return _DAscript.Node_unlink(self)
Node_swigregister = _DAscript.Node_swigregister
Node_swigregister(Node)

class Element(Node):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
Element_swigregister = _DAscript.Element_swigregister
Element_swigregister(Element)

class Document(Node):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def save(self, *args): return _DAscript.Document_save(self, *args)
    __swig_destroy__ = _DAscript.delete_Document
Document_swigregister = _DAscript.Document_swigregister
Document_swigregister(Document)

IMPLEMENTATION_SPECIFIC_ERR = _DAscript.IMPLEMENTATION_SPECIFIC_ERR
IMG_NULL_OBJECT_ERR = _DAscript.IMG_NULL_OBJECT_ERR
IMG_LOAD_ABORTER_ERR = _DAscript.IMG_LOAD_ABORTER_ERR
IMG_NO_DTD_SPECIFIED_ERR = _DAscript.IMG_NO_DTD_SPECIFIED_ERR
IMG_NODE_ID_NOT_REGISTERED_ERR = _DAscript.IMG_NODE_ID_NOT_REGISTERED_ERR
IMG_NODE_ID_ALREADY_REGISTERED_ERR = _DAscript.IMG_NODE_ID_ALREADY_REGISTERED_ERR
INDEX_SIZE_ERR = _DAscript.INDEX_SIZE_ERR
DOMSTRING_SIZE_ERR = _DAscript.DOMSTRING_SIZE_ERR
HIERARCHY_REQUEST_ERR = _DAscript.HIERARCHY_REQUEST_ERR
WRONG_DOCUMENT_ERR = _DAscript.WRONG_DOCUMENT_ERR
INVALID_CHARACTER_ERR = _DAscript.INVALID_CHARACTER_ERR
NO_DATA_ALLOWED_ERR = _DAscript.NO_DATA_ALLOWED_ERR
NO_MODIFICATION_ALLOWED_ERR = _DAscript.NO_MODIFICATION_ALLOWED_ERR
NOT_FOUND_ERR = _DAscript.NOT_FOUND_ERR
NOT_SUPPORTED_ERR = _DAscript.NOT_SUPPORTED_ERR
INUSE_ATTRIBUTE_ERR = _DAscript.INUSE_ATTRIBUTE_ERR
INVALID_STATE_ERR = _DAscript.INVALID_STATE_ERR
SYNTAX_ERR = _DAscript.SYNTAX_ERR
INVALID_MODIFICATION_ERR = _DAscript.INVALID_MODIFICATION_ERR
NAMESPACE_ERR = _DAscript.NAMESPACE_ERR
INVALID_ACCESS_ERR = _DAscript.INVALID_ACCESS_ERR

def createDocument(*args):
  return _DAscript.createDocument(*args)
createDocument = _DAscript.createDocument

def parse(*args):
  return _DAscript.parse(*args)
parse = _DAscript.parse

def parseString(*args):
  return _DAscript.parseString(*args)
parseString = _DAscript.parseString
Document.documentElement = property(Document.documentElement)
Node.tagName = property(Node.tagName)
Node.nodeName = property(Node.nodeName)
Node.data = property(Node.data, Node.data)
Node.nodeValue = property(Node.nodeValue, Node.nodeValue)
Node.nodeType = property(Node.nodeType)
Node.parentNode = property(Node.parentNode)
Node.attributes = property(Node.attributes)
Node.childNodes = property(Node.childNodes)
Node.firstChild = property(Node.firstChild)
Node.lastChild = property(Node.lastChild)
Node.previousSibling = property(Node.previousSibling)
Node.nextSibling = property(Node.nextSibling)
Node.ownerDocument = property(Node.ownerDocument)
Node.line = property(Node.line)
Node.column = property(Node.column)
Node.location = property(new_instancemethod(lambda self: (self.line, self.column),None,Node))
Node.encoding = property(Node.encoding, Node.encoding)

import sys
def getDOMImplementation(name=None, features=None):
    return sys.modules[__name__]

# Do unicode -> utf8 conversion for the global fns as well
# these fns overload the default generated ones above

def createDocument(namespaceUri=None, qualifiedName=None, doctype=None):
    return _DAscript.createDocument(_from_unicode(namespaceUri or ''), _from_unicode(qualifiedName or ''), doctype)

def parse(path, *args):
    if isinstance(path, unicode):
        path = path.encode(sys.getfilesystemencoding())
    return _DAscript.parse(path, *args)

def parseString(s, *args):
    if isinstance(s, unicode):
        s = str(s) # use the default encoding
    return _DAscript.parseString(s, *args)

Document.save = new_instancemethod(_DAscript.Document_save,None,Document, sys.getfilesystemencoding())

class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_SwigPyIterator
    def value(self): return _DAscript.SwigPyIterator_value(self)
    def incr(self, n=1): return _DAscript.SwigPyIterator_incr(self, n)
    def decr(self, n=1): return _DAscript.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _DAscript.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _DAscript.SwigPyIterator_equal(self, *args)
    def copy(self): return _DAscript.SwigPyIterator_copy(self)
    def next(self): return _DAscript.SwigPyIterator_next(self)
    def __next__(self): return _DAscript.SwigPyIterator___next__(self)
    def previous(self): return _DAscript.SwigPyIterator_previous(self)
    def advance(self, *args): return _DAscript.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _DAscript.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _DAscript.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _DAscript.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _DAscript.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _DAscript.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _DAscript.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _DAscript.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class ProgramInfo(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _DAscript.new_ProgramInfo(*args)
        try: self.this.append(this)
        except: self.this = this
    address = _swig_property(_DAscript.ProgramInfo_address_get)
    kind = _swig_property(_DAscript.ProgramInfo_kind_get)
    abi = _swig_property(_DAscript.ProgramInfo_abi_get)
    endian = _swig_property(_DAscript.ProgramInfo_endian_get)
    cpu = _swig_property(_DAscript.ProgramInfo_cpu_get)
    architecture_ase = _swig_property(_DAscript.ProgramInfo_architecture_ase_get)
    entry_point = _swig_property(_DAscript.ProgramInfo_entry_point_get)
    has_debug_information = _swig_property(_DAscript.ProgramInfo_has_debug_information_get)
    segment_virtual_physical_addresses_differ = _swig_property(_DAscript.ProgramInfo_segment_virtual_physical_addresses_differ_get)
    def __str__(self): return _DAscript.ProgramInfo___str__(self)
    __swig_destroy__ = _DAscript.delete_ProgramInfo
ProgramInfo_swigregister = _DAscript.ProgramInfo_swigregister
ProgramInfo_swigregister(ProgramInfo)


def program_info(*args):
  return _DAscript.program_info(*args)
program_info = _DAscript.program_info
class SectionList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_SectionList
    def item(self, *args): return _DAscript.SectionList_item(self, *args)
    def length(self): return _DAscript.SectionList_length(self)
    def __len__(self): return _DAscript.SectionList___len__(self)
    def __getitem__(self, *args): return _DAscript.SectionList___getitem__(self, *args)
SectionList_swigregister = _DAscript.SectionList_swigregister
SectionList_swigregister(SectionList)

class SymbolList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_SymbolList
    def item(self, *args): return _DAscript.SymbolList_item(self, *args)
    def length(self): return _DAscript.SymbolList_length(self)
    def __contains__(self, *args): return _DAscript.SymbolList___contains__(self, *args)
    def __len__(self): return _DAscript.SymbolList___len__(self)
    def __getitem__(self, *args): return _DAscript.SymbolList___getitem__(self, *args)
    def __str__(self): return _DAscript.SymbolList___str__(self)
SymbolList_swigregister = _DAscript.SymbolList_swigregister
SymbolList_swigregister(SymbolList)

class SymbolScopeList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_SymbolScopeList
    def item(self, *args): return _DAscript.SymbolScopeList_item(self, *args)
    def length(self): return _DAscript.SymbolScopeList_length(self)
    def __len__(self): return _DAscript.SymbolScopeList___len__(self)
    def __getitem__(self, *args): return _DAscript.SymbolScopeList___getitem__(self, *args)
    def __str__(self): return _DAscript.SymbolScopeList___str__(self)
SymbolScopeList_swigregister = _DAscript.SymbolScopeList_swigregister
SymbolScopeList_swigregister(SymbolScopeList)

class SourceFileList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_SourceFileList
    def item(self, *args): return _DAscript.SourceFileList_item(self, *args)
    def length(self): return _DAscript.SourceFileList_length(self)
    def __len__(self): return _DAscript.SourceFileList___len__(self)
    def __getitem__(self, *args): return _DAscript.SourceFileList___getitem__(self, *args)
SourceFileList_swigregister = _DAscript.SourceFileList_swigregister
SourceFileList_swigregister(SourceFileList)

class ProgramFile(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    NoSpace = _DAscript.ProgramFile_NoSpace
    Ram = _DAscript.ProgramFile_Ram
    DspD0RamA = _DAscript.ProgramFile_DspD0RamA
    DspD0RamB = _DAscript.ProgramFile_DspD0RamB
    DspD1RamA = _DAscript.ProgramFile_DspD1RamA
    DspD1RamB = _DAscript.ProgramFile_DspD1RamB
    Data24Ram = _DAscript.ProgramFile_Data24Ram
    Data16Ram = _DAscript.ProgramFile_Data16Ram
    DataPeripherial = _DAscript.ProgramFile_DataPeripherial
    DataLRam = _DAscript.ProgramFile_DataLRam
    DataCRam = _DAscript.ProgramFile_DataCRam
    DataDRam = _DAscript.ProgramFile_DataDRam
    __swig_destroy__ = _DAscript.delete_ProgramFile
    def load_symbols(self, *args): return _DAscript.ProgramFile_load_symbols(self, *args)
    def program_info(self): return _DAscript.ProgramFile_program_info(self)
    def entry_point(self): return _DAscript.ProgramFile_entry_point(self)
    def sections(self): return _DAscript.ProgramFile_sections(self)
    def segments(self): return _DAscript.ProgramFile_segments(self)
    def has_debug_info(self): return _DAscript.ProgramFile_has_debug_info(self)
    def loaded_symbols(self): return _DAscript.ProgramFile_loaded_symbols(self)
    def source_at_address(self, *args): return _DAscript.ProgramFile_source_at_address(self, *args)
    def symbol_at_address(self, *args): return _DAscript.ProgramFile_symbol_at_address(self, *args)
    def symbols_at_address(self, *args): return _DAscript.ProgramFile_symbols_at_address(self, *args)
    def scope_at_address(self, *args): return _DAscript.ProgramFile_scope_at_address(self, *args)
    def lookup_name_in_all_scopes(self, *args): return _DAscript.ProgramFile_lookup_name_in_all_scopes(self, *args)
    def lookup_name_in_scope(self, *args): return _DAscript.ProgramFile_lookup_name_in_scope(self, *args)
    def source_files(self, only_those_with_source=True): return _DAscript.ProgramFile_source_files(self, only_those_with_source)
    def global_symbols(self): return _DAscript.ProgramFile_global_symbols(self)
    def warnings(self): return _DAscript.ProgramFile_warnings(self)
ProgramFile_swigregister = _DAscript.ProgramFile_swigregister
ProgramFile_swigregister(ProgramFile)

use_32bit_addresses = _DAscript.use_32bit_addresses
use_64bit_addresses = _DAscript.use_64bit_addresses

def load_program(*args):
  return _DAscript.load_program(*args)
load_program = _DAscript.load_program
class Section(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    Other = _DAscript.Section_Other
    Standard = _DAscript.Section_Standard
    Uninitialised = _DAscript.Section_Uninitialised
    SymbolTable = _DAscript.Section_SymbolTable
    StringTable = _DAscript.Section_StringTable
    Relocations = _DAscript.Section_Relocations
    Information = _DAscript.Section_Information
    Dynamic = _DAscript.Section_Dynamic
    Hash = _DAscript.Section_Hash
    DebugInfo = _DAscript.Section_DebugInfo
    Phdr = _DAscript.Section_Phdr
    Interpreter = _DAscript.Section_Interpreter
    Writeable = _DAscript.Section_Writeable
    Allocatable = _DAscript.Section_Allocatable
    Executable = _DAscript.Section_Executable
    __swig_destroy__ = _DAscript.delete_Section
    def kind(self): return _DAscript.Section_kind(self)
    def attributes(self): return _DAscript.Section_attributes(self)
    def name(self): return _DAscript.Section_name(self)
    def virtual_address(self): return _DAscript.Section_virtual_address(self)
    def physical_address(self): return _DAscript.Section_physical_address(self)
    def address_space(self): return _DAscript.Section_address_space(self)
    def size(self): return _DAscript.Section_size(self)
    def memory_size(self): return _DAscript.Section_memory_size(self)
    def alignment(self): return _DAscript.Section_alignment(self)
    def word_size(self): return _DAscript.Section_word_size(self)
    def contents(self): return _DAscript.Section_contents(self)
    def contains(self, *args): return _DAscript.Section_contains(self, *args)
    def __repr__(self): return _DAscript.Section___repr__(self)
    def __str__(self): return _DAscript.Section___str__(self)
    def __contains__(self, *args): return _DAscript.Section___contains__(self, *args)
Section_swigregister = _DAscript.Section_swigregister
Section_swigregister(Section)

class Type(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    Void = _DAscript.Type_Void
    Label = _DAscript.Type_Label
    Char = _DAscript.Type_Char
    SignedChar = _DAscript.Type_SignedChar
    UnsignedChar = _DAscript.Type_UnsignedChar
    Short = _DAscript.Type_Short
    UnsignedShort = _DAscript.Type_UnsignedShort
    Int = _DAscript.Type_Int
    UnsignedInt = _DAscript.Type_UnsignedInt
    Long = _DAscript.Type_Long
    UnsignedLong = _DAscript.Type_UnsignedLong
    Bool = _DAscript.Type_Bool
    Float = _DAscript.Type_Float
    Double = _DAscript.Type_Double
    LongDouble = _DAscript.Type_LongDouble
    ComplexFloat = _DAscript.Type_ComplexFloat
    ComplexDouble = _DAscript.Type_ComplexDouble
    ComplexLongDouble = _DAscript.Type_ComplexLongDouble
    LongLong = _DAscript.Type_LongLong
    UnsignedLongLong = _DAscript.Type_UnsignedLongLong
    Ellipsis = _DAscript.Type_Ellipsis
    Enumeration = _DAscript.Type_Enumeration
    Reference = _DAscript.Type_Reference
    Pointer = _DAscript.Type_Pointer
    PointerToMember = _DAscript.Type_PointerToMember
    Array = _DAscript.Type_Array
    StructUnionClass = _DAscript.Type_StructUnionClass
    Function = _DAscript.Type_Function
    RVReference = _DAscript.Type_RVReference
    ShortFixed = _DAscript.Type_ShortFixed
    UnsignedShortFixed = _DAscript.Type_UnsignedShortFixed
    Fixed = _DAscript.Type_Fixed
    UnsignedFixed = _DAscript.Type_UnsignedFixed
    LongFixed = _DAscript.Type_LongFixed
    UnsignedLongFixed = _DAscript.Type_UnsignedLongFixed
    ShortAccum = _DAscript.Type_ShortAccum
    UnsignedShortAccum = _DAscript.Type_UnsignedShortAccum
    Accum = _DAscript.Type_Accum
    UnsignedAccum = _DAscript.Type_UnsignedAccum
    LongAccum = _DAscript.Type_LongAccum
    UnsignedLongAccum = _DAscript.Type_UnsignedLongAccum
    NoModifiers = _DAscript.Type_NoModifiers
    Const = _DAscript.Type_Const
    Volatile = _DAscript.Type_Volatile
    Saturated = _DAscript.Type_Saturated
    Circular = _DAscript.Type_Circular
    Restrict = _DAscript.Type_Restrict
    Atomic = _DAscript.Type_Atomic
    __swig_destroy__ = _DAscript.delete_Type
    def __eq__(self, *args): return _DAscript.Type___eq__(self, *args)
    def kind(self): return _DAscript.Type_kind(self)
    def modifiers(self): return _DAscript.Type_modifiers(self)
    def scope(self): return _DAscript.Type_scope(self)
    def referenced_type(self): return _DAscript.Type_referenced_type(self)
    def c_declaration(self): return _DAscript.Type_c_declaration(self)
    def __repr__(self): return _DAscript.Type___repr__(self)
Type_swigregister = _DAscript.Type_swigregister
Type_swigregister(Type)

class ScopeList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_ScopeList
    def item(self, *args): return _DAscript.ScopeList_item(self, *args)
    def length(self): return _DAscript.ScopeList_length(self)
    def __len__(self): return _DAscript.ScopeList___len__(self)
    def __getitem__(self, *args): return _DAscript.ScopeList___getitem__(self, *args)
    def __str__(self): return _DAscript.ScopeList___str__(self)
ScopeList_swigregister = _DAscript.ScopeList_swigregister
ScopeList_swigregister(ScopeList)

class Scope(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    Unknown = _DAscript.Scope_Unknown
    Global = _DAscript.Scope_Global
    Namespace = _DAscript.Scope_Namespace
    File = _DAscript.Scope_File
    Class = _DAscript.Scope_Class
    Function = _DAscript.Scope_Function
    LexicalBlock = _DAscript.Scope_LexicalBlock
    __swig_destroy__ = _DAscript.delete_Scope
    def __eq__(self, *args): return _DAscript.Scope___eq__(self, *args)
    def kind(self): return _DAscript.Scope_kind(self)
    def start_address(self): return _DAscript.Scope_start_address(self)
    def end_address(self): return _DAscript.Scope_end_address(self)
    def symbol(self): return _DAscript.Scope_symbol(self)
    def enclosing_scope(self): return _DAscript.Scope_enclosing_scope(self)
    def enclosed_scopes(self): return _DAscript.Scope_enclosed_scopes(self)
    def symbols(self): return _DAscript.Scope_symbols(self)
    def __repr__(self): return _DAscript.Scope___repr__(self)
    def __str__(self): return _DAscript.Scope___str__(self)
Scope_swigregister = _DAscript.Scope_swigregister
Scope_swigregister(Scope)

class SourceList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_SourceList
    def item(self, *args): return _DAscript.SourceList_item(self, *args)
    def length(self): return _DAscript.SourceList_length(self)
    def __len__(self): return _DAscript.SourceList___len__(self)
    def __getitem__(self, *args): return _DAscript.SourceList___getitem__(self, *args)
SourceList_swigregister = _DAscript.SourceList_swigregister
SourceList_swigregister(SourceList)

class DeclarationCoordinates(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _DAscript.new_DeclarationCoordinates(*args)
        try: self.this.append(this)
        except: self.this = this
    filename = _swig_property(_DAscript.DeclarationCoordinates_filename_get)
    line = _swig_property(_DAscript.DeclarationCoordinates_line_get)
    __swig_destroy__ = _DAscript.delete_DeclarationCoordinates
DeclarationCoordinates_swigregister = _DAscript.DeclarationCoordinates_swigregister
DeclarationCoordinates_swigregister(DeclarationCoordinates)

class Source(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __swig_destroy__ = _DAscript.delete_Source
    def filename(self): return _DAscript.Source_filename(self)
    def line(self): return _DAscript.Source_line(self)
    def scope(self): return _DAscript.Source_scope(self)
    def start_address(self): return _DAscript.Source_start_address(self)
    def end_address(self): return _DAscript.Source_end_address(self)
    def instances(self): return _DAscript.Source_instances(self)
    def __repr__(self): return _DAscript.Source___repr__(self)
    def __str__(self): return _DAscript.Source___str__(self)
Source_swigregister = _DAscript.Source_swigregister
Source_swigregister(Source)

class Symbol(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    Unknown = _DAscript.Symbol_Unknown
    Tag = _DAscript.Symbol_Tag
    Constant = _DAscript.Symbol_Constant
    Parameter = _DAscript.Symbol_Parameter
    Variable = _DAscript.Symbol_Variable
    Member = _DAscript.Symbol_Member
    Enumerator = _DAscript.Symbol_Enumerator
    Function = _DAscript.Symbol_Function
    Typedef = _DAscript.Symbol_Typedef
    Namespace = _DAscript.Symbol_Namespace
    __swig_destroy__ = _DAscript.delete_Symbol
    def __eq__(self, *args): return _DAscript.Symbol___eq__(self, *args)
    def name(self): return _DAscript.Symbol_name(self)
    def mangled_name(self): return _DAscript.Symbol_mangled_name(self)
    def size(self): return _DAscript.Symbol_size(self)
    def value(self): return _DAscript.Symbol_value(self)
    def kind(self): return _DAscript.Symbol_kind(self)
    def type(self): return _DAscript.Symbol_type(self)
    def scope(self): return _DAscript.Symbol_scope(self)
    def enclosing_scope(self): return _DAscript.Symbol_enclosing_scope(self)
    def address_space(self): return _DAscript.Symbol_address_space(self)
    def c_declaration(self): return _DAscript.Symbol_c_declaration(self)
    def declaration_coordinates(self): return _DAscript.Symbol_declaration_coordinates(self)
    def __repr__(self): return _DAscript.Symbol___repr__(self)
    def __str__(self): return _DAscript.Symbol___str__(self)
Symbol_swigregister = _DAscript.Symbol_swigregister
Symbol_swigregister(Symbol)

class SymbolScope(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_SymbolScope
    def symbol(self): return _DAscript.SymbolScope_symbol(self)
    def scope(self): return _DAscript.SymbolScope_scope(self)
    def __str__(self): return _DAscript.SymbolScope___str__(self)
SymbolScope_swigregister = _DAscript.SymbolScope_swigregister
SymbolScope_swigregister(SymbolScope)

class ITcbRevAll(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    CR_8_TO_1 = _DAscript.ITcbRevAll_CR_8_TO_1
    CR_4_TO_1 = _DAscript.ITcbRevAll_CR_4_TO_1
    CR_2_TO_1 = _DAscript.ITcbRevAll_CR_2_TO_1
    CR_1_TO_1 = _DAscript.ITcbRevAll_CR_1_TO_1
    CR_1_TO_2 = _DAscript.ITcbRevAll_CR_1_TO_2
    CR_1_TO_4 = _DAscript.ITcbRevAll_CR_1_TO_4
    CR_1_TO_6 = _DAscript.ITcbRevAll_CR_1_TO_6
    CR_1_TO_8 = _DAscript.ITcbRevAll_CR_1_TO_8
    TRACE_TO = _DAscript.ITcbRevAll_TRACE_TO
    TRACE_FROM = _DAscript.ITcbRevAll_TRACE_FROM
    def getTcbRev(self): return _DAscript.ITcbRevAll_getTcbRev(self)
    def isDebug(self): return _DAscript.ITcbRevAll_isDebug(self)
    def setDebug(self, *args): return _DAscript.ITcbRevAll_setDebug(self, *args)
    def isException(self): return _DAscript.ITcbRevAll_isException(self)
    def setException(self, *args): return _DAscript.ITcbRevAll_setException(self, *args)
    def isSupervisor(self): return _DAscript.ITcbRevAll_isSupervisor(self)
    def setSupervisor(self, *args): return _DAscript.ITcbRevAll_setSupervisor(self, *args)
    def isKernel(self): return _DAscript.ITcbRevAll_isKernel(self)
    def setKernel(self, *args): return _DAscript.ITcbRevAll_setKernel(self, *args)
    def isUser(self): return _DAscript.ITcbRevAll_isUser(self)
    def setUser(self, *args): return _DAscript.ITcbRevAll_setUser(self, *args)
    def getTraceSpecificAsid(self): return _DAscript.ITcbRevAll_getTraceSpecificAsid(self)
    def setTraceSpecificAsid(self, *args): return _DAscript.ITcbRevAll_setTraceSpecificAsid(self, *args)
    def isTraceAllProcesses(self): return _DAscript.ITcbRevAll_isTraceAllProcesses(self)
    def setTraceAllProcesses(self, *args): return _DAscript.ITcbRevAll_setTraceAllProcesses(self, *args)
    def getSyncPeriod(self): return _DAscript.ITcbRevAll_getSyncPeriod(self)
    def setSyncPeriod(self, *args): return _DAscript.ITcbRevAll_setSyncPeriod(self, *args)
    def isOffChip(self): return _DAscript.ITcbRevAll_isOffChip(self)
    def setOffChip(self, *args): return _DAscript.ITcbRevAll_setOffChip(self, *args)
    def isCycleAccurate(self): return _DAscript.ITcbRevAll_isCycleAccurate(self)
    def setCycleAccurate(self, *args): return _DAscript.ITcbRevAll_setCycleAccurate(self, *args)
    def isInhibitOverflow(self): return _DAscript.ITcbRevAll_isInhibitOverflow(self)
    def setInhibitOverflow(self, *args): return _DAscript.ITcbRevAll_setInhibitOverflow(self, *args)
    def isAllBranches(self): return _DAscript.ITcbRevAll_isAllBranches(self)
    def setAllBranches(self, *args): return _DAscript.ITcbRevAll_setAllBranches(self, *args)
    def isCalibrationMode(self): return _DAscript.ITcbRevAll_isCalibrationMode(self)
    def setCalibrationMode(self, *args): return _DAscript.ITcbRevAll_setCalibrationMode(self, *args)
    def isEnableInitially(self): return _DAscript.ITcbRevAll_isEnableInitially(self)
    def setEnableInitially(self, *args): return _DAscript.ITcbRevAll_setEnableInitially(self, *args)
    def isHwDebugMode(self): return _DAscript.ITcbRevAll_isHwDebugMode(self)
    def setHwDebugMode(self, *args): return _DAscript.ITcbRevAll_setHwDebugMode(self, *args)
    def setEnableTrace(self, *args): return _DAscript.ITcbRevAll_setEnableTrace(self, *args)
    def isEnableTrace(self): return _DAscript.ITcbRevAll_isEnableTrace(self)
    def getClockRatio(self): return _DAscript.ITcbRevAll_getClockRatio(self)
    def setClockRatio(self, *args): return _DAscript.ITcbRevAll_setClockRatio(self, *args)
    def getOnChipToFrom(self): return _DAscript.ITcbRevAll_getOnChipToFrom(self)
    def setOnChipToFrom(self, *args): return _DAscript.ITcbRevAll_setOnChipToFrom(self, *args)
    def setOffChipStream(self, *args): return _DAscript.ITcbRevAll_setOffChipStream(self, *args)
    def getOffChipStream(self): return _DAscript.ITcbRevAll_getOffChipStream(self)
    __swig_destroy__ = _DAscript.delete_ITcbRevAll
ITcbRevAll_swigregister = _DAscript.ITcbRevAll_swigregister
ITcbRevAll_swigregister(ITcbRevAll)

class IIflowRev2(ITcbRevAll):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def getEnableSpecialTrace(self): return _DAscript.IIflowRev2_getEnableSpecialTrace(self)
    def setEnableSpecialTrace(self, *args): return _DAscript.IIflowRev2_setEnableSpecialTrace(self, *args)
    def getDeltaCycleMode(self): return _DAscript.IIflowRev2_getDeltaCycleMode(self)
    def setDeltaCycleMode(self, *args): return _DAscript.IIflowRev2_setDeltaCycleMode(self, *args)
    def getBreakpointMatch(self): return _DAscript.IIflowRev2_getBreakpointMatch(self)
    def setBreakpointMatch(self, *args): return _DAscript.IIflowRev2_setBreakpointMatch(self, *args)
    def getFilteredDataTrace(self): return _DAscript.IIflowRev2_getFilteredDataTrace(self)
    def setFilteredDataTrace(self, *args): return _DAscript.IIflowRev2_setFilteredDataTrace(self, *args)
    def getExcCallReturn(self): return _DAscript.IIflowRev2_getExcCallReturn(self)
    def setExcCallReturn(self, *args): return _DAscript.IIflowRev2_setExcCallReturn(self, *args)
    def getFuncCallReturn(self): return _DAscript.IIflowRev2_getFuncCallReturn(self)
    def setFuncCallReturn(self, *args): return _DAscript.IIflowRev2_setFuncCallReturn(self, *args)
    def getExtendedFilteredDataTrace(self): return _DAscript.IIflowRev2_getExtendedFilteredDataTrace(self)
    def setExtendedFilteredDataTrace(self, *args): return _DAscript.IIflowRev2_setExtendedFilteredDataTrace(self, *args)
    __swig_destroy__ = _DAscript.delete_IIflowRev2
IIflowRev2_swigregister = _DAscript.IIflowRev2_swigregister
IIflowRev2_swigregister(IIflowRev2)

class IIflowRev3(IIflowRev2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def getTraceSpecificAsid(self): return _DAscript.IIflowRev3_getTraceSpecificAsid(self)
    def setTraceSpecificAsid(self, *args): return _DAscript.IIflowRev3_setTraceSpecificAsid(self, *args)
    def getTraceAllProcesses(self): return _DAscript.IIflowRev3_getTraceAllProcesses(self)
    def setTraceAllProcesses(self, *args): return _DAscript.IIflowRev3_setTraceAllProcesses(self, *args)
    def getTraceSpecificGuest(self): return _DAscript.IIflowRev3_getTraceSpecificGuest(self)
    def setTraceSpecificGuest(self, *args): return _DAscript.IIflowRev3_setTraceSpecificGuest(self, *args)
    def getTraceAllGuests(self): return _DAscript.IIflowRev3_getTraceAllGuests(self)
    def setTraceAllGuests(self, *args): return _DAscript.IIflowRev3_setTraceAllGuests(self, *args)
    def isUTMEnable(self): return _DAscript.IIflowRev3_isUTMEnable(self)
    def setUTMEnable(self, *args): return _DAscript.IIflowRev3_setUTMEnable(self, *args)
    def deltaCycleDivide(self): return _DAscript.IIflowRev3_deltaCycleDivide(self)
    def setDeltaCycleDivide(self, *args): return _DAscript.IIflowRev3_setDeltaCycleDivide(self, *args)
    __swig_destroy__ = _DAscript.delete_IIflowRev3
IIflowRev3_swigregister = _DAscript.IIflowRev3_swigregister
IIflowRev3_swigregister(IIflowRev3)

class ITcbRev0(ITcbRevAll):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    PC_ONLY = _DAscript.ITcbRev0_PC_ONLY
    PC_AND_LOAD_ADDR = _DAscript.ITcbRev0_PC_AND_LOAD_ADDR
    PC_AND_STORE_ADDR = _DAscript.ITcbRev0_PC_AND_STORE_ADDR
    PC_AND_LOAD_AND_STORE_ADDR = _DAscript.ITcbRev0_PC_AND_LOAD_AND_STORE_ADDR
    PC_AND_LOAD_ADDR_AND_DATA = _DAscript.ITcbRev0_PC_AND_LOAD_ADDR_AND_DATA
    PC_AND_STORE_ADDR_AND_DATA = _DAscript.ITcbRev0_PC_AND_STORE_ADDR_AND_DATA
    PC_AND_LOAD_AND_STORE_ADDR_AND_DATA = _DAscript.ITcbRev0_PC_AND_LOAD_AND_STORE_ADDR_AND_DATA
    def getMode(self): return _DAscript.ITcbRev0_getMode(self)
    def setMode(self, *args): return _DAscript.ITcbRev0_setMode(self, *args)
    __swig_destroy__ = _DAscript.delete_ITcbRev0
ITcbRev0_swigregister = _DAscript.ITcbRev0_swigregister
ITcbRev0_swigregister(ITcbRev0)

class ITcbRev1(ITcbRev0):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def isCapturePc(self): return _DAscript.ITcbRev1_isCapturePc(self)
    def setCapturePc(self, *args): return _DAscript.ITcbRev1_setCapturePc(self, *args)
    def isCaptureLoadAddresses(self): return _DAscript.ITcbRev1_isCaptureLoadAddresses(self)
    def setCaptureLoadAddresses(self, *args): return _DAscript.ITcbRev1_setCaptureLoadAddresses(self, *args)
    def isCaptureStoreAddresses(self): return _DAscript.ITcbRev1_isCaptureStoreAddresses(self)
    def setCaptureStoreAddresses(self, *args): return _DAscript.ITcbRev1_setCaptureStoreAddresses(self, *args)
    def isCaptureLoadDataCycles(self): return _DAscript.ITcbRev1_isCaptureLoadDataCycles(self)
    def setCaptureLoadDataCycles(self, *args): return _DAscript.ITcbRev1_setCaptureLoadDataCycles(self, *args)
    def isCaptureStoreDataCyles(self): return _DAscript.ITcbRev1_isCaptureStoreDataCyles(self)
    def setCaptureStoreDataCyles(self, *args): return _DAscript.ITcbRev1_setCaptureStoreDataCyles(self, *args)
    def isInstMiss(self): return _DAscript.ITcbRev1_isInstMiss(self)
    def setInstMiss(self, *args): return _DAscript.ITcbRev1_setInstMiss(self, *args)
    def isLoadStoreMiss(self): return _DAscript.ITcbRev1_isLoadStoreMiss(self)
    def setLoadStoreMiss(self, *args): return _DAscript.ITcbRev1_setLoadStoreMiss(self, *args)
    def isFuncCallReturn(self): return _DAscript.ITcbRev1_isFuncCallReturn(self)
    def setFuncCallReturn(self, *args): return _DAscript.ITcbRev1_setFuncCallReturn(self, *args)
    def isRecordImLsmFcr(self): return _DAscript.ITcbRev1_isRecordImLsmFcr(self)
    def setRecordImLsmFcr(self, *args): return _DAscript.ITcbRev1_setRecordImLsmFcr(self, *args)
    def getProcessorId(self): return _DAscript.ITcbRev1_getProcessorId(self)
    def setProcessorId(self, *args): return _DAscript.ITcbRev1_setProcessorId(self, *args)
    def isTraceAllCpus(self): return _DAscript.ITcbRev1_isTraceAllCpus(self)
    def setTraceAllCpus(self, *args): return _DAscript.ITcbRev1_setTraceAllCpus(self, *args)
    def getTraceSpecificCpu(self): return _DAscript.ITcbRev1_getTraceSpecificCpu(self)
    def setTraceSpecificCpu(self, *args): return _DAscript.ITcbRev1_setTraceSpecificCpu(self, *args)
    def isTraceAllTcs(self): return _DAscript.ITcbRev1_isTraceAllTcs(self)
    def setTraceAllTcs(self, *args): return _DAscript.ITcbRev1_setTraceAllTcs(self, *args)
    def getTraceSpecificTc(self): return _DAscript.ITcbRev1_getTraceSpecificTc(self)
    def setTraceSpecificTc(self, *args): return _DAscript.ITcbRev1_setTraceSpecificTc(self, *args)
    def isTraceTcInfo(self): return _DAscript.ITcbRev1_isTraceTcInfo(self)
    def setTraceTcInfo(self, *args): return _DAscript.ITcbRev1_setTraceTcInfo(self, *args)
    def isStopWhenFull(self): return _DAscript.ITcbRev1_isStopWhenFull(self)
    def setStopWhenFull(self, *args): return _DAscript.ITcbRev1_setStopWhenFull(self, *args)
    __swig_destroy__ = _DAscript.delete_ITcbRev1
ITcbRev1_swigregister = _DAscript.ITcbRev1_swigregister
ITcbRev1_swigregister(ITcbRev1)

class ITcbRev2(ITcbRev1):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def isCMEnableTrace(self): return _DAscript.ITcbRev2_isCMEnableTrace(self)
    def setCMEnableTrace(self, *args): return _DAscript.ITcbRev2_setCMEnableTrace(self, *args)
    def isWriteBackCycles(self): return _DAscript.ITcbRev2_isWriteBackCycles(self)
    def setWriteBackCycles(self, *args): return _DAscript.ITcbRev2_setWriteBackCycles(self, *args)
    def isCMInhibitOverflow(self): return _DAscript.ITcbRev2_isCMInhibitOverflow(self)
    def setCMInhibitOverflow(self, *args): return _DAscript.ITcbRev2_setCMInhibitOverflow(self, *args)
    def getTimingInfoLevel(self): return _DAscript.ITcbRev2_getTimingInfoLevel(self)
    def setTimingInfoLevel(self, *args): return _DAscript.ITcbRev2_setTimingInfoLevel(self, *args)
    def isCMEnableTraceInitially(self): return _DAscript.ITcbRev2_isCMEnableTraceInitially(self)
    def setCMEnableTraceInitially(self, *args): return _DAscript.ITcbRev2_setCMEnableTraceInitially(self, *args)
    def isAddrTraceEnable(self): return _DAscript.ITcbRev2_isAddrTraceEnable(self)
    def setAddrTraceEnable(self, *args): return _DAscript.ITcbRev2_setAddrTraceEnable(self, *args)
    def getPort0Control(self): return _DAscript.ITcbRev2_getPort0Control(self)
    def setPort0Control(self, *args): return _DAscript.ITcbRev2_setPort0Control(self, *args)
    def getPort1Control(self): return _DAscript.ITcbRev2_getPort1Control(self)
    def setPort1Control(self, *args): return _DAscript.ITcbRev2_setPort1Control(self, *args)
    def getPort2Control(self): return _DAscript.ITcbRev2_getPort2Control(self)
    def setPort2Control(self, *args): return _DAscript.ITcbRev2_setPort2Control(self, *args)
    def getPort3Control(self): return _DAscript.ITcbRev2_getPort3Control(self)
    def setPort3Control(self, *args): return _DAscript.ITcbRev2_setPort3Control(self, *args)
    def getPort4Control(self): return _DAscript.ITcbRev2_getPort4Control(self)
    def setPort4Control(self, *args): return _DAscript.ITcbRev2_setPort4Control(self, *args)
    __swig_destroy__ = _DAscript.delete_ITcbRev2
ITcbRev2_swigregister = _DAscript.ITcbRev2_swigregister
ITcbRev2_swigregister(ITcbRev2)

class ITcbRev3(ITcbRev2):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def getPmTraceCounters(self): return _DAscript.ITcbRev3_getPmTraceCounters(self)
    def setPmTraceCounters(self, *args): return _DAscript.ITcbRev3_setPmTraceCounters(self, *args)
    def isPmSyncPoints(self): return _DAscript.ITcbRev3_isPmSyncPoints(self)
    def setPmSyncPoints(self, *args): return _DAscript.ITcbRev3_setPmSyncPoints(self, *args)
    def isPmBkptTrigger(self): return _DAscript.ITcbRev3_isPmBkptTrigger(self)
    def setPmBkptTrigger(self, *args): return _DAscript.ITcbRev3_setPmBkptTrigger(self, *args)
    def isPmFuncCallReturn(self): return _DAscript.ITcbRev3_isPmFuncCallReturn(self)
    def setPmFuncCallReturn(self, *args): return _DAscript.ITcbRev3_setPmFuncCallReturn(self, *args)
    def isPmOverflow(self): return _DAscript.ITcbRev3_isPmOverflow(self)
    def setPmOverflow(self, *args): return _DAscript.ITcbRev3_setPmOverflow(self, *args)
    def isFilteredDataTrace(self): return _DAscript.ITcbRev3_isFilteredDataTrace(self)
    def setFilteredDataTrace(self, *args): return _DAscript.ITcbRev3_setFilteredDataTrace(self, *args)
    def isEnhancedInstComplete(self): return _DAscript.ITcbRev3_isEnhancedInstComplete(self)
    def setEnhancedInstComplete(self, *args): return _DAscript.ITcbRev3_setEnhancedInstComplete(self, *args)
    def isSystemTraceEnable(self): return _DAscript.ITcbRev3_isSystemTraceEnable(self)
    def setSystemTraceEnable(self, *args): return _DAscript.ITcbRev3_setSystemTraceEnable(self, *args)
    def isSystemTraceCapture(self): return _DAscript.ITcbRev3_isSystemTraceCapture(self)
    def setSystemTraceCapture(self, *args): return _DAscript.ITcbRev3_setSystemTraceCapture(self, *args)
    __swig_destroy__ = _DAscript.delete_ITcbRev3
ITcbRev3_swigregister = _DAscript.ITcbRev3_swigregister
ITcbRev3_swigregister(ITcbRev3)

class ITcbRev4(ITcbRev3):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def setMsaDataTrace(self, *args): return _DAscript.ITcbRev4_setMsaDataTrace(self, *args)
    def getMsaDataTrace(self): return _DAscript.ITcbRev4_getMsaDataTrace(self)
    __swig_destroy__ = _DAscript.delete_ITcbRev4
ITcbRev4_swigregister = _DAscript.ITcbRev4_swigregister
ITcbRev4_swigregister(ITcbRev4)

class ITcbRev5(ITcbRev4):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def getTraceSpecificGuest(self): return _DAscript.ITcbRev5_getTraceSpecificGuest(self)
    def setTraceSpecificGuest(self, *args): return _DAscript.ITcbRev5_setTraceSpecificGuest(self, *args)
    def getTraceAllGuests(self): return _DAscript.ITcbRev5_getTraceAllGuests(self)
    def setTraceAllGuests(self, *args): return _DAscript.ITcbRev5_setTraceAllGuests(self, *args)
    __swig_destroy__ = _DAscript.delete_ITcbRev5
ITcbRev5_swigregister = _DAscript.ITcbRev5_swigregister
ITcbRev5_swigregister(ITcbRev5)

class ITcbRev6(ITcbRev5):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def isTraceDCID(self): return _DAscript.ITcbRev6_isTraceDCID(self)
    def setTraceDCID(self, *args): return _DAscript.ITcbRev6_setTraceDCID(self, *args)
    def isUTMEnable(self): return _DAscript.ITcbRev6_isUTMEnable(self)
    def setUTMEnable(self, *args): return _DAscript.ITcbRev6_setUTMEnable(self, *args)
    __swig_destroy__ = _DAscript.delete_ITcbRev6
ITcbRev6_swigregister = _DAscript.ITcbRev6_swigregister
ITcbRev6_swigregister(ITcbRev6)

class ITcbRevSupport(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def isRev0(self): return _DAscript.ITcbRevSupport_isRev0(self)
    def isRev1(self): return _DAscript.ITcbRevSupport_isRev1(self)
    def isRev2(self): return _DAscript.ITcbRevSupport_isRev2(self)
    def isRev3(self): return _DAscript.ITcbRevSupport_isRev3(self)
    def isRev4(self): return _DAscript.ITcbRevSupport_isRev4(self)
    def isRev5(self): return _DAscript.ITcbRevSupport_isRev5(self)
    def isRev6(self): return _DAscript.ITcbRevSupport_isRev6(self)
    def isIfRev0(self): return _DAscript.ITcbRevSupport_isIfRev0(self)
    def isIfRev2(self): return _DAscript.ITcbRevSupport_isIfRev2(self)
    def isIfRev3(self): return _DAscript.ITcbRevSupport_isIfRev3(self)
    def isBcm(self): return _DAscript.ITcbRevSupport_isBcm(self)
    def getIflowRev2(self): return _DAscript.ITcbRevSupport_getIflowRev2(self)
    def getIflowRev3(self): return _DAscript.ITcbRevSupport_getIflowRev3(self)
    def getTcbRev0(self): return _DAscript.ITcbRevSupport_getTcbRev0(self)
    def getTcbRev1(self): return _DAscript.ITcbRevSupport_getTcbRev1(self)
    def getTcbRev2(self): return _DAscript.ITcbRevSupport_getTcbRev2(self)
    def getTcbRev3(self): return _DAscript.ITcbRevSupport_getTcbRev3(self)
    def getTcbRev4(self): return _DAscript.ITcbRevSupport_getTcbRev4(self)
    def getTcbRev5(self): return _DAscript.ITcbRevSupport_getTcbRev5(self)
    def getTcbRev6(self): return _DAscript.ITcbRevSupport_getTcbRev6(self)
    __swig_destroy__ = _DAscript.delete_ITcbRevSupport
ITcbRevSupport_swigregister = _DAscript.ITcbRevSupport_swigregister
ITcbRevSupport_swigregister(ITcbRevSupport)

class StatisticalProfiler(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_StatisticalProfiler
    def SetSetting(self, *args): return _DAscript.StatisticalProfiler_SetSetting(self, *args)
    def GetSettings(self): return _DAscript.StatisticalProfiler_GetSettings(self)
    def ProfileFromTraceFile(self, *args): return _DAscript.StatisticalProfiler_ProfileFromTraceFile(self, *args)
    def Start(self, *args): return _DAscript.StatisticalProfiler_Start(self, *args)
    def Stop(self, *args): return _DAscript.StatisticalProfiler_Stop(self, *args)
    def NumberOfSamplesCollected(self): return _DAscript.StatisticalProfiler_NumberOfSamplesCollected(self)
    def NumberOfFunctionSamples(self): return _DAscript.StatisticalProfiler_NumberOfFunctionSamples(self)
    def NumberOfAddressSamples(self): return _DAscript.StatisticalProfiler_NumberOfAddressSamples(self)
    def NumberOfLineSamples(self): return _DAscript.StatisticalProfiler_NumberOfLineSamples(self)
    def ReadFunctionSamples(self, *args): return _DAscript.StatisticalProfiler_ReadFunctionSamples(self, *args)
    def ReadAddressSamples(self, *args): return _DAscript.StatisticalProfiler_ReadAddressSamples(self, *args)
    def ReadLineSamples(self, *args): return _DAscript.StatisticalProfiler_ReadLineSamples(self, *args)
    def ReadLineCoverage(self): return _DAscript.StatisticalProfiler_ReadLineCoverage(self)
    def ReadFunctionCoverage(self): return _DAscript.StatisticalProfiler_ReadFunctionCoverage(self)
    def GetReferenceFrame(self, *args): return _DAscript.StatisticalProfiler_GetReferenceFrame(self, *args)
    def Collecting(self): return _DAscript.StatisticalProfiler_Collecting(self)
StatisticalProfiler_swigregister = _DAscript.StatisticalProfiler_swigregister
StatisticalProfiler_swigregister(StatisticalProfiler)
cvar = _DAscript.cvar
channel_buffer_size = cvar.channel_buffer_size

class RealTimeTraceData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    INITIALISE = _DAscript.RealTimeTraceData_INITIALISE
    SEARCH_FORWARD = _DAscript.RealTimeTraceData_SEARCH_FORWARD
    SEARCH_BACKWARD = _DAscript.RealTimeTraceData_SEARCH_BACKWARD
    NEXT_THREAD = _DAscript.RealTimeTraceData_NEXT_THREAD
    PREVIOUS_THREAD = _DAscript.RealTimeTraceData_PREVIOUS_THREAD
    FIND_NEAREST_TO_METRIC = _DAscript.RealTimeTraceData_FIND_NEAREST_TO_METRIC
    FIND_BY_PACKET_INDEX = _DAscript.RealTimeTraceData_FIND_BY_PACKET_INDEX
    __swig_destroy__ = _DAscript.delete_RealTimeTraceData
    def LoadAndProcessEventData(self, *args): return _DAscript.RealTimeTraceData_LoadAndProcessEventData(self, *args)
    def GetTraceSettings(self): return _DAscript.RealTimeTraceData_GetTraceSettings(self)
    def SetTraceSettings(self, *args): return _DAscript.RealTimeTraceData_SetTraceSettings(self, *args)
    def TaskList(self): return _DAscript.RealTimeTraceData_TaskList(self)
    def TaskActivity(self, *args): return _DAscript.RealTimeTraceData_TaskActivity(self, *args)
    def Samples(self, *args): return _DAscript.RealTimeTraceData_Samples(self, *args)
    def CachedTaskActivity(self, *args): return _DAscript.RealTimeTraceData_CachedTaskActivity(self, *args)
    def CachedSamples(self, *args): return _DAscript.RealTimeTraceData_CachedSamples(self, *args)
    def PerformanceCounters(self, *args): return _DAscript.RealTimeTraceData_PerformanceCounters(self, *args)
    def SampleSearch(self, *args): return _DAscript.RealTimeTraceData_SampleSearch(self, *args)
    def GetSetupConfigurationDescription(self): return _DAscript.RealTimeTraceData_GetSetupConfigurationDescription(self)
    access_count = _swig_property(_DAscript.RealTimeTraceData_access_count_get, _DAscript.RealTimeTraceData_access_count_set)
RealTimeTraceData_swigregister = _DAscript.RealTimeTraceData_swigregister
RealTimeTraceData_swigregister(RealTimeTraceData)

class TraceThread(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Start(self): return _DAscript.TraceThread_Start(self)
    def Stop(self): return _DAscript.TraceThread_Stop(self)
    __swig_destroy__ = _DAscript.delete_TraceThread
    def destroy(self): return _DAscript.TraceThread_destroy(self)
TraceThread_swigregister = _DAscript.TraceThread_swigregister
TraceThread_swigregister(TraceThread)

class IMipsTrigger(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def isEnable(self): return _DAscript.IMipsTrigger_isEnable(self)
    def getCycle(self): return _DAscript.IMipsTrigger_getCycle(self)
    def setCycle(self, *args): return _DAscript.IMipsTrigger_setCycle(self, *args)
    def getAddrOffset(self): return _DAscript.IMipsTrigger_getAddrOffset(self)
    def setAddrOffset(self, *args): return _DAscript.IMipsTrigger_setAddrOffset(self, *args)
    def getAddrMask(self): return _DAscript.IMipsTrigger_getAddrMask(self)
    def setAddrMask(self, *args): return _DAscript.IMipsTrigger_setAddrMask(self, *args)
    def getMaskRange(self): return _DAscript.IMipsTrigger_getMaskRange(self)
    def setMaskRange(self, *args): return _DAscript.IMipsTrigger_setMaskRange(self, *args)
    def getAsid(self): return _DAscript.IMipsTrigger_getAsid(self)
    def setAsid(self, *args): return _DAscript.IMipsTrigger_setAsid(self, *args)
    def isAsidUsed(self): return _DAscript.IMipsTrigger_isAsidUsed(self)
    def setAsidUsed(self, *args): return _DAscript.IMipsTrigger_setAsidUsed(self, *args)
    def getTc(self): return _DAscript.IMipsTrigger_getTc(self)
    def setTc(self, *args): return _DAscript.IMipsTrigger_setTc(self, *args)
    def isTcUsed(self): return _DAscript.IMipsTrigger_isTcUsed(self)
    def setTcUsed(self, *args): return _DAscript.IMipsTrigger_setTcUsed(self, *args)
    def getDataValue(self): return _DAscript.IMipsTrigger_getDataValue(self)
    def setDataValue(self, *args): return _DAscript.IMipsTrigger_setDataValue(self, *args)
    def getVmask(self): return _DAscript.IMipsTrigger_getVmask(self)
    def setVmask(self, *args): return _DAscript.IMipsTrigger_setVmask(self, *args)
    def getAmask(self): return _DAscript.IMipsTrigger_getAmask(self)
    def setAmask(self, *args): return _DAscript.IMipsTrigger_setAmask(self, *args)
    def isTuple(self): return _DAscript.IMipsTrigger_isTuple(self)
    def setTuple(self, *args): return _DAscript.IMipsTrigger_setTuple(self, *args)
    def isQualified(self): return _DAscript.IMipsTrigger_isQualified(self)
    def setQualified(self, *args): return _DAscript.IMipsTrigger_setQualified(self, *args)
    def isPrimed(self): return _DAscript.IMipsTrigger_isPrimed(self)
    def setPrimed(self, *args): return _DAscript.IMipsTrigger_setPrimed(self, *args)
    def getPrimedIndex(self): return _DAscript.IMipsTrigger_getPrimedIndex(self)
    def setPrimedIndex(self, *args): return _DAscript.IMipsTrigger_setPrimedIndex(self, *args)
    def getPassCount(self): return _DAscript.IMipsTrigger_getPassCount(self)
    def setPassCount(self, *args): return _DAscript.IMipsTrigger_setPassCount(self, *args)
    def isInvert(self): return _DAscript.IMipsTrigger_isInvert(self)
    def setInvert(self, *args): return _DAscript.IMipsTrigger_setInvert(self, *args)
    def getAction(self): return _DAscript.IMipsTrigger_getAction(self)
    def setAction(self, *args): return _DAscript.IMipsTrigger_setAction(self, *args)
    def setGuestUsed(self, *args): return _DAscript.IMipsTrigger_setGuestUsed(self, *args)
    def isGuestUsed(self): return _DAscript.IMipsTrigger_isGuestUsed(self)
    def setGuest(self, *args): return _DAscript.IMipsTrigger_setGuest(self, *args)
    def getGuest(self): return _DAscript.IMipsTrigger_getGuest(self)
    __swig_destroy__ = _DAscript.delete_IMipsTrigger
IMipsTrigger_swigregister = _DAscript.IMipsTrigger_swigregister
IMipsTrigger_swigregister(IMipsTrigger)

class DA(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _DAscript.delete_DA
    def IsRunning(self): return _DAscript.DA_IsRunning(self)
    def Run(self, *args): return _DAscript.DA_Run(self, *args)
    def Stop(self, *args): return _DAscript.DA_Stop(self, *args)
    def ReadRegister(self, *args): return _DAscript.DA_ReadRegister(self, *args)
    def ReadRegisters(self, *args): return _DAscript.DA_ReadRegisters(self, *args)
    def WriteRegister(self, *args): return _DAscript.DA_WriteRegister(self, *args)
    def WriteByte(self, *args): return _DAscript.DA_WriteByte(self, *args)
    def WriteWord(self, *args): return _DAscript.DA_WriteWord(self, *args)
    def WriteLong(self, *args): return _DAscript.DA_WriteLong(self, *args)
    def WriteQuad(self, *args): return _DAscript.DA_WriteQuad(self, *args)
    def WriteFloat(self, *args): return _DAscript.DA_WriteFloat(self, *args)
    def WriteDouble(self, *args): return _DAscript.DA_WriteDouble(self, *args)
    def WriteString(self, *args): return _DAscript.DA_WriteString(self, *args)
    def WriteWString(self, *args): return _DAscript.DA_WriteWString(self, *args)
    def ReadByte(self, *args): return _DAscript.DA_ReadByte(self, *args)
    def ReadWord(self, *args): return _DAscript.DA_ReadWord(self, *args)
    def ReadLong(self, *args): return _DAscript.DA_ReadLong(self, *args)
    def ReadQuad(self, *args): return _DAscript.DA_ReadQuad(self, *args)
    def ReadFloat(self, *args): return _DAscript.DA_ReadFloat(self, *args)
    def ReadDouble(self, *args): return _DAscript.DA_ReadDouble(self, *args)
    def ReadString(self, *args): return _DAscript.DA_ReadString(self, *args)
    def ReadWString(self, *args): return _DAscript.DA_ReadWString(self, *args)
    def GetCurrentTarget(self): return _DAscript.DA_GetCurrentTarget(self)
    def GetFirstTarget(self): return _DAscript.DA_GetFirstTarget(self)
    def GetNextTarget(self, *args): return _DAscript.DA_GetNextTarget(self, *args)
    def SelectTarget(self, *args): return _DAscript.DA_SelectTarget(self, *args)
    def RunTarget(self, *args): return _DAscript.DA_RunTarget(self, *args)
    def StopTarget(self, *args): return _DAscript.DA_StopTarget(self, *args)
    def GetTargetInfo(self, *args): return _DAscript.DA_GetTargetInfo(self, *args)
    def RunAllTargets(self): return _DAscript.DA_RunAllTargets(self)
    def StopAllTargets(self): return _DAscript.DA_StopAllTargets(self)
    def IsTargetRunning(self, *args): return _DAscript.DA_IsTargetRunning(self, *args)
    def HardReset(self): return _DAscript.DA_HardReset(self)
    def SoftReset(self): return _DAscript.DA_SoftReset(self)
    def CopyData(self, *args): return _DAscript.DA_CopyData(self, *args)
    def SymbolExists(self, *args): return _DAscript.DA_SymbolExists(self, *args)
    def EvaluateSymbol(self, *args): return _DAscript.DA_EvaluateSymbol(self, *args)
    def CreateBreakpoint(self, *args): return _DAscript.DA_CreateBreakpoint(self, *args)
    def UpdateBreakpoint(self, *args): return _DAscript.DA_UpdateBreakpoint(self, *args)
    def CreateBreakpointEx(self, *args): return _DAscript.DA_CreateBreakpointEx(self, *args)
    def CreateMultipleBreakpoints(self, *args): return _DAscript.DA_CreateMultipleBreakpoints(self, *args)
    def ClearAllBreakpoints(self): return _DAscript.DA_ClearAllBreakpoints(self)
    def ClearBreakpoint(self, *args): return _DAscript.DA_ClearBreakpoint(self, *args)
    def EnableBreakpoint(self, *args): return _DAscript.DA_EnableBreakpoint(self, *args)
    def GetLastBreakpointError(self, *args): return _DAscript.DA_GetLastBreakpointError(self, *args)
    def SetBreakpointAction(self, *args): return _DAscript.DA_SetBreakpointAction(self, *args)
    def SetBreakpointActionEx(self, *args): return _DAscript.DA_SetBreakpointActionEx(self, *args)
    def SetBreakpointCondition(self, *args): return _DAscript.DA_SetBreakpointCondition(self, *args)
    def SetWatchBreakpointParameters(self, *args): return _DAscript.DA_SetWatchBreakpointParameters(self, *args)
    def SetBreakpointDataMask(self, *args): return _DAscript.DA_SetBreakpointDataMask(self, *args)
    def SetBreakpointLocationMask(self, *args): return _DAscript.DA_SetBreakpointLocationMask(self, *args)
    def SetBreakpointLocationMaskEx(self, *args): return _DAscript.DA_SetBreakpointLocationMaskEx(self, *args)
    def SetBreakpointOverlay(self, *args): return _DAscript.DA_SetBreakpointOverlay(self, *args)
    def RecreateBreakpoint(self, *args): return _DAscript.DA_RecreateBreakpoint(self, *args)
    def FormatExpression(self, *args): return _DAscript.DA_FormatExpression(self, *args)
    def ConfigureTarget(self, *args): return _DAscript.DA_ConfigureTarget(self, *args)
    def SetJTAGClock(self, *args): return _DAscript.DA_SetJTAGClock(self, *args)
    def GetJTAGClock(self): return _DAscript.DA_GetJTAGClock(self)
    def GetHaltAfterReset(self): return _DAscript.DA_GetHaltAfterReset(self)
    def CanSetHaltAfterReset(self): return _DAscript.DA_CanSetHaltAfterReset(self)
    def SetHaltAfterReset(self, *args): return _DAscript.DA_SetHaltAfterReset(self, *args)
    def ChannelReserve(self, *args): return _DAscript.DA_ChannelReserve(self, *args)
    def ChannelRelease(self, *args): return _DAscript.DA_ChannelRelease(self, *args)
    def ChannelValidate(self, *args): return _DAscript.DA_ChannelValidate(self, *args)
    def ChannelDataReady(self, *args): return _DAscript.DA_ChannelDataReady(self, *args)
    def ChannelRead(self, *args): return _DAscript.DA_ChannelRead(self, *args)
    def ChannelReadString(self, *args): return _DAscript.DA_ChannelReadString(self, *args)
    def ChannelWriteString(self, *args): return _DAscript.DA_ChannelWriteString(self, *args)
    def ChannelWrite(self, *args): return _DAscript.DA_ChannelWrite(self, *args)
    def ChannelSetCallback(self, *args): return _DAscript.DA_ChannelSetCallback(self, *args)
    def LoadBinaryFile(self, *args): return _DAscript.DA_LoadBinaryFile(self, *args)
    def LoadBinaryFileEx(self, *args): return _DAscript.DA_LoadBinaryFileEx(self, *args)
    def LoadProgramFile(self, *args): return _DAscript.DA_LoadProgramFile(self, *args)
    def SaveBinaryFile(self, *args): return _DAscript.DA_SaveBinaryFile(self, *args)
    def MemoryFill(self, *args): return _DAscript.DA_MemoryFill(self, *args)
    def LoadProgramFileEx(self, *args): return _DAscript.DA_LoadProgramFileEx(self, *args)
    def LoadProgramFileSymbolsAtAddress(self, *args): return _DAscript.DA_LoadProgramFileSymbolsAtAddress(self, *args)
    def GetStartupOptions(self): return _DAscript.DA_GetStartupOptions(self)
    def UnloadProgramFileSymbols(self, *args): return _DAscript.DA_UnloadProgramFileSymbols(self, *args)
    def ProgramFileInfo(self, *args): return _DAscript.DA_ProgramFileInfo(self, *args)
    def InitMemory(self, *args): return _DAscript.DA_InitMemory(self, *args)
    def CheckMemory(self, *args): return _DAscript.DA_CheckMemory(self, *args)
    def UseTargetSpecificFileServer(self, *args): return _DAscript.DA_UseTargetSpecificFileServer(self, *args)
    def UseTargetSpecificSharedLibraryPaths(self, *args): return _DAscript.DA_UseTargetSpecificSharedLibraryPaths(self, *args)
    def IsUsingTargetSpecificFileServer(self): return _DAscript.DA_IsUsingTargetSpecificFileServer(self)
    def IsUsingTargetSpecificSharedLibraryPaths(self): return _DAscript.DA_IsUsingTargetSpecificSharedLibraryPaths(self)
    def SetFileServerPath(self, *args): return _DAscript.DA_SetFileServerPath(self, *args)
    def SetFileServerRoot(self, *args): return _DAscript.DA_SetFileServerRoot(self, *args)
    def GetFileServerPath(self, Global=True): return _DAscript.DA_GetFileServerPath(self, Global)
    def GetFileServerRoot(self, Legacy=True, Global=True): return _DAscript.DA_GetFileServerRoot(self, Legacy, Global)
    def MakeFileServerPath(self, *args): return _DAscript.DA_MakeFileServerPath(self, *args)
    def SetSharedLibraryPath(self, *args): return _DAscript.DA_SetSharedLibraryPath(self, *args)
    def SetBreakpointLogger(self, *args): return _DAscript.DA_SetBreakpointLogger(self, *args)
    def GetSharedLibraryPath(self, Global=True): return _DAscript.DA_GetSharedLibraryPath(self, Global)
    def GetFirstThread(self): return _DAscript.DA_GetFirstThread(self)
    def GetNextThread(self, *args): return _DAscript.DA_GetNextThread(self, *args)
    def GetChildThreads(self): return _DAscript.DA_GetChildThreads(self)
    def WriteMemory(self, *args): return _DAscript.DA_WriteMemory(self, *args)
    def UseTarget(self, *args): return _DAscript.DA_UseTarget(self, *args)
    def UseTargetOn(self, *args): return _DAscript.DA_UseTargetOn(self, *args)
    def CreateBreakpointOnTarget(self, *args): return _DAscript.DA_CreateBreakpointOnTarget(self, *args)
    def FindEnclosingFunction(self, *args): return _DAscript.DA_FindEnclosingFunction(self, *args)
    def ClearAllBreakpointsOnTarget(self, *args): return _DAscript.DA_ClearAllBreakpointsOnTarget(self, *args)
    def DuplicateBreakpointToTarget(self, *args): return _DAscript.DA_DuplicateBreakpointToTarget(self, *args)
    def ChannelFlush(self, *args): return _DAscript.DA_ChannelFlush(self, *args)
    def LoadHex(self, *args): return _DAscript.DA_LoadHex(self, *args)
    def LoadSREC(self, *args): return _DAscript.DA_LoadSREC(self, *args)
    def RunAllThreads(self, OnlyLoaded=True): return _DAscript.DA_RunAllThreads(self, OnlyLoaded)
    def StopAllThreads(self, OnlyLoaded=True): return _DAscript.DA_StopAllThreads(self, OnlyLoaded)
    def ForceAssertionFailure(self, *args): return _DAscript.DA_ForceAssertionFailure(self, *args)
    def EvaluateExpression(self, *args): return _DAscript.DA_EvaluateExpression(self, *args)
    def SetABI(self, *args): return _DAscript.DA_SetABI(self, *args)
    def GetABI(self): return _DAscript.DA_GetABI(self)
    def GetABIs(self): return _DAscript.DA_GetABIs(self)
    def SetISA(self, *args): return _DAscript.DA_SetISA(self, *args)
    def GetISA(self): return _DAscript.DA_GetISA(self)
    def GetISAs(self): return _DAscript.DA_GetISAs(self)
    def AddTarget(self, *args): return _DAscript.DA_AddTarget(self, *args)
    def AddTargetOn(self, *args): return _DAscript.DA_AddTargetOn(self, *args)
    def DCLAssembleCommandList(self, *args): return _DAscript.DA_DCLAssembleCommandList(self, *args)
    def DCLSetupCommandList(self, *args): return _DAscript.DA_DCLSetupCommandList(self, *args)
    def DCLRemoveCommandList(self, *args): return _DAscript.DA_DCLRemoveCommandList(self, *args)
    def DCLAttachCommandList(self, *args): return _DAscript.DA_DCLAttachCommandList(self, *args)
    def DCLDetachCommandList(self, *args): return _DAscript.DA_DCLDetachCommandList(self, *args)
    def DCLSetupTimedEvent(self, *args): return _DAscript.DA_DCLSetupTimedEvent(self, *args)
    def DCLRemoveEvent(self, *args): return _DAscript.DA_DCLRemoveEvent(self, *args)
    def SetOSFeature(self, *args): return _DAscript.DA_SetOSFeature(self, *args)
    def SetOverlayHandlingMode(self, *args): return _DAscript.DA_SetOverlayHandlingMode(self, *args)
    def GetOverlayHandlingMode(self, *args): return _DAscript.DA_GetOverlayHandlingMode(self, *args)
    def ReadMemoryBlock(self, *args): return _DAscript.DA_ReadMemoryBlock(self, *args)
    def WriteMemoryBlock(self, *args): return _DAscript.DA_WriteMemoryBlock(self, *args)
    def DCLFlushAll(self): return _DAscript.DA_DCLFlushAll(self)
    def ChannelReadBlock(self, *args): return _DAscript.DA_ChannelReadBlock(self, *args)
    def ChannelWriteBlock(self, *args): return _DAscript.DA_ChannelWriteBlock(self, *args)
    def DATraceDumpData(self, *args): return _DAscript.DA_DATraceDumpData(self, *args)
    def DATraceDumpProgress(self): return _DAscript.DA_DATraceDumpProgress(self)
    def DATraceGetState(self): return _DAscript.DA_DATraceGetState(self)
    def DATraceSetup(self, *args): return _DAscript.DA_DATraceSetup(self, *args)
    def DATraceReadSetup(self): return _DAscript.DA_DATraceReadSetup(self)
    def DATraceGetPacket(self, *args): return _DAscript.DA_DATraceGetPacket(self, *args)
    def GetEndian(self): return _DAscript.DA_GetEndian(self)
    def CpuInfo(self): return _DAscript.DA_CpuInfo(self)
    def GetOSInfo(self): return _DAscript.DA_GetOSInfo(self)
    def GetDiagnosticFileList(self): return _DAscript.DA_GetDiagnosticFileList(self)
    def GetDiagnosticFile(self, *args): return _DAscript.DA_GetDiagnosticFile(self, *args)
    def GetDiagnosticFileListFromCommsCookie(self, *args): return _DAscript.DA_GetDiagnosticFileListFromCommsCookie(self, *args)
    def GetDiagnosticFileFromCommsCookie(self, *args): return _DAscript.DA_GetDiagnosticFileFromCommsCookie(self, *args)
    def GetExecutionTraceMessages(self): return _DAscript.DA_GetExecutionTraceMessages(self)
    def StartTrace(self): return _DAscript.DA_StartTrace(self)
    def StopTrace(self): return _DAscript.DA_StopTrace(self)
    def ReadTrace(self, *args): return _DAscript.DA_ReadTrace(self, *args)
    def CollectTrace(self, *args): return _DAscript.DA_CollectTrace(self, *args)
    def NumTraceEntries(self): return _DAscript.DA_NumTraceEntries(self)
    def GetTraceConfiguration(self): return _DAscript.DA_GetTraceConfiguration(self)
    def InitTraceCalibration(self, *args): return _DAscript.DA_InitTraceCalibration(self, *args)
    def TraceCalibrate(self, *args): return _DAscript.DA_TraceCalibrate(self, *args)
    def ProbeWidth(self): return _DAscript.DA_ProbeWidth(self)
    def GetTraceConfig(self): return _DAscript.DA_GetTraceConfig(self)
    def StepInto(self): return _DAscript.DA_StepInto(self)
    def Step(self): return _DAscript.DA_Step(self)
    def StepIn(self): return _DAscript.DA_StepIn(self)
    def StepForce(self): return _DAscript.DA_StepForce(self)
    def StepOver(self): return _DAscript.DA_StepOver(self)
    def StepOut(self): return _DAscript.DA_StepOut(self)
    def StepRun(self): return _DAscript.DA_StepRun(self)
    def Unstep(self): return _DAscript.DA_Unstep(self)
    def StepReturn(self): return _DAscript.DA_StepReturn(self)
    def StepIntoSrc(self): return _DAscript.DA_StepIntoSrc(self)
    def StepSrc(self): return _DAscript.DA_StepSrc(self)
    def StepInSrc(self): return _DAscript.DA_StepInSrc(self)
    def StepForceSrc(self): return _DAscript.DA_StepForceSrc(self)
    def StepOverSrc(self): return _DAscript.DA_StepOverSrc(self)
    def StepOutSrc(self): return _DAscript.DA_StepOutSrc(self)
    def StepRunSrc(self): return _DAscript.DA_StepRunSrc(self)
    def UnstepSrc(self): return _DAscript.DA_UnstepSrc(self)
    def StepUntil(self, *args): return _DAscript.DA_StepUntil(self, *args)
    def StepUntilSrc(self, *args): return _DAscript.DA_StepUntilSrc(self, *args)
    def SuppressAllBreakpointsOnTarget(self, *args): return _DAscript.DA_SuppressAllBreakpointsOnTarget(self, *args)
    def SuppressAllBreakpoints(self): return _DAscript.DA_SuppressAllBreakpoints(self)
    def ActivateAllBreakpointsOnTarget(self, *args): return _DAscript.DA_ActivateAllBreakpointsOnTarget(self, *args)
    def ActivateAllBreakpoints(self): return _DAscript.DA_ActivateAllBreakpoints(self)
    def EnableAllBreakpointsOnTarget(self, *args): return _DAscript.DA_EnableAllBreakpointsOnTarget(self, *args)
    def EnableAllBreakpoints(self, *args): return _DAscript.DA_EnableAllBreakpoints(self, *args)
    def LookUpSymbol(self, *args): return _DAscript.DA_LookUpSymbol(self, *args)
    def GetOverlayAreaCount(self): return _DAscript.DA_GetOverlayAreaCount(self)
    def GetOverlayAreaString(self, *args): return _DAscript.DA_GetOverlayAreaString(self, *args)
    def GetOverlayCount(self, *args): return _DAscript.DA_GetOverlayCount(self, *args)
    def GetOverlayString(self, *args): return _DAscript.DA_GetOverlayString(self, *args)
    def GetActiveOverlay(self, *args): return _DAscript.DA_GetActiveOverlay(self, *args)
    def GetCurrentOverlay(self, *args): return _DAscript.DA_GetCurrentOverlay(self, *args)
    def SetCurrentOverlay(self, *args): return _DAscript.DA_SetCurrentOverlay(self, *args)
    def GetOverlayInfoFromAddress(self, *args): return _DAscript.DA_GetOverlayInfoFromAddress(self, *args)
    def EvaluateExpressionInternal(self, *args): return _DAscript.DA_EvaluateExpressionInternal(self, *args)
    def DTMRequestSetup(self, *args): return _DAscript.DA_DTMRequestSetup(self, *args)
    def DTMAddDataRequest(self, *args): return _DAscript.DA_DTMAddDataRequest(self, *args)
    def DTMDeleteRequest(self, *args): return _DAscript.DA_DTMDeleteRequest(self, *args)
    def DTMDeleteAllRequests(self, *args): return _DAscript.DA_DTMDeleteAllRequests(self, *args)
    def DTMStartAllRequests(self, *args): return _DAscript.DA_DTMStartAllRequests(self, *args)
    def DTMStopAllRequests(self, *args): return _DAscript.DA_DTMStopAllRequests(self, *args)
    def SetLogF(self, *args): return _DAscript.DA_SetLogF(self, *args)
    def SetStandardInput(self, *args): return _DAscript.DA_SetStandardInput(self, *args)
    def SetStandardOutput(self, *args): return _DAscript.DA_SetStandardOutput(self, *args)
    def SetStandardError(self, *args): return _DAscript.DA_SetStandardError(self, *args)
    def SetFileServerOutput(self, *args): return _DAscript.DA_SetFileServerOutput(self, *args)
    def SetVerboseFileServerOutput(self, *args): return _DAscript.DA_SetVerboseFileServerOutput(self, *args)
    def SetThreadExitHandler(self, *args): return _DAscript.DA_SetThreadExitHandler(self, *args)
    def GetLoadedThreads(self): return _DAscript.DA_GetLoadedThreads(self)
    def GetAllThreads(self): return _DAscript.DA_GetAllThreads(self)
    def GetVersion(self): return _DAscript.DA_GetVersion(self)
    def GetName(self): return _DAscript.DA_GetName(self)
    def ReadMemoryAttributes(self, *args): return _DAscript.DA_ReadMemoryAttributes(self, *args)
    def GetMemoryDetails(self, includeVirtualMemoryTypes=False): return _DAscript.DA_GetMemoryDetails(self, includeVirtualMemoryTypes)
    def EnableNetDebug(self, *args): return _DAscript.DA_EnableNetDebug(self, *args)
    def GetDASettingList(self): return _DAscript.DA_GetDASettingList(self)
    def GetProbeConfig(self): return _DAscript.DA_GetProbeConfig(self)
    def ReadDASetting(self, *args): return _DAscript.DA_ReadDASetting(self, *args)
    def WriteDASetting(self, *args): return _DAscript.DA_WriteDASetting(self, *args)
    def Disconnect(self): return _DAscript.DA_Disconnect(self)
    def EnableOSDebug(self, *args): return _DAscript.DA_EnableOSDebug(self, *args)
    def IsChildThread(self, *args): return _DAscript.DA_IsChildThread(self, *args)
    def FrameCount(self): return _DAscript.DA_FrameCount(self)
    def FrameGetCurrent(self): return _DAscript.DA_FrameGetCurrent(self)
    def FrameSetCurrent(self, *args): return _DAscript.DA_FrameSetCurrent(self, *args)
    def RegistersInfo(self, *args): return _DAscript.DA_RegistersInfo(self, *args)
    def FrameLocals(self, *args): return _DAscript.DA_FrameLocals(self, *args)
    def FrameArguments(self, *args): return _DAscript.DA_FrameArguments(self, *args)
    def FrameDetails(self, *args): return _DAscript.DA_FrameDetails(self, *args)
    def FrameAllDetails(self): return _DAscript.DA_FrameAllDetails(self)
    def FrameEvaluateSymbol(self, *args): return _DAscript.DA_FrameEvaluateSymbol(self, *args)
    def FrameAssignSymbol(self, *args): return _DAscript.DA_FrameAssignSymbol(self, *args)
    def GetRegDefs(self, *args): return _DAscript.DA_GetRegDefs(self, *args)
    def GetThreadStatus(self): return _DAscript.DA_GetThreadStatus(self)
    def SetScanTargetLogger(self, *args): return _DAscript.DA_SetScanTargetLogger(self, *args)
    def GetShaderRegBlockSizes(self): return _DAscript.DA_GetShaderRegBlockSizes(self)
    def UnloadProgramFileInfo(self): return _DAscript.DA_UnloadProgramFileInfo(self)
    def EnableCore(self, *args): return _DAscript.DA_EnableCore(self, *args)
    def IsCoreEnabled(self): return _DAscript.DA_IsCoreEnabled(self)
    def GetProgramFileName(self): return _DAscript.DA_GetProgramFileName(self)
    def IsSameProgramFile(self, *args): return _DAscript.DA_IsSameProgramFile(self, *args)
    def SourceFileInfoAt(self, *args): return _DAscript.DA_SourceFileInfoAt(self, *args)
    def GetAllSourceFiles(self): return _DAscript.DA_GetAllSourceFiles(self)
    def DisassembleRaw(self, *args): return _DAscript.DA_DisassembleRaw(self, *args)
    def RTTRawFileOpen(self, *args): return _DAscript.DA_RTTRawFileOpen(self, *args)
    def RTTRawFileClose(self, *args): return _DAscript.DA_RTTRawFileClose(self, *args)
    def RTTRawSampleCount(self, *args): return _DAscript.DA_RTTRawSampleCount(self, *args)
    def RTTRawBegin(self, *args): return _DAscript.DA_RTTRawBegin(self, *args)
    def RTTRawNext(self, *args): return _DAscript.DA_RTTRawNext(self, *args)
    def RTTStartCollection(self, *args): return _DAscript.DA_RTTStartCollection(self, *args)
    def RTTStopCollection(self, *args): return _DAscript.DA_RTTStopCollection(self, *args)
    def RTTDownloadData(self, *args): return _DAscript.DA_RTTDownloadData(self, *args)
    def RTTGetProgress(self): return _DAscript.DA_RTTGetProgress(self)
    def CreateTeam(self, *args): return _DAscript.DA_CreateTeam(self, *args)
    def DeleteTeam(self, *args): return _DAscript.DA_DeleteTeam(self, *args)
    def ListTeams(self): return _DAscript.DA_ListTeams(self)
    def GetBreakpointsRaw(self): return _DAscript.DA_GetBreakpointsRaw(self)
    def GetBreakpointConfiguration(self): return _DAscript.DA_GetBreakpointConfiguration(self)
    def GetInstrSizes(self): return _DAscript.DA_GetInstrSizes(self)
    def GetMinMaxInstrSizesAtAddress(self, *args): return _DAscript.DA_GetMinMaxInstrSizesAtAddress(self, *args)
    def ResetBreakpoint(self, *args): return _DAscript.DA_ResetBreakpoint(self, *args)
    def ResetAllBreakpoints(self): return _DAscript.DA_ResetAllBreakpoints(self)
    def GetAllTargets(self): return _DAscript.DA_GetAllTargets(self)
    def ForceDisconnectOwner(self, *args): return _DAscript.DA_ForceDisconnectOwner(self, *args)
    def DAResetUnconnectedTarget(self, *args): return _DAscript.DA_DAResetUnconnectedTarget(self, *args)
    def GetCommsDiagnosticLog(self): return _DAscript.DA_GetCommsDiagnosticLog(self)
    def GetCommsErrorLog(self): return _DAscript.DA_GetCommsErrorLog(self)
    def GetScanTargetLog(self, ProbeIdentifier=""): return _DAscript.DA_GetScanTargetLog(self, ProbeIdentifier)
    def GetHSPSettings(self, *args): return _DAscript.DA_GetHSPSettings(self, *args)
    def HaveHSPFilesChanged(self, *args): return _DAscript.DA_HaveHSPFilesChanged(self, *args)
    def ResetHSPFilesChanged(self, *args): return _DAscript.DA_ResetHSPFilesChanged(self, *args)
    def ReloadHSPFiles(self, *args): return _DAscript.DA_ReloadHSPFiles(self, *args)
    def SetHSPSettings(self, *args): return _DAscript.DA_SetHSPSettings(self, *args)
    def GetBoardFileInfo(self, *args): return _DAscript.DA_GetBoardFileInfo(self, *args)
    def GetHSPFilename(self): return _DAscript.DA_GetHSPFilename(self)
    def SymbolComplete(self, *args): return _DAscript.DA_SymbolComplete(self, *args)
    def GetMatchingHDItems(self, *args): return _DAscript.DA_GetMatchingHDItems(self, *args)
    def UsesLinuxDebugStub(self): return _DAscript.DA_UsesLinuxDebugStub(self)
    def GetWatchBreakpointParameters(self, *args): return _DAscript.DA_GetWatchBreakpointParameters(self, *args)
    def GetWatchBreakpointSupportedAccessSizes(self): return _DAscript.DA_GetWatchBreakpointSupportedAccessSizes(self)
    def GetBreakpointDataMask(self, *args): return _DAscript.DA_GetBreakpointDataMask(self, *args)
    def GetBreakpointLocationMask(self, *args): return _DAscript.DA_GetBreakpointLocationMask(self, *args)
    def TypeEnumMembers(self, *args): return _DAscript.DA_TypeEnumMembers(self, *args)
    def TypeMembers(self, *args): return _DAscript.DA_TypeMembers(self, *args)
    def TypeBases(self, *args): return _DAscript.DA_TypeBases(self, *args)
    def GetSupportedBreakpoints(self): return _DAscript.DA_GetSupportedBreakpoints(self)
    def ReadMemoryWithAttributes(self, *args): return _DAscript.DA_ReadMemoryWithAttributes(self, *args)
    def RunToAddress(self, *args): return _DAscript.DA_RunToAddress(self, *args)
    def GetSourceLineInformation(self, *args): return _DAscript.DA_GetSourceLineInformation(self, *args)
    def Reconnect(self): return _DAscript.DA_Reconnect(self)
    def SetSharedLibLogger(self, *args): return _DAscript.DA_SetSharedLibLogger(self, *args)
    def ConnectThread(self): return _DAscript.DA_ConnectThread(self)
    def DisconnectThread(self): return _DAscript.DA_DisconnectThread(self)
    def LockThread(self): return _DAscript.DA_LockThread(self)
    def UnlockThread(self): return _DAscript.DA_UnlockThread(self)
    def GetMapList(self): return _DAscript.DA_GetMapList(self)
    def MapAddressRange(self, *args): return _DAscript.DA_MapAddressRange(self, *args)
    def UnMapAddressRange(self, *args): return _DAscript.DA_UnMapAddressRange(self, *args)
    def ClearAddressRangeMaps(self): return _DAscript.DA_ClearAddressRangeMaps(self)
    def SetExpressionFunctionCallTimeout(self, *args): return _DAscript.DA_SetExpressionFunctionCallTimeout(self, *args)
    def StaticGlobalChoices(self, *args): return _DAscript.DA_StaticGlobalChoices(self, *args)
    def GetUnconnectedTargets(self): return _DAscript.DA_GetUnconnectedTargets(self)
    def GetCommsOptions(self, *args): return _DAscript.DA_GetCommsOptions(self, *args)
    def DoNotScanTargets(self): return _DAscript.DA_DoNotScanTargets(self)
    def AcquireTargetsExclusively(self): return _DAscript.DA_AcquireTargetsExclusively(self)
    def EnableAllMemory(self, ProbeIdentifier=""): return _DAscript.DA_EnableAllMemory(self, ProbeIdentifier)
    def EnableDelayedStdInput(self): return _DAscript.DA_EnableDelayedStdInput(self)
    def GetBreakpointAffectedData(self, *args): return _DAscript.DA_GetBreakpointAffectedData(self, *args)
    def GetBreakpointAffectedDataForAddresses(self, *args): return _DAscript.DA_GetBreakpointAffectedDataForAddresses(self, *args)
    def IsBreakpointAtAddress(self, *args): return _DAscript.DA_IsBreakpointAtAddress(self, *args)
    def GetBreakpointConditionEx(self, *args): return _DAscript.DA_GetBreakpointConditionEx(self, *args)
    def SetBreakpointConditionEx(self, *args): return _DAscript.DA_SetBreakpointConditionEx(self, *args)
    def RemoveTarget(self, *args): return _DAscript.DA_RemoveTarget(self, *args)
    def UpdateTargets(self): return _DAscript.DA_UpdateTargets(self)
    def ReadSetting(self, *args): return _DAscript.DA_ReadSetting(self, *args)
    def HandleAssert(self, *args): return _DAscript.DA_HandleAssert(self, *args)
    def ResetAsserts(self): return _DAscript.DA_ResetAsserts(self)
    def SetStdinput(self, *args): return _DAscript.DA_SetStdinput(self, *args)
    def GetSteppingMethods(self): return _DAscript.DA_GetSteppingMethods(self)
    def SetUserSteppingMethod(self, *args): return _DAscript.DA_SetUserSteppingMethod(self, *args)
    def SetUseSoftBreaks(self, *args): return _DAscript.DA_SetUseSoftBreaks(self, *args)
    def ReadModWrite(self, *args): return _DAscript.DA_ReadModWrite(self, *args)
    def ReadModWriteAtomic(self, *args): return _DAscript.DA_ReadModWriteAtomic(self, *args)
    def FindNearestValidSourceLine(self, *args): return _DAscript.DA_FindNearestValidSourceLine(self, *args)
    def AllGlobals(self): return _DAscript.DA_AllGlobals(self)
    def GetConfiguredSimulators(self): return _DAscript.DA_GetConfiguredSimulators(self)
    def CacheOperation(self, *args): return _DAscript.DA_CacheOperation(self, *args)
    def GetTriggeredBreakpointID(self): return _DAscript.DA_GetTriggeredBreakpointID(self)
    def ReadTLB(self, *args): return _DAscript.DA_ReadTLB(self, *args)
    def ReadTLBRange(self, *args): return _DAscript.DA_ReadTLBRange(self, *args)
    def WriteTLB(self, *args): return _DAscript.DA_WriteTLB(self, *args)
    def GetCacheInfo(self): return _DAscript.DA_GetCacheInfo(self)
    def ReadCache(self, *args): return _DAscript.DA_ReadCache(self, *args)
    def BindTC(self, *args): return _DAscript.DA_BindTC(self, *args)
    def GetTCs(self): return _DAscript.DA_GetTCs(self)
    def AcknowledgeReset(self, *args): return _DAscript.DA_AcknowledgeReset(self, *args)
    def GetFirmwareVersion(self, ProbeIdentifier=""): return _DAscript.DA_GetFirmwareVersion(self, ProbeIdentifier)
    def GetFirmwareFlashCode(self, ProbeIdentifier=""): return _DAscript.DA_GetFirmwareFlashCode(self, ProbeIdentifier)
    def GetTraceTypes(self): return _DAscript.DA_GetTraceTypes(self)
    def GetTraceWordSize(self): return _DAscript.DA_GetTraceWordSize(self)
    def ReadPerformanceCounterRegs(self): return _DAscript.DA_ReadPerformanceCounterRegs(self)
    def WritePerformanceCounterRegs(self, *args): return _DAscript.DA_WritePerformanceCounterRegs(self, *args)
    def InitialiseData(self): return _DAscript.DA_InitialiseData(self)
    def SetDebuggerSetting(self, *args): return _DAscript.DA_SetDebuggerSetting(self, *args)
    def GetDebuggerSettings(self): return _DAscript.DA_GetDebuggerSettings(self)
    def ResetInternalMemoryCaches(self): return _DAscript.DA_ResetInternalMemoryCaches(self)
    def OfcPollTrace(self): return _DAscript.DA_OfcPollTrace(self)
    def OfcConfigureTrace(self, *args): return _DAscript.DA_OfcConfigureTrace(self, *args)
    def MacroValue(self, *args): return _DAscript.DA_MacroValue(self, *args)
    def ProbeCapabilities(self): return _DAscript.DA_ProbeCapabilities(self)
    def SetMemoryAccessibility(self, *args): return _DAscript.DA_SetMemoryAccessibility(self, *args)
    def GetValidRanges(self, *args): return _DAscript.DA_GetValidRanges(self, *args)
    def NormaliseProbeIdentifier(self, *args): return _DAscript.DA_NormaliseProbeIdentifier(self, *args)
    def DiscoverProbes(self, *args): return _DAscript.DA_DiscoverProbes(self, *args)
    def GetConnectedProbes(self): return _DAscript.DA_GetConnectedProbes(self)
    def IsProbeConnected(self, *args): return _DAscript.DA_IsProbeConnected(self, *args)
    def TraceMemorySource(self, *args): return _DAscript.DA_TraceMemorySource(self, *args)
    def GetBreakpointChoices(self, *args): return _DAscript.DA_GetBreakpointChoices(self, *args)
    def GetComplexChoices(self, *args): return _DAscript.DA_GetComplexChoices(self, *args)
    def GetMipsTrigger(self, *args): return _DAscript.DA_GetMipsTrigger(self, *args)
    def ApplyMipsTrigger(self, *args): return _DAscript.DA_ApplyMipsTrigger(self, *args)
    def EnableTrigger(self, *args): return _DAscript.DA_EnableTrigger(self, *args)
    def HasStatisticalProfiler(self): return _DAscript.DA_HasStatisticalProfiler(self)
    def CreateStatisticalProfiler(self): return _DAscript.DA_CreateStatisticalProfiler(self)
    def DestroyStatisticalProfiler(self, *args): return _DAscript.DA_DestroyStatisticalProfiler(self, *args)
    def CreateRealTimeTrace(self): return _DAscript.DA_CreateRealTimeTrace(self)
    def DestroyRealTimeTrace(self, *args): return _DAscript.DA_DestroyRealTimeTrace(self, *args)
    def SetLogger(self, *args): return _DAscript.DA_SetLogger(self, *args)
    def RefreshLoggerLevels(self): return _DAscript.DA_RefreshLoggerLevels(self)
    def GetTraceSupport(self): return _DAscript.DA_GetTraceSupport(self)
    def SetTraceConfig(self, *args): return _DAscript.DA_SetTraceConfig(self, *args)
    def GetTupleChoices(self, *args): return _DAscript.DA_GetTupleChoices(self, *args)
    def GetPrimedChoices(self, *args): return _DAscript.DA_GetPrimedChoices(self, *args)
    def GetQualifiedChoices(self, *args): return _DAscript.DA_GetQualifiedChoices(self, *args)
    def GetTriggeredTrigger(self): return _DAscript.DA_GetTriggeredTrigger(self)
    def IsStatisticalProfilerCollectingOnThisProbe(self, *args): return _DAscript.DA_IsStatisticalProfilerCollectingOnThisProbe(self, *args)
    def GetProgramFile(self): return _DAscript.DA_GetProgramFile(self)
DA_swigregister = _DAscript.DA_swigregister
DA_swigregister(DA)


def GetLicenseFeatures(*args):
  return _DAscript.GetLicenseFeatures(*args)
GetLicenseFeatures = _DAscript.GetLicenseFeatures

def UseLicenseFeature(*args):
  return _DAscript.UseLicenseFeature(*args)
UseLicenseFeature = _DAscript.UseLicenseFeature

def SetThreadName(*args):
  return _DAscript.SetThreadName(*args)
SetThreadName = _DAscript.SetThreadName

def SetCallingThread(*args):
  return _DAscript.SetCallingThread(*args)
SetCallingThread = _DAscript.SetCallingThread

def CreateDA(unused=0):
  return _DAscript.CreateDA(unused)
CreateDA = _DAscript.CreateDA


