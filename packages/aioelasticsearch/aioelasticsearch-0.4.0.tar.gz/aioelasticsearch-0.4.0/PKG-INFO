Metadata-Version: 1.2
Name: aioelasticsearch
Version: 0.4.0
Summary: elasticsearch-py wrapper for asyncio
Home-page: https://github.com/wikibusiness/aioelasticsearch
Author: wikibusiness
Author-email: osf@wikibusiness.org
License: UNKNOWN
Description: aioelasticsearch
        ================
        
        :info: elasticsearch-py wrapper for asyncio
        
        .. image:: https://img.shields.io/travis/wikibusiness/aioelasticsearch.svg
            :target: https://travis-ci.org/wikibusiness/aioelasticsearch
        
        .. image:: https://img.shields.io/pypi/v/aioelasticsearch.svg
            :target: https://pypi.python.org/pypi/aioelasticsearch
        
        .. image:: https://codecov.io/gh/wikibusiness/aioelasticsearch/branch/master/graph/badge.svg
          :target: https://codecov.io/gh/wikibusiness/aioelasticsearch
        
        Installation
        ------------
        
        .. code-block:: shell
        
            pip install aioelasticsearch
        
        Usage
        -----
        
        .. code-block:: python
        
            import asyncio
        
            from aioelasticsearch import Elasticsearch
        
            async def go():
                es = Elasticsearch()
        
                print(await es.search())
        
                await es.close()
        
            loop = asyncio.get_event_loop()
            loop.run_until_complete(go())
            loop.close()
        
        Features
        --------
        
        Asynchronous `scroll <https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html>`_
        
        .. code-block:: python
        
            import asyncio
        
            from aioelasticsearch import Elasticsearch
            from aioelasticsearch.helpers import Scan
        
            async def go():
                async with Elasticsearch() as es:
                    async with Scan(
                        es,
                        index='index',
                        doc_type='doc_type',
                        query={},
                    ) as scan:
                        print(scan.total)
        
                        async for doc in scan:
                            print(doc['_source'])
        
            loop = asyncio.get_event_loop()
            loop.run_until_complete(go())
            loop.close()
        
Keywords: elasticsearch,asyncio,aiohttp
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.5.0
