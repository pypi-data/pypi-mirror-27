Metadata-Version: 2.0
Name: requests-testing
Version: 0.2.0
Summary: A utility library for mocking out the `requests` Python library.
Home-page: https://github.com/a-pertsev/requests-testing
Author: Pertsev Alexey
Author-email: oeermanz@gmail.com
License: Apache 2.0
Description-Content-Type: UNKNOWN
Keywords: requests mock testing
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development
Requires-Dist: requests (>=2.0)
Requires-Dist: cookies
Requires-Dist: six
Requires-Dist: mock
Provides-Extra: tests
Requires-Dist: pytest; extra == 'tests'
Requires-Dist: coverage (<5.0.0,>=3.7.1); extra == 'tests'
Requires-Dist: pytest-cov; extra == 'tests'
Requires-Dist: pytest-localserver; extra == 'tests'
Requires-Dist: flake8; extra == 'tests'
Requires-Dist: idna; extra == 'tests'

Requests-testing
================

.. image:: https://travis-ci.org/a-pertsev/requests-testing.svg?branch=master
    :target: https://travis-ci.org/a-pertsev/requests-testing

A utility library for mocking out the `requests` Python library.

Starting with requests-testing
------------------------------

Here is a simple example:

.. code-block:: python

    import requests
    import requests_testing


    @requests_testing.activate
    def example():
        requests_testing.add(request={'url': 'http://example.com'}, response={'body': 'ok'})
        resp = requests.get('http://example.com')

        assert resp.text == 'ok'
        assert len(requests_testing.calls) == 1
        assert requests_testing.calls[0].request.url == 'http://example.com/'

If your attempts to fetch a url which doesn't hit a match, ``ConnectionError`` will raise:

.. code-block:: python

    import requests
    import requests_testing

    from requests.exceptions import ConnectionError

    @responses.activate
    def test_error():
        with pytest.raises(ConnectionError):
            requests.get('http://example.com')



