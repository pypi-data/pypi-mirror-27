
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {end':([0,5,6,24,27,29,36,38,42,44,49,54,82,83,87,119,235,251,336,],[-303,-59,-64,-62,-66,-68,-63,-58,-65,0,-60,-67,-81,-69,-61,-70,-302,-71,-196,]),'FLOAT':([0,1,2,3,6,9,10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,27,28,29,31,32,33,34,36,37,38,40,41,42,43,45,46,47,48,49,50,51,52,53,54,56,58,60,61,62,65,67,68,69,70,75,77,78,79,80,81,82,83,84,85,87,89,94,95,98,101,104,109,115,118,119,121,122,126,127,128,129,130,131,132,133,139,146,174,184,186,187,195,203,204,205,207,211,214,216,221,224,225,227,232,233,234,235,236,241,243,245,250,251,263,266,286,288,297,301,314,319,327,331,333,336,340,343,344,347,359,360,361,365,366,375,376,411,428,432,436,437,472,494,495,496,515,516,518,520,],[53,-117,-52,53,-64,-116,-108,-96,-303,-104,-94,-107,53,-303,-102,-93,-215,-91,-62,-111,-113,-66,-98,-68,-115,-29,-100,-95,-63,-114,53,-99,53,-65,-303,-97,-101,-103,-110,-60,-112,-106,-109,-105,-67,53,53,-82,53,53,-160,-53,-10,-85,-9,-92,-84,-130,-301,-131,53,-81,-69,-146,-147,-61,53,-88,-87,-90,-89,-86,53,53,53,-70,-83,-161,53,53,-140,53,-137,53,53,-128,-30,53,53,53,-35,-36,53,-72,-193,-194,-73,-75,-192,53,-76,-74,-78,-77,53,53,-138,-302,-132,-127,-126,-129,-148,-71,53,-34,53,-31,53,53,53,53,53,53,-208,-196,-211,-195,-209,-212,-133,-134,-139,-149,-150,-33,-32,53,-207,-210,-199,-197,-198,-200,-202,-203,-201,-204,-206,-205,]),'TYPEDEF':([0,1,2,3,6,9,10,11,12,13,14,15,17,19,20,21,23,24,25,26,27,28,29,31,32,33,34,36,37,38,40,41,42,43,45,46,47,48,49,50,51,52,53,54,56,60,61,62,67,75,78,79,80,82,83,84,85,87,89,94,95,98,101,115,118,119,121,139,146,184,186,187,195,203,204,205,207,211,214,216,221,224,225,227,235,236,250,251,266,288,319,327,331,333,336,340,343,344,347,359,360,365,366,375,376,411,428,432,436,437,472,494,495,496,515,516,518,520,],[45,-117,-52,45,-64,-116,-108,-96,45,-104,-94,-107,45,-102,-93,-215,-91,-62,-111,-113,-66,-98,-68,-115,-29,-100,-95,-63,-114,45,-99,45,-65,45,-97,-101,-103,-110,-60,-112,-106,-109,-105,-67,45,-82,45,45,-53,-92,-130,-301,-131,-81,-69,-146,-147,-61,45,-88,-87,-90,-89,45,45,-70,-83,-30,45,45,-35,-36,45,-72,-193,-194,-73,-75,-192,45,-76,-74,-78,-77,-302,-132,-148,-71,-34,-31,45,45,45,-208,-196,-211,-195,-209,-212,-133,-134,-149,-150,-33,-32,45,-207,-210,-199,-197,-198,-200,-202,-203,-201,-204,-206,-205,]),'CHAR':([0,1,2,3,6,9,10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,27,28,29,31,32,33,34,36,37,38,40,41,42,43,45,46,47,48,49,50,51,52,53,54,56,58,60,61,62,65,67,68,69,70,75,77,78,79,80,81,82,83,84,85,87,89,94,95,98,101,104,109,115,118,119,121,122,126,127,128,129,130,131,132,133,139,146,174,184,186,187,195,203,204,205,207,211,214,216,221,224,225,227,232,233,234,235,236,241,243,245,250,251,263,266,286,288,297,301,314,319,327,331,333,336,340,343,344,347,359,360,361,365,366,375,376,411,428,432,436,437,472,494,495,496,515,516,518,520,],[46,-117,-52,46,-64,-116,-108,-96,-303,-104,-94,-107,46,-303,-102,-93,-215,-91,-62,-111,-113,-66,-98,-68,-115,-29,-100,-95,-63,-114,46,-99,46,-65,-303,-97,-101,-103,-110,-60,-112,-106,-109,-105,-67,46,46,-82,46,46,-160,-53,-10,-85,-9,-92,-84,-130,-301,-131,46,-81,-69,-146,-147,-61,46,-88,-87,-90,-89,-86,46,46,46,-70,-83,-161,46,46,-140,46,-137,46,46,-128,-30,46,46,46,-35,-36,46,-72,-193,-194,-73,-75,-192,46,-76,-74,-78,-77,46,46,-138,-302,-132,-127,-126,-129,-148,-71,46,-34,46,-31,46,46,46,46,46,46,-208,-196,-211,-195,-209,-212,-133,-134,-139,-149,-150,-33,-32,46,-207,-210,-199,-197,-198,-200,-202,-203,-201,-204,-206,-205,]),'RSHIFT':([112,149,152,154,155,158,159,162,163,164,168,170,172,176,177,178,179,180,181,183,223,235,262,264,265,287,289,290,295,296,298,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,398,399,403,404,405,408,454,456,457,458,500,501,510,],[-288,-278,-265,-291,-232,-279,-292,-299,274,-295,-296,-253,-280,-290,-289,-277,-293,-251,-294,-297,-288,-302,-256,-251,-298,-255,-274,-273,-254,-300,-257,274,274,-237,274,274,274,274,-238,-235,-239,-236,274,274,-234,-233,274,274,274,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-275,-282,-276,]),'HEX_FLOAT_CONST':([1,9,29,31,55,63,64,65,79,82,83,105,106,107,118,122,124,142,145,147,148,156,157,160,161,165,166,167,171,173,174,175,197,203,204,205,206,207,209,211,213,214,216,219,221,224,225,227,230,235,238,248,255,256,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,302,303,304,305,306,307,308,309,310,311,312,313,318,328,330,331,333,336,337,338,340,341,343,344,345,347,348,349,351,352,356,358,363,369,370,372,407,414,415,416,423,426,428,429,432,436,437,439,441,451,452,455,459,461,462,464,471,472,473,474,475,476,477,478,492,494,495,496,499,502,507,508,513,515,516,518,519,520,],[-117,-116,-68,-115,-303,-28,-27,-160,-301,-81,-69,-28,-303,181,181,-161,181,181,-303,181,181,181,-261,-260,-259,-264,181,-263,181,181,181,-262,181,-72,-193,-194,181,-73,-260,-75,181,-192,181,181,-76,-74,-78,-77,-303,-302,181,181,-28,-303,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-221,-219,181,-223,-228,-224,-226,-220,-227,-222,-225,-218,-303,181,-260,181,-208,-196,181,181,-211,181,-195,-209,181,-212,181,181,-12,181,-11,181,181,181,181,-260,181,-28,-303,181,-260,181,-207,181,-210,-199,-197,-176,-303,181,181,181,-303,181,181,-260,181,-198,181,181,181,181,181,-11,181,-200,-202,-203,-303,181,181,181,181,-201,-204,-206,181,-205,]),'OREQUAL':([112,149,152,154,158,159,162,164,168,170,172,176,177,178,179,180,181,183,223,235,262,264,265,287,289,290,295,296,298,398,399,403,404,405,408,454,456,457,458,500,501,510,],[-288,-278,-265,-291,-279,-292,-299,-295,-296,-253,-280,-290,-289,-277,-293,306,-294,-297,-288,-302,-256,-251,-298,-255,-274,-273,-254,-300,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-275,-282,-276,]),'_BOOL':([0,1,2,3,6,9,10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,27,28,29,31,32,33,34,36,37,38,40,41,42,43,45,46,47,48,49,50,51,52,53,54,56,58,60,61,62,65,67,68,69,70,75,77,78,79,80,81,82,83,84,85,87,89,94,95,98,101,104,109,115,118,119,121,122,126,127,128,129,130,131,132,133,139,146,174,184,186,187,195,203,204,205,207,211,214,216,221,224,225,227,232,233,234,235,236,241,243,245,250,251,263,266,286,288,297,301,314,319,327,331,333,336,340,343,344,347,359,360,361,365,366,375,376,411,428,432,436,437,472,494,495,496,515,516,518,520,],[33,-117,-52,33,-64,-116,-108,-96,-303,-104,-94,-107,33,-303,-102,-93,-215,-91,-62,-111,-113,-66,-98,-68,-115,-29,-100,-95,-63,-114,33,-99,33,-65,-303,-97,-101,-103,-110,-60,-112,-106,-109,-105,-67,33,33,-82,33,33,-160,-53,-10,-85,-9,-92,-84,-130,-301,-131,33,-81,-69,-146,-147,-61,33,-88,-87,-90,-89,-86,33,33,33,-70,-83,-161,33,33,-140,33,-137,33,33,-128,-30,33,33,33,-35,-36,33,-72,-193,-194,-73,-75,-192,33,-76,-74,-78,-77,33,33,-138,-302,-132,-127,-126,-129,-148,-71,33,-34,33,-31,33,33,33,33,33,33,-208,-196,-211,-195,-209,-212,-133,-134,-139,-149,-150,-33,-32,33,-207,-210,-199,-197,-198,-200,-202,-203,-201,-204,-206,-205,]),'EXTERN':([0,1,2,3,6,9,10,11,12,13,14,15,17,19,20,21,23,24,25,26,27,28,29,31,32,33,34,36,37,38,40,41,42,43,45,46,47,48,49,50,51,52,53,54,56,60,61,62,67,75,78,79,80,82,83,84,85,87,89,94,95,98,101,115,118,119,121,139,146,184,186,187,195,203,204,205,207,211,214,216,221,224,225,227,235,236,250,251,266,288,319,327,331,333,336,340,343,344,347,359,360,365,366,375,376,411,428,432,436,437,472,494,495,496,515,516,518,520,],[11,-117,-52,11,-64,-116,-108,-96,11,-104,-94,-107,11,-102,-93,-215,-91,-62,-111,-113,-66,-98,-68,-115,-29,-100,-95,-63,-114,11,-99,11,-65,11,-97,-101,-103,-110,-60,-112,-106,-109,-105,-67,11,-82,11,11,-53,-92,-130,-301,-131,-81,-69,-146,-147,-61,11,-88,-87,-90,-89,11,11,-70,-83,-30,11,11,-35,-36,11,-72,-193,-194,-73,-75,-192,11,-76,-74,-78,-77,-302,-132,-148,-71,-34,-31,11,11,11,-208,-196,-211,-195,-209,-212,-133,-134,-149,-150,-33,-32,11,-207,-210,-199,-197,-198,-200,-202,-203,-201,-204,-206,-205,]),'STRING_LITERAL':([1,9,29,31,55,63,64,65,79,82,83,105,106,107,118,122,124,142,145,147,148,156,157,158,160,161,165,166,167,171,173,174,175,183,197,203,204,205,206,207,209,211,213,214,216,219,221,224,225,227,230,235,238,248,255,256,257,263,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,302,303,304,305,306,307,308,309,310,311,312,313,318,328,330,331,333,336,337,338,340,341,343,344,345,347,348,349,351,352,356,358,363,369,370,372,407,414,415,416,423,426,428,429,432,436,437,439,441,451,452,455,459,461,462,464,471,472,473,474,475,476,477,478,492,494,495,496,499,502,507,508,513,515,516,518,519,520,],[-117,-116,-68,-115,-303,-28,-27,-160,-301,-81,-69,-28,-303,183,183,-161,183,183,-303,183,183,183,-261,265,-260,-259,-264,183,-263,183,183,183,-262,-297,183,-72,-193,-194,183,-73,-260,-75,183,-192,183,183,-76,-74,-78,-77,-303,-302,183,183,-28,-303,183,183,-298,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-221,-219,183,-223,-228,-224,-226,-220,-227,-222,-225,-218,-303,183,-260,183,-208,-196,183,183,-211,183,-195,-209,183,-212,183,183,-12,183,-11,183,183,183,183,-260,183,-28,-303,183,-260,183,-207,183,-210,-199,-197,-176,-303,183,183,183,-303,183,183,-260,183,-198,183,183,183,183,183,-11,183,-200,-202,-203,-303,183,183,183,183,-201,-204,-206,183,-205,]),'LBRACKET':([1,2,7,9,10,11,13,14,15,19,20,21,23,25,26,28,31,32,33,34,37,40,45,46,47,48,50,51,52,53,63,64,65,66,67,75,78,79,80,84,85,94,95,97,98,101,102,112,115,122,123,133,139,141,149,152,154,158,159,162,164,168,170,172,176,177,178,179,181,183,186,187,188,192,193,195,196,223,230,235,236,241,243,245,250,253,265,266,288,289,290,296,301,320,321,323,350,353,359,360,365,366,373,374,375,376,398,399,403,404,405,408,410,411,419,420,424,425,438,441,443,449,450,454,456,459,465,466,467,468,469,480,481,482,486,487,490,491,499,500,501,504,505,510,512,517,],[-117,55,-303,-116,-108,-96,-104,-94,-107,-102,-93,-215,-91,-111,-113,-98,-115,-29,-100,-95,-114,-99,-97,-101,-103,-110,-112,-106,-109,-105,-28,-27,-160,-158,55,-92,-130,-301,-131,-146,-147,-88,-87,-37,-90,-89,145,-288,197,-161,-159,-128,-30,145,-278,-265,-291,-279,-292,-299,-295,-296,292,-280,-290,-289,-277,-293,-294,-297,-35,-36,318,197,-45,197,328,-288,358,-302,-132,-127,-126,-129,-148,-38,-298,-34,-31,-274,-273,-300,197,328,318,197,358,-177,-133,-134,-149,-150,-43,-44,-33,-32,-269,-270,-268,-271,-272,-281,197,197,-191,-185,-187,-189,-178,358,-180,-39,-42,-266,-267,358,-50,-51,-190,-186,-188,-179,-41,-40,-283,502,-46,-49,358,-275,-282,-48,-47,-276,-284,-285,]),'STATIC':([0,1,2,3,6,9,10,11,12,13,14,15,17,19,20,21,23,24,25,26,27,28,29,31,32,33,34,36,37,38,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,60,61,62,65,67,75,78,79,80,82,83,84,85,87,89,94,95,98,101,105,115,118,119,121,122,139,145,146,184,186,187,195,203,204,205,207,211,214,216,221,224,225,227,235,236,250,251,255,266,288,318,319,327,331,333,336,340,343,344,347,359,360,365,366,375,376,411,414,428,432,436,437,472,494,495,496,515,516,518,520,],[34,-117,-52,34,-64,-116,-108,-96,34,-104,-94,-107,34,-102,-93,-215,-91,-62,-111,-113,-66,-98,-68,-115,-29,-100,-95,-63,-114,34,-99,34,-65,34,-97,-101,-103,-110,-60,-112,-106,-109,-105,-67,106,34,-82,34,34,-160,-53,-92,-130,-301,-131,-81,-69,-146,-147,-61,34,-88,-87,-90,-89,147,34,34,-70,-83,-161,-30,256,34,34,-35,-36,34,-72,-193,-194,-73,-75,-192,34,-76,-74,-78,-77,-302,-132,-148,-71,369,-34,-31,415,34,34,34,-208,-196,-211,-195,-209,-212,-133,-134,-149,-150,-33,-32,34,461,-207,-210,-199,-197,-198,-200,-202,-203,-201,-204,-206,-205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([107,118,124,142,147,148,156,166,171,173,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'unified_string_literal':([107,118,124,142,147,148,156,166,171,173,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'direct_id_declarator':([0,8,16,38,39,41,58,61,91,99,115,125,131,144,192,195,323,364,],[2,67,2,2,2,2,2,2,67,2,2,2,2,2,67,2,67,2,]),'expression_statement':([118,216,219,348,349,429,473,474,475,508,513,519,],[207,207,207,207,207,207,207,207,207,207,207,207,]),'primary_expression':([107,118,124,142,147,148,156,166,171,173,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'empty':([0,3,7,12,16,17,41,43,55,56,58,61,89,106,107,115,118,131,145,146,195,197,216,219,230,256,257,301,318,319,327,328,331,348,349,411,415,416,426,429,441,459,471,473,474,475,492,499,507,508,513,519,],[5,57,64,70,73,70,90,70,64,108,73,90,57,64,153,191,202,239,64,108,322,153,342,342,356,64,153,191,64,108,322,153,342,342,342,322,64,153,342,342,478,478,342,342,342,342,342,478,342,342,342,342,]),'pp_directive':([0,38,],[6,6,]),'pointer':([0,16,38,39,41,58,61,66,99,115,125,131,144,195,301,364,411,],[8,8,8,8,91,8,91,123,91,192,91,91,91,323,410,91,410,]),'unary_operator':([107,118,124,142,147,148,156,166,171,173,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'declarator':([41,61,125,131,144,364,],[93,93,93,240,93,240,]),'statement':([118,216,219,348,349,429,473,474,475,508,513,519,],[204,204,346,436,437,472,494,495,496,515,518,520,]),'binary_expression':([107,118,124,142,147,148,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,416,426,429,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'initializer_list':([230,459,],[354,485,]),'storage_class_specifier':([0,3,12,17,38,41,43,56,61,62,89,115,118,146,184,195,216,319,327,331,411,],[12,12,12,12,12,94,12,12,94,12,12,94,12,12,12,12,12,12,12,12,12,]),'block_item':([118,216,],[205,343,]),'declaration_specifiers_no_type':([0,3,12,17,38,43,56,62,89,118,146,184,195,216,319,327,331,411,],[16,58,68,68,16,68,109,58,58,58,109,109,109,58,109,109,58,109,]),'declaration_list_opt':([3,89,],[59,140,]),'conditional_expression':([107,118,124,142,147,148,174,197,206,213,216,219,238,248,257,263,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,416,426,429,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[150,150,150,150,150,150,150,150,334,150,150,150,334,334,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,334,334,150,150,150,150,150,483,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'id_init_declarator_list_opt':([16,58,],[74,74,]),'block_item_list_opt':([118,],[208,]),'argument_expression_list':([293,],[402,]),'direct_typeid_noparen_declarator':([115,192,],[188,321,]),'type_specifier':([0,3,16,38,56,58,62,81,89,109,118,126,127,129,132,146,174,184,195,216,232,233,263,286,297,314,319,327,331,411,],[23,23,75,23,23,75,23,133,23,75,23,133,133,133,245,23,133,23,23,23,133,133,133,133,133,133,23,23,23,23,]),'declaration_specifiers_no_type_opt':([12,17,43,],[69,77,104,]),'enumerator_list':([86,134,135,],[138,246,247,]),'struct_or_union_specifier':([0,3,16,38,56,58,62,81,89,109,118,126,127,129,132,146,174,184,195,216,232,233,263,286,297,314,319,327,331,411,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'designator_list':([230,441,459,499,],[350,350,350,350,]),'pppragma_directive':([0,38,118,216,219,348,349,429,473,474,475,508,513,519,],[42,42,225,225,225,225,225,225,225,225,225,225,225,225,]),'parameter_list':([56,146,195,319,327,411,],[110,110,110,110,110,110,]),'struct_declarator_list':([131,],[242,]),'type_name':([174,263,286,297,314,],[299,377,397,406,413,]),'type_qualifier_list_opt':([7,55,106,145,256,318,415,],[66,107,148,257,370,416,462,]),'declaration':([0,3,38,62,89,118,216,331,],[36,60,36,121,60,214,214,426,]),'type_specifier_no_typeid':([0,3,16,38,41,56,58,61,62,81,89,109,115,118,126,127,129,131,132,146,174,184,195,216,232,233,263,286,297,301,314,319,327,331,411,],[37,37,37,37,98,37,37,98,37,37,37,37,98,37,37,37,37,243,37,37,37,37,37,37,37,37,37,37,37,243,37,37,37,37,37,]),'struct_declarator':([131,364,],[244,446,]),'translation_unit':([0,],[38,]),'identifier_list_opt':([56,146,319,],[114,259,418,]),'block_item_list':([118,],[216,]),'translation_unit_or_empty':([0,],[44,]),'identifier':([56,107,118,124,142,146,147,148,156,166,171,173,174,185,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,319,328,331,337,338,341,345,348,349,352,357,358,363,369,370,407,416,426,429,451,452,455,460,461,462,471,473,474,475,476,477,492,502,503,507,508,513,519,],[116,178,178,178,178,116,178,178,178,178,178,178,178,317,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,116,178,178,178,178,178,178,178,178,178,443,178,178,178,178,178,178,178,178,178,178,178,486,178,178,178,178,178,178,178,178,178,178,512,178,178,178,178,]),'type_qualifier_list':([7,55,81,106,126,127,129,145,174,232,233,256,263,286,297,314,318,415,],[63,105,132,63,132,132,132,255,132,132,132,63,132,132,132,132,414,63,]),'struct_declaration_list':([81,126,127,],[129,232,233,]),'struct_or_union':([0,3,16,38,56,58,62,81,89,109,118,126,127,129,132,146,174,184,195,216,232,233,263,286,297,314,319,327,331,411,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_definition':([0,38,],[24,24,]),'function_specifier':([0,3,12,17,38,41,43,56,61,62,89,115,118,146,184,195,216,319,327,331,411,],[43,43,43,43,43,101,43,43,101,43,43,101,43,43,43,43,43,43,43,43,43,]),'struct_declarator_list_opt':([131,],[237,]),'assignment_operator':([180,],[304,]),'assignment_expression':([107,118,124,142,147,148,174,197,213,216,219,257,263,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,369,370,416,426,429,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[151,226,228,228,260,261,226,151,226,226,226,151,226,226,226,226,401,226,412,151,226,226,226,226,434,226,226,228,447,448,151,226,226,484,488,489,226,226,226,226,226,228,226,226,226,226,226,226,]),'id_declarator':([0,16,38,39,41,58,61,99,115,125,131,144,195,364,],[3,71,3,88,89,71,120,88,189,120,120,120,88,120,]),'typeid_noparen_declarator':([115,],[190,]),'assignment_expression_opt':([107,197,257,328,416,],[169,329,371,422,463,]),'labeled_statement':([118,216,219,348,349,429,473,474,475,508,513,519,],[203,203,203,203,203,203,203,203,203,203,203,203,]),'cast_expression':([107,118,124,142,147,148,156,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[155,155,155,155,155,155,262,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,458,155,155,155,458,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'init_declarator_list_opt':([41,61,],[92,92,]),'id_init_declarator_list':([16,58,],[72,72,]),'brace_close':([129,138,208,232,233,246,247,355,441,485,499,],[236,250,336,359,360,365,366,442,479,500,510,]),'expression':([118,174,213,216,219,263,285,286,292,297,331,337,338,341,348,349,426,429,471,473,474,475,476,492,502,507,508,513,519,],[218,300,339,218,218,300,396,300,400,300,218,430,431,433,218,218,218,218,218,218,218,218,497,218,511,218,218,218,218,]),'declaration_list':([3,89,],[62,62,]),'init_declarator':([41,61,125,144,],[103,103,231,254,]),'type_qualifier':([0,3,7,12,17,38,41,43,55,56,61,62,63,81,89,105,106,115,118,126,127,129,131,132,145,146,174,184,195,216,232,233,255,256,263,286,297,301,314,318,319,327,331,411,414,415,],[17,17,65,17,17,17,95,17,65,17,95,17,122,65,17,122,65,95,17,65,65,65,241,122,65,17,65,17,17,17,65,65,122,65,65,65,65,241,65,65,17,17,17,17,122,65,]),'unified_wstring_literal':([107,118,124,142,147,148,156,166,171,173,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'designation_opt':([230,441,459,499,],[352,477,352,477,]),'selection_statement':([118,216,219,348,349,429,473,474,475,508,513,519,],[211,211,211,211,211,211,211,211,211,211,211,211,]),'expression_opt':([118,216,219,331,348,349,426,429,471,473,474,475,492,507,508,513,519,],[220,220,220,427,220,220,470,220,493,220,220,220,506,514,220,220,220,]),'decl_body':([0,3,38,62,89,118,216,331,],[22,22,22,22,22,22,22,22,]),'typedef_name':([0,3,16,38,56,58,62,81,89,109,118,126,127,129,132,146,174,184,195,216,232,233,263,286,297,314,319,327,331,411,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'constant_expression':([206,238,248,358,363,],[335,362,367,444,445,]),'abstract_declarator_opt':([115,301,],[194,409,]),'designation':([230,441,459,499,],[351,351,351,351,]),'external_declaration':([0,38,],[49,87,]),'initializer':([124,142,352,477,],[229,252,440,498,]),'iteration_statement':([118,216,219,348,349,429,473,474,475,508,513,519,],[221,221,221,221,221,221,221,221,221,221,221,221,]),'struct_declaration':([81,126,127,129,232,233,],[130,130,130,234,234,234,]),'identifier_list':([56,146,319,],[111,111,111,]),'postfix_expression':([107,118,124,142,147,148,156,166,171,173,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'parameter_type_list':([56,146,195,319,327,411,],[113,258,324,417,324,324,]),'parameter_type_list_opt':([195,327,411,],[325,421,325,]),'enumerator':([86,134,135,249,],[137,137,137,368,]),'offsetof_member_designator':([460,],[487,]),'specifier_qualifier_list':([81,126,127,129,174,232,233,263,286,297,314,],[131,131,131,131,301,131,131,301,301,301,301,]),'declaration_specifiers':([0,3,38,56,62,89,118,146,184,195,216,319,327,331,411,],[41,61,41,115,61,61,61,115,115,115,61,115,115,61,115,]),'direct_abstract_declarator':([115,192,195,301,323,410,411,],[196,320,196,196,320,320,196,]),'init_declarator_list':([41,61,],[100,100,]),'brace_open':([18,30,59,78,80,84,85,118,124,140,142,216,219,348,349,352,407,429,451,453,457,473,474,475,477,508,513,519,],[81,86,118,126,127,134,135,118,230,118,230,118,118,118,118,230,459,118,459,459,459,118,118,118,230,118,118,118,]),'id_init_declarator':([16,58,],[76,76,]),'initializer_list_opt':([230,],[355,]),'unary_expression':([107,118,124,142,147,148,156,166,171,173,174,197,206,213,216,219,238,248,257,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,292,293,297,304,328,331,337,338,341,345,348,349,352,358,363,369,370,407,416,426,429,451,452,455,461,462,471,473,474,475,476,477,492,502,507,508,513,519,],[180,180,180,180,180,180,264,287,295,298,180,180,264,180,180,180,264,264,180,180,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,264,264,180,180,264,180,180,180,264,264,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'jump_statement':([118,216,219,348,349,429,473,474,475,508,513,519,],[227,227,227,227,227,227,227,227,227,227,227,227,]),'typeid_declarator':([41,61,99,125,131,144,364,],[96,96,143,96,96,96,96,]),'enum_specifier':([0,3,16,38,56,58,62,81,89,109,118,126,127,129,132,146,174,184,195,216,232,233,263,286,297,314,319,327,331,411,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'compound_statement':([59,118,140,216,219,348,349,429,473,474,475,508,513,519,],[119,224,251,224,224,224,224,224,224,224,224,224,224,224,]),'direct_typeid_declarator':([41,61,91,99,125,131,144,364,],[102,102,141,102,102,102,102,102,]),'designator':([230,350,441,459,499,],[353,438,353,353,353,]),'abstract_declarator':([115,195,301,411,],[198,326,198,326,]),'parameter_declaration':([56,146,184,195,319,327,411,],[117,117,316,117,117,117,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
