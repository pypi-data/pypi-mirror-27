# coding: utf-8

"""
    SendinBlue API

    SendinBlue provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/sendinblue  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  | 

    OpenAPI spec version: 3.0.0
    Contact: contact@sendinblue.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class GetContactCampaignStatsTransacAttributes(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'order_date': 'date',
        'order_price': 'float',
        'order_id': 'int'
    }

    attribute_map = {
        'order_date': 'orderDate',
        'order_price': 'orderPrice',
        'order_id': 'orderId'
    }

    def __init__(self, order_date=None, order_price=None, order_id=None):
        """
        GetContactCampaignStatsTransacAttributes - a model defined in Swagger
        """

        self._order_date = None
        self._order_price = None
        self._order_id = None

        self.order_date = order_date
        self.order_price = order_price
        self.order_id = order_id

    @property
    def order_date(self):
        """
        Gets the order_date of this GetContactCampaignStatsTransacAttributes.
        Date of the order

        :return: The order_date of this GetContactCampaignStatsTransacAttributes.
        :rtype: date
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date):
        """
        Sets the order_date of this GetContactCampaignStatsTransacAttributes.
        Date of the order

        :param order_date: The order_date of this GetContactCampaignStatsTransacAttributes.
        :type: date
        """
        if order_date is None:
            raise ValueError("Invalid value for `order_date`, must not be `None`")

        self._order_date = order_date

    @property
    def order_price(self):
        """
        Gets the order_price of this GetContactCampaignStatsTransacAttributes.
        Price of the order

        :return: The order_price of this GetContactCampaignStatsTransacAttributes.
        :rtype: float
        """
        return self._order_price

    @order_price.setter
    def order_price(self, order_price):
        """
        Sets the order_price of this GetContactCampaignStatsTransacAttributes.
        Price of the order

        :param order_price: The order_price of this GetContactCampaignStatsTransacAttributes.
        :type: float
        """
        if order_price is None:
            raise ValueError("Invalid value for `order_price`, must not be `None`")

        self._order_price = order_price

    @property
    def order_id(self):
        """
        Gets the order_id of this GetContactCampaignStatsTransacAttributes.
        ID of the order

        :return: The order_id of this GetContactCampaignStatsTransacAttributes.
        :rtype: int
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """
        Sets the order_id of this GetContactCampaignStatsTransacAttributes.
        ID of the order

        :param order_id: The order_id of this GetContactCampaignStatsTransacAttributes.
        :type: int
        """
        if order_id is None:
            raise ValueError("Invalid value for `order_id`, must not be `None`")

        self._order_id = order_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, GetContactCampaignStatsTransacAttributes):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
