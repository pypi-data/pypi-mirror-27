# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import dragon_pb2 as dragon__pb2


class DragonServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetClusters = channel.unary_unary(
        '/manager.DragonService/GetClusters',
        request_serializer=dragon__pb2.GetClustersRequest.SerializeToString,
        response_deserializer=dragon__pb2.GetClustersResponse.FromString,
        )
    self.GetServices = channel.unary_unary(
        '/manager.DragonService/GetServices',
        request_serializer=dragon__pb2.GetServicesRequest.SerializeToString,
        response_deserializer=dragon__pb2.GetServicesResponse.FromString,
        )
    self.GetService = channel.unary_unary(
        '/manager.DragonService/GetService',
        request_serializer=dragon__pb2.GetServiceRequest.SerializeToString,
        response_deserializer=dragon__pb2.GetServiceResponse.FromString,
        )
    self.GetServiceLBInstance = channel.unary_unary(
        '/manager.DragonService/GetServiceLBInstance',
        request_serializer=dragon__pb2.GetServiceLBInstanceRequest.SerializeToString,
        response_deserializer=dragon__pb2.GetServiceLBInstanceResponse.FromString,
        )
    self.RestartServiceInstance = channel.unary_unary(
        '/manager.DragonService/RestartServiceInstance',
        request_serializer=dragon__pb2.RestartServiceInstanceRequest.SerializeToString,
        response_deserializer=dragon__pb2.RestartServiceInstanceResponse.FromString,
        )
    self.KillServiceInstance = channel.unary_unary(
        '/manager.DragonService/KillServiceInstance',
        request_serializer=dragon__pb2.KillServiceInstanceRequest.SerializeToString,
        response_deserializer=dragon__pb2.KillServiceInstanceResponse.FromString,
        )


class DragonServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetClusters(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServices(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetService(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServiceLBInstance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RestartServiceInstance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def KillServiceInstance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DragonServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetClusters': grpc.unary_unary_rpc_method_handler(
          servicer.GetClusters,
          request_deserializer=dragon__pb2.GetClustersRequest.FromString,
          response_serializer=dragon__pb2.GetClustersResponse.SerializeToString,
      ),
      'GetServices': grpc.unary_unary_rpc_method_handler(
          servicer.GetServices,
          request_deserializer=dragon__pb2.GetServicesRequest.FromString,
          response_serializer=dragon__pb2.GetServicesResponse.SerializeToString,
      ),
      'GetService': grpc.unary_unary_rpc_method_handler(
          servicer.GetService,
          request_deserializer=dragon__pb2.GetServiceRequest.FromString,
          response_serializer=dragon__pb2.GetServiceResponse.SerializeToString,
      ),
      'GetServiceLBInstance': grpc.unary_unary_rpc_method_handler(
          servicer.GetServiceLBInstance,
          request_deserializer=dragon__pb2.GetServiceLBInstanceRequest.FromString,
          response_serializer=dragon__pb2.GetServiceLBInstanceResponse.SerializeToString,
      ),
      'RestartServiceInstance': grpc.unary_unary_rpc_method_handler(
          servicer.RestartServiceInstance,
          request_deserializer=dragon__pb2.RestartServiceInstanceRequest.FromString,
          response_serializer=dragon__pb2.RestartServiceInstanceResponse.SerializeToString,
      ),
      'KillServiceInstance': grpc.unary_unary_rpc_method_handler(
          servicer.KillServiceInstance,
          request_deserializer=dragon__pb2.KillServiceInstanceRequest.FromString,
          response_serializer=dragon__pb2.KillServiceInstanceResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'manager.DragonService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
