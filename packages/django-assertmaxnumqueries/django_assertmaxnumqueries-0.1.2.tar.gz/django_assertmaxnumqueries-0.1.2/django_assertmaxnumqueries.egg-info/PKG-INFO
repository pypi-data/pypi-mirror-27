Metadata-Version: 1.1
Name: django-assertmaxnumqueries
Version: 0.1.2
Summary: Provides a Django TransactionTestCase.assertMaxNumQueries(),  analogous to the existing TransactionTestCase.assertNumQueries()
Home-page: https://github.com/prismaticd/django_assertmaxnumqueries
Author: Prismatic Digital
Author-email: contact@prismaticdigital.com
License: MIT license
Description-Content-Type: UNKNOWN
Description: ==========================
        Django AssertMaxNumQueries
        ==========================
        
        
        .. image:: https://img.shields.io/pypi/v/django-assertmaxnumqueries.svg
                :target: https://pypi.python.org/pypi/django-assertmaxnumqueries
        
        .. image:: https://img.shields.io/travis/prismaticd/django-assertmaxnumqueries.svg
                :target: https://travis-ci.org/prismaticd/django-assertmaxnumqueries
        
        .. image:: https://readthedocs.org/projects/django-assertmaxnumqueries/badge/?version=latest
                :target: https://django-assertmaxnumqueries.readthedocs.io/en/latest/?badge=latest
                :alt: Documentation Status
        
        .. image:: https://pyup.io/repos/github/prismaticd/django-assertmaxnumqueries/shield.svg
             :target: https://pyup.io/repos/github/prismaticd/django-assertmaxnumqueries/
             :alt: Updates
        
        
        Provides a mixin and TransactionTestCase subclass with assertMaxNumQueries(),
            analogous to  `django.test.TransactionTestCase.assertNumQueries`_
        
        
        * Free software: MIT license
        * Documentation: https://django-assertmaxnumqueries.readthedocs.io.
        
        
        Usage
        -----
        
        Usage is identical to `django.test.TransactionTestCase.assertNumQueries`_ ,
        except check on the number of queries is `assertLessEqual` insert of `assertEqual`.
        
        To use Django AssertMaxNumQueries in a project::
        
            import django_assertmaxnumqueries
        
        
            class MyTestCase(django_assertmaxnumqueries.TransactionTestCase):
        
                def test_my_test(self):
                    with self.assertMaxNumQueries(2):
                        Person.objects.create(name="Aaron")
                        Person.objects.create(name="Daniel")
        
        
        Credits
        ---------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        .. _`django.test.TransactionTestCase.assertNumQueries`: https://docs.djangoproject.com/en/1.11/topics/testing/tools/#django.test.TransactionTestCase.assertNumQueries
        
        
        
        =======
        History
        =======
        
        0.1.0 (2017-12-11)
        ------------------
        
        * First release on PyPI.
        
Keywords: django_assertmaxnumqueries
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
