"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
const forms_1 = require("@angular/forms");
let CheckBoxComponent = CheckBoxComponent_1 = class CheckBoxComponent {
    constructor() {
        this.disabled = false;
        this.onChange = new core_1.EventEmitter();
        this.checked = false;
        this._onChange = (_) => { };
        this._onTouched = () => { };
    }
    writeValue(value) {
        this.checked = value;
        this._onChange(value);
        this.onChange.next(value);
    }
    registerOnChange(fn) {
        this._onChange = fn;
    }
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    toggleCheck(event) {
        if (this.disabled) {
            return;
        }
        var value = !this.checked;
        this.writeValue(value);
    }
};
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], CheckBoxComponent.prototype, "disabled", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], CheckBoxComponent.prototype, "type", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], CheckBoxComponent.prototype, "label", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], CheckBoxComponent.prototype, "onChange", void 0);
CheckBoxComponent = CheckBoxComponent_1 = __decorate([
    core_1.Component({
        selector: "lsu-checkbox",
        styles: [
            ` .ui.checkbox > label {
        cursor: pointer;
      }
    `
        ],
        template: `
    <div class="ui {{type}} checkbox" [ngClass]="{'checked': checked}" (click)="toggleCheck($event)">
      <input type="checkbox" [attr.checked]="checked? 'checked' : null" [attr.disabled]="disabled ? 'disabled' : null">
      <label>{{ label }}</label>
    </div>
  `,
        providers: [{
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(() => CheckBoxComponent_1),
                multi: true
            }]
    }),
    __metadata("design:paramtypes", [])
], CheckBoxComponent);
exports.CheckBoxComponent = CheckBoxComponent;
var CheckBoxComponent_1;
//# sourceMappingURL=checkbox.js.map