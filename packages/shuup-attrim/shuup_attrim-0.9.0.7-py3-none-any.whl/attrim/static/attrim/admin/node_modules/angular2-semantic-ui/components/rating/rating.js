"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
const forms_1 = require("@angular/forms");
let RatingComponent = RatingComponent_1 = class RatingComponent {
    constructor() {
        this._maxRating = 1;
        this.rating = 0;
        this.type = "star";
        this.size = "";
        this._onChange = (_) => { };
        this._onTouched = () => { };
    }
    set maxRating(val) {
        this._maxRating = val;
        if (this.rating > val) {
            this.setRating(val);
        }
        this.ratings = this.getRatings(val);
    }
    get maxRating() {
        return this._maxRating;
    }
    writeValue(value) {
        this.rating = value;
        this._onChange(value);
    }
    registerOnChange(fn) {
        this._onChange = fn;
    }
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    ngOnInit() {
        this.type = this.type.toLowerCase();
        this.size = this.size.toLowerCase();
        this.ratings = this.getRatings(this.maxRating);
    }
    getRatings(size) {
        let ratings = [];
        for (let i = 0; i < size; i++) {
            ratings.push(i + 1);
        }
        return ratings;
    }
    setRating(item) {
        this.writeValue(item);
    }
};
__decorate([
    core_1.Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], RatingComponent.prototype, "maxRating", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RatingComponent.prototype, "rating", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RatingComponent.prototype, "type", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RatingComponent.prototype, "size", void 0);
RatingComponent = RatingComponent_1 = __decorate([
    core_1.Component({
        selector: 'lsu-rating',
        template: `
    <div class="ui {{ type }} {{ size }} rating">
      <i class="icon" *ngFor="let item of ratings" [ngClass]="{'active': item <= rating }" (click)="setRating(item)"></i>
    </div>
  `,
        providers: [{
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(() => RatingComponent_1),
                multi: true
            }]
    }),
    __metadata("design:paramtypes", [])
], RatingComponent);
exports.RatingComponent = RatingComponent;
var RatingComponent_1;
//# sourceMappingURL=rating.js.map