(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.cytoscapeCoseBilkent=f()}})(function(){var define,module,exports;return(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){var FDLayoutConstants=_dereq_('./FDLayoutConstants');function CoSEConstants(){}
for(var prop in FDLayoutConstants){CoSEConstants[prop]=FDLayoutConstants[prop];}
CoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING=false;CoSEConstants.DEFAULT_RADIAL_SEPARATION=FDLayoutConstants.DEFAULT_EDGE_LENGTH;CoSEConstants.DEFAULT_COMPONENT_SEPERATION=60;module.exports=CoSEConstants;},{"./FDLayoutConstants":9}],2:[function(_dereq_,module,exports){var FDLayoutEdge=_dereq_('./FDLayoutEdge');function CoSEEdge(source,target,vEdge){FDLayoutEdge.call(this,source,target,vEdge);}
CoSEEdge.prototype=Object.create(FDLayoutEdge.prototype);for(var prop in FDLayoutEdge){CoSEEdge[prop]=FDLayoutEdge[prop];}
module.exports=CoSEEdge},{"./FDLayoutEdge":10}],3:[function(_dereq_,module,exports){var LGraph=_dereq_('./LGraph');function CoSEGraph(parent,graphMgr,vGraph){LGraph.call(this,parent,graphMgr,vGraph);}
CoSEGraph.prototype=Object.create(LGraph.prototype);for(var prop in LGraph){CoSEGraph[prop]=LGraph[prop];}
module.exports=CoSEGraph;},{"./LGraph":18}],4:[function(_dereq_,module,exports){var LGraphManager=_dereq_('./LGraphManager');function CoSEGraphManager(layout){LGraphManager.call(this,layout);}
CoSEGraphManager.prototype=Object.create(LGraphManager.prototype);for(var prop in LGraphManager){CoSEGraphManager[prop]=LGraphManager[prop];}
module.exports=CoSEGraphManager;},{"./LGraphManager":19}],5:[function(_dereq_,module,exports){var FDLayout=_dereq_('./FDLayout');var CoSEGraphManager=_dereq_('./CoSEGraphManager');var CoSEGraph=_dereq_('./CoSEGraph');var CoSENode=_dereq_('./CoSENode');var CoSEEdge=_dereq_('./CoSEEdge');function CoSELayout(){FDLayout.call(this);}
CoSELayout.prototype=Object.create(FDLayout.prototype);for(var prop in FDLayout){CoSELayout[prop]=FDLayout[prop];}
CoSELayout.prototype.newGraphManager=function(){var gm=new CoSEGraphManager(this);this.graphManager=gm;return gm;};CoSELayout.prototype.newGraph=function(vGraph){return new CoSEGraph(null,this.graphManager,vGraph);};CoSELayout.prototype.newNode=function(vNode){return new CoSENode(this.graphManager,vNode);};CoSELayout.prototype.newEdge=function(vEdge){return new CoSEEdge(null,null,vEdge);};CoSELayout.prototype.initParameters=function(){FDLayout.prototype.initParameters.call(this,arguments);if(!this.isSubLayout){if(CoSEConstants.DEFAULT_EDGE_LENGTH<10)
{this.idealEdgeLength=10;}
else
{this.idealEdgeLength=CoSEConstants.DEFAULT_EDGE_LENGTH;}
this.useSmartIdealEdgeLengthCalculation=CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;this.springConstant=FDLayoutConstants.DEFAULT_SPRING_STRENGTH;this.repulsionConstant=FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;this.gravityConstant=FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;this.compoundGravityConstant=FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;this.gravityRangeFactor=FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;this.compoundGravityRangeFactor=FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;}};CoSELayout.prototype.layout=function(){var createBendsAsNeeded=LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;if(createBendsAsNeeded)
{this.createBendpoints();this.graphManager.resetAllEdges();}
this.level=0;return this.classicLayout();};CoSELayout.prototype.classicLayout=function(){this.calculateNodesToApplyGravitationTo();this.graphManager.calcLowestCommonAncestors();this.graphManager.calcInclusionTreeDepths();this.graphManager.getRoot().calcEstimatedSize();this.calcIdealEdgeLengths();if(!this.incremental)
{var forest=this.getFlatForest();if(forest.length>0)
{this.positionNodesRadially(forest);}
else
{this.positionNodesRandomly();}}
this.initSpringEmbedder();this.runSpringEmbedder();console.log("Classic CoSE layout finished after "+
this.totalIterations+" iterations");return true;};CoSELayout.prototype.runSpringEmbedder=function(){var lastFrame=new Date().getTime();var initialAnimationPeriod=25;var animationPeriod=initialAnimationPeriod;do
{this.totalIterations++;if(this.totalIterations%FDLayoutConstants.CONVERGENCE_CHECK_PERIOD==0)
{if(this.isConverged())
{break;}
this.coolingFactor=this.initialCoolingFactor*((this.maxIterations-this.totalIterations)/this.maxIterations);animationPeriod=Math.ceil(initialAnimationPeriod*Math.sqrt(this.coolingFactor));}
this.totalDisplacement=0;this.graphManager.updateBounds();this.calcSpringForces();this.calcRepulsionForces();this.calcGravitationalForces();this.moveNodes();this.animate();if(FDLayoutConstants.ANIMATE==='during'&&this.totalIterations%animationPeriod==0){for(var i=0;i<1e7;i++){if((new Date().getTime()-lastFrame)>25){break;}}
lastFrame=new Date().getTime();var allNodes=this.graphManager.getAllNodes();var pData={};for(var i=0;i<allNodes.length;i++){var rect=allNodes[i].rect;var id=allNodes[i].id;pData[id]={id:id,x:rect.getCenterX(),y:rect.getCenterY(),w:rect.width,h:rect.height};}
broadcast({pData:pData});}}
while(this.totalIterations<this.maxIterations);this.graphManager.updateBounds();};CoSELayout.prototype.calculateNodesToApplyGravitationTo=function(){var nodeList=[];var graph;var graphs=this.graphManager.getGraphs();var size=graphs.length;var i;for(i=0;i<size;i++)
{graph=graphs[i];graph.updateConnected();if(!graph.isConnected)
{nodeList=nodeList.concat(graph.getNodes());}}
this.graphManager.setAllNodesToApplyGravitation(nodeList);};CoSELayout.prototype.createBendpoints=function(){var edges=[];edges=edges.concat(this.graphManager.getAllEdges());var visited=new HashSet();var i;for(i=0;i<edges.length;i++)
{var edge=edges[i];if(!visited.contains(edge))
{var source=edge.getSource();var target=edge.getTarget();if(source==target)
{edge.getBendpoints().push(new PointD());edge.getBendpoints().push(new PointD());this.createDummyNodesForBendpoints(edge);visited.add(edge);}
else
{var edgeList=[];edgeList=edgeList.concat(source.getEdgeListToNode(target));edgeList=edgeList.concat(target.getEdgeListToNode(source));if(!visited.contains(edgeList[0]))
{if(edgeList.length>1)
{var k;for(k=0;k<edgeList.length;k++)
{var multiEdge=edgeList[k];multiEdge.getBendpoints().push(new PointD());this.createDummyNodesForBendpoints(multiEdge);}}
visited.addAll(list);}}}
if(visited.size()==edges.length)
{break;}}};CoSELayout.prototype.positionNodesRadially=function(forest){var currentStartingPoint=new Point(0,0);var numberOfColumns=Math.ceil(Math.sqrt(forest.length));var height=0;var currentY=0;var currentX=0;var point=new PointD(0,0);for(var i=0;i<forest.length;i++)
{if(i%numberOfColumns==0)
{currentX=0;currentY=height;if(i!=0)
{currentY+=CoSEConstants.DEFAULT_COMPONENT_SEPERATION;}
height=0;}
var tree=forest[i];var centerNode=Layout.findCenterOfTree(tree);currentStartingPoint.x=currentX;currentStartingPoint.y=currentY;point=CoSELayout.radialLayout(tree,centerNode,currentStartingPoint);if(point.y>height)
{height=Math.floor(point.y);}
currentX=Math.floor(point.x+CoSEConstants.DEFAULT_COMPONENT_SEPERATION);}
this.transform(new PointD(LayoutConstants.WORLD_CENTER_X-point.x/2,LayoutConstants.WORLD_CENTER_Y-point.y/2));};CoSELayout.radialLayout=function(tree,centerNode,startingPoint){var radialSep=Math.max(this.maxDiagonalInTree(tree),CoSEConstants.DEFAULT_RADIAL_SEPARATION);CoSELayout.branchRadialLayout(centerNode,null,0,359,0,radialSep);var bounds=LGraph.calculateBounds(tree);var transform=new Transform();transform.setDeviceOrgX(bounds.getMinX());transform.setDeviceOrgY(bounds.getMinY());transform.setWorldOrgX(startingPoint.x);transform.setWorldOrgY(startingPoint.y);for(var i=0;i<tree.length;i++)
{var node=tree[i];node.transform(transform);}
var bottomRight=new PointD(bounds.getMaxX(),bounds.getMaxY());return transform.inverseTransformPoint(bottomRight);};CoSELayout.branchRadialLayout=function(node,parentOfNode,startAngle,endAngle,distance,radialSeparation){var halfInterval=((endAngle-startAngle)+1)/2;if(halfInterval<0)
{halfInterval+=180;}
var nodeAngle=(halfInterval+startAngle)%360;var teta=(nodeAngle*IGeometry.TWO_PI)/360;var cos_teta=Math.cos(teta);var x_=distance*Math.cos(teta);var y_=distance*Math.sin(teta);node.setCenter(x_,y_);var neighborEdges=[];neighborEdges=neighborEdges.concat(node.getEdges());var childCount=neighborEdges.length;if(parentOfNode!=null)
{childCount--;}
var branchCount=0;var incEdgesCount=neighborEdges.length;var startIndex;var edges=node.getEdgesBetween(parentOfNode);while(edges.length>1)
{var temp=edges[0];edges.splice(0,1);var index=neighborEdges.indexOf(temp);if(index>=0){neighborEdges.splice(index,1);}
incEdgesCount--;childCount--;}
if(parentOfNode!=null)
{startIndex=(neighborEdges.indexOf(edges[0])+1)%incEdgesCount;}
else
{startIndex=0;}
var stepAngle=Math.abs(endAngle-startAngle)/childCount;for(var i=startIndex;branchCount!=childCount;i=(++i)%incEdgesCount)
{var currentNeighbor=neighborEdges[i].getOtherEnd(node);if(currentNeighbor==parentOfNode)
{continue;}
var childStartAngle=(startAngle+branchCount*stepAngle)%360;var childEndAngle=(childStartAngle+stepAngle)%360;CoSELayout.branchRadialLayout(currentNeighbor,node,childStartAngle,childEndAngle,distance+radialSeparation,radialSeparation);branchCount++;}};CoSELayout.maxDiagonalInTree=function(tree){var maxDiagonal=Integer.MIN_VALUE;for(var i=0;i<tree.length;i++)
{var node=tree[i];var diagonal=node.getDiagonal();if(diagonal>maxDiagonal)
{maxDiagonal=diagonal;}}
return maxDiagonal;};CoSELayout.prototype.calcRepulsionRange=function(){return(2*(this.level+1)*this.idealEdgeLength);};module.exports=CoSELayout;},{"./CoSEEdge":2,"./CoSEGraph":3,"./CoSEGraphManager":4,"./CoSENode":6,"./FDLayout":8}],6:[function(_dereq_,module,exports){var FDLayoutNode=_dereq_('./FDLayoutNode');function CoSENode(gm,loc,size,vNode){FDLayoutNode.call(this,gm,loc,size,vNode);}
CoSENode.prototype=Object.create(FDLayoutNode.prototype);for(var prop in FDLayoutNode){CoSENode[prop]=FDLayoutNode[prop];}
CoSENode.prototype.move=function()
{var layout=this.graphManager.getLayout();this.displacementX=layout.coolingFactor*(this.springForceX+this.repulsionForceX+this.gravitationForceX);this.displacementY=layout.coolingFactor*(this.springForceY+this.repulsionForceY+this.gravitationForceY);if(Math.abs(this.displacementX)>layout.coolingFactor*layout.maxNodeDisplacement)
{this.displacementX=layout.coolingFactor*layout.maxNodeDisplacement*IMath.sign(this.displacementX);}
if(Math.abs(this.displacementY)>layout.coolingFactor*layout.maxNodeDisplacement)
{this.displacementY=layout.coolingFactor*layout.maxNodeDisplacement*IMath.sign(this.displacementY);}
if(this.child==null)
{this.moveBy(this.displacementX,this.displacementY);}
else if(this.child.getNodes().length==0)
{this.moveBy(this.displacementX,this.displacementY);}
else
{this.propogateDisplacementToChildren(this.displacementX,this.displacementY);}
layout.totalDisplacement+=Math.abs(this.displacementX)+Math.abs(this.displacementY);this.springForceX=0;this.springForceY=0;this.repulsionForceX=0;this.repulsionForceY=0;this.gravitationForceX=0;this.gravitationForceY=0;this.displacementX=0;this.displacementY=0;};CoSENode.prototype.propogateDisplacementToChildren=function(dX,dY)
{var nodes=this.getChild().getNodes();var node;for(var i=0;i<nodes.length;i++)
{node=nodes[i];if(node.getChild()==null)
{node.moveBy(dX,dY);node.displacementX+=dX;node.displacementY+=dY;}
else
{node.propogateDisplacementToChildren(dX,dY);}}};CoSENode.prototype.setPred1=function(pred1)
{this.pred1=pred1;};CoSENode.prototype.getPred1=function()
{return pred1;};CoSENode.prototype.getPred2=function()
{return pred2;};CoSENode.prototype.setNext=function(next)
{this.next=next;};CoSENode.prototype.getNext=function()
{return next;};CoSENode.prototype.setProcessed=function(processed)
{this.processed=processed;};CoSENode.prototype.isProcessed=function()
{return processed;};module.exports=CoSENode;},{"./FDLayoutNode":11}],7:[function(_dereq_,module,exports){function DimensionD(width,height){this.width=0;this.height=0;if(width!==null&&height!==null){this.height=height;this.width=width;}}
DimensionD.prototype.getWidth=function()
{return this.width;};DimensionD.prototype.setWidth=function(width)
{this.width=width;};DimensionD.prototype.getHeight=function()
{return this.height;};DimensionD.prototype.setHeight=function(height)
{this.height=height;};module.exports=DimensionD;},{}],8:[function(_dereq_,module,exports){var Layout=_dereq_('./Layout');var FDLayoutConstants=_dereq_('./FDLayoutConstants');function FDLayout(){Layout.call(this);this.useSmartIdealEdgeLengthCalculation=FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;this.idealEdgeLength=FDLayoutConstants.DEFAULT_EDGE_LENGTH;this.springConstant=FDLayoutConstants.DEFAULT_SPRING_STRENGTH;this.repulsionConstant=FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;this.gravityConstant=FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;this.compoundGravityConstant=FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;this.gravityRangeFactor=FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;this.compoundGravityRangeFactor=FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;this.displacementThresholdPerNode=(3.0*FDLayoutConstants.DEFAULT_EDGE_LENGTH)/100;this.coolingFactor=1.0;this.initialCoolingFactor=1.0;this.totalDisplacement=0.0;this.oldTotalDisplacement=0.0;this.maxIterations=FDLayoutConstants.MAX_ITERATIONS;}
FDLayout.prototype=Object.create(Layout.prototype);for(var prop in Layout){FDLayout[prop]=Layout[prop];}
FDLayout.prototype.initParameters=function(){Layout.prototype.initParameters.call(this,arguments);if(this.layoutQuality==LayoutConstants.DRAFT_QUALITY)
{this.displacementThresholdPerNode+=0.30;this.maxIterations*=0.8;}
else if(this.layoutQuality==LayoutConstants.PROOF_QUALITY)
{this.displacementThresholdPerNode-=0.30;this.maxIterations*=1.2;}
this.totalIterations=0;this.notAnimatedIterations=0;};FDLayout.prototype.calcIdealEdgeLengths=function(){var edge;var lcaDepth;var source;var target;var sizeOfSourceInLca;var sizeOfTargetInLca;var allEdges=this.getGraphManager().getAllEdges();for(var i=0;i<allEdges.length;i++)
{edge=allEdges[i];edge.idealLength=this.idealEdgeLength;if(edge.isInterGraph)
{source=edge.getSource();target=edge.getTarget();sizeOfSourceInLca=edge.getSourceInLca().getEstimatedSize();sizeOfTargetInLca=edge.getTargetInLca().getEstimatedSize();if(this.useSmartIdealEdgeLengthCalculation)
{edge.idealLength+=sizeOfSourceInLca+sizeOfTargetInLca-
2*LayoutConstants.SIMPLE_NODE_SIZE;}
lcaDepth=edge.getLca().getInclusionTreeDepth();edge.idealLength+=FDLayoutConstants.DEFAULT_EDGE_LENGTH*FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR*(source.getInclusionTreeDepth()+
target.getInclusionTreeDepth()-2*lcaDepth);}}};FDLayout.prototype.initSpringEmbedder=function(){if(this.incremental)
{this.coolingFactor=0.8;this.initialCoolingFactor=0.8;this.maxNodeDisplacement=FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;}
else
{this.coolingFactor=1.0;this.initialCoolingFactor=1.0;this.maxNodeDisplacement=FDLayoutConstants.MAX_NODE_DISPLACEMENT;}
this.maxIterations=Math.max(this.getAllNodes().length*5,this.maxIterations);this.totalDisplacementThreshold=this.displacementThresholdPerNode*this.getAllNodes().length;this.repulsionRange=this.calcRepulsionRange();};FDLayout.prototype.calcSpringForces=function(){var lEdges=this.getAllEdges();var edge;for(var i=0;i<lEdges.length;i++)
{edge=lEdges[i];this.calcSpringForce(edge,edge.idealLength);}};FDLayout.prototype.calcRepulsionForces=function(){var i,j;var nodeA,nodeB;var lNodes=this.getAllNodes();for(i=0;i<lNodes.length;i++)
{nodeA=lNodes[i];for(j=i+1;j<lNodes.length;j++)
{nodeB=lNodes[j];if(nodeA.getOwner()!=nodeB.getOwner())
{continue;}
this.calcRepulsionForce(nodeA,nodeB);}}};FDLayout.prototype.calcGravitationalForces=function(){var node;var lNodes=this.getAllNodesToApplyGravitation();for(var i=0;i<lNodes.length;i++)
{node=lNodes[i];this.calcGravitationalForce(node);}};FDLayout.prototype.moveNodes=function(){var lNodes=this.getAllNodes();var node;for(var i=0;i<lNodes.length;i++)
{node=lNodes[i];node.move();}}
FDLayout.prototype.calcSpringForce=function(edge,idealLength){var sourceNode=edge.getSource();var targetNode=edge.getTarget();var length;var springForce;var springForceX;var springForceY;if(this.uniformLeafNodeSizes&&sourceNode.getChild()==null&&targetNode.getChild()==null)
{edge.updateLengthSimple();}
else
{edge.updateLength();if(edge.isOverlapingSourceAndTarget)
{return;}}
length=edge.getLength();springForce=this.springConstant*(length-idealLength);springForceX=springForce*(edge.lengthX/length);springForceY=springForce*(edge.lengthY/length);sourceNode.springForceX+=springForceX;sourceNode.springForceY+=springForceY;targetNode.springForceX-=springForceX;targetNode.springForceY-=springForceY;};FDLayout.prototype.calcRepulsionForce=function(nodeA,nodeB){var rectA=nodeA.getRect();var rectB=nodeB.getRect();var overlapAmount=new Array(2);var clipPoints=new Array(4);var distanceX;var distanceY;var distanceSquared;var distance;var repulsionForce;var repulsionForceX;var repulsionForceY;if(rectA.intersects(rectB))
{IGeometry.calcSeparationAmount(rectA,rectB,overlapAmount,FDLayoutConstants.DEFAULT_EDGE_LENGTH/2.0);repulsionForceX=overlapAmount[0];repulsionForceY=overlapAmount[1];}
else
{if(this.uniformLeafNodeSizes&&nodeA.getChild()==null&&nodeB.getChild()==null)
{distanceX=rectB.getCenterX()-rectA.getCenterX();distanceY=rectB.getCenterY()-rectA.getCenterY();}
else
{IGeometry.getIntersection(rectA,rectB,clipPoints);distanceX=clipPoints[2]-clipPoints[0];distanceY=clipPoints[3]-clipPoints[1];}
if(Math.abs(distanceX)<FDLayoutConstants.MIN_REPULSION_DIST)
{distanceX=IMath.sign(distanceX)*FDLayoutConstants.MIN_REPULSION_DIST;}
if(Math.abs(distanceY)<FDLayoutConstants.MIN_REPULSION_DIST)
{distanceY=IMath.sign(distanceY)*FDLayoutConstants.MIN_REPULSION_DIST;}
distanceSquared=distanceX*distanceX+distanceY*distanceY;distance=Math.sqrt(distanceSquared);repulsionForce=this.repulsionConstant/distanceSquared;repulsionForceX=repulsionForce*distanceX/distance;repulsionForceY=repulsionForce*distanceY/distance;}
nodeA.repulsionForceX-=repulsionForceX;nodeA.repulsionForceY-=repulsionForceY;nodeB.repulsionForceX+=repulsionForceX;nodeB.repulsionForceY+=repulsionForceY;};FDLayout.prototype.calcGravitationalForce=function(node){var ownerGraph;var ownerCenterX;var ownerCenterY;var distanceX;var distanceY;var absDistanceX;var absDistanceY;var estimatedSize;ownerGraph=node.getOwner();ownerCenterX=(ownerGraph.getRight()+ownerGraph.getLeft())/2;ownerCenterY=(ownerGraph.getTop()+ownerGraph.getBottom())/2;distanceX=node.getCenterX()-ownerCenterX;distanceY=node.getCenterY()-ownerCenterY;absDistanceX=Math.abs(distanceX);absDistanceY=Math.abs(distanceY);if(node.getOwner()==this.graphManager.getRoot())
{Math.floor(80);estimatedSize=Math.floor(ownerGraph.getEstimatedSize()*this.gravityRangeFactor);if(absDistanceX>estimatedSize||absDistanceY>estimatedSize)
{node.gravitationForceX=-this.gravityConstant*distanceX;node.gravitationForceY=-this.gravityConstant*distanceY;}}
else
{estimatedSize=Math.floor((ownerGraph.getEstimatedSize()*this.compoundGravityRangeFactor));if(absDistanceX>estimatedSize||absDistanceY>estimatedSize)
{node.gravitationForceX=-this.gravityConstant*distanceX*this.compoundGravityConstant;node.gravitationForceY=-this.gravityConstant*distanceY*this.compoundGravityConstant;}}};FDLayout.prototype.isConverged=function(){var converged;var oscilating=false;if(this.totalIterations>this.maxIterations/3)
{oscilating=Math.abs(this.totalDisplacement-this.oldTotalDisplacement)<2;}
converged=this.totalDisplacement<this.totalDisplacementThreshold;this.oldTotalDisplacement=this.totalDisplacement;return converged||oscilating;};FDLayout.prototype.animate=function(){if(this.animationDuringLayout&&!this.isSubLayout)
{if(this.notAnimatedIterations==this.animationPeriod)
{this.update();this.notAnimatedIterations=0;}
else
{this.notAnimatedIterations++;}}};FDLayout.prototype.calcRepulsionRange=function(){return 0.0;};module.exports=FDLayout;},{"./FDLayoutConstants":9,"./Layout":22}],9:[function(_dereq_,module,exports){var LayoutConstants=_dereq_('./LayoutConstants');function FDLayoutConstants(){}
for(var prop in LayoutConstants){FDLayoutConstants[prop]=LayoutConstants[prop];}
FDLayoutConstants.MAX_ITERATIONS=2500;FDLayoutConstants.DEFAULT_EDGE_LENGTH=50;FDLayoutConstants.DEFAULT_SPRING_STRENGTH=0.45;FDLayoutConstants.DEFAULT_REPULSION_STRENGTH=4500.0;FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH=0.4;FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH=1.0;FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR=3.8;FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=1.5;FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION=true;FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION=true;FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL=100.0;FDLayoutConstants.MAX_NODE_DISPLACEMENT=FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL*3;FDLayoutConstants.MIN_REPULSION_DIST=FDLayoutConstants.DEFAULT_EDGE_LENGTH/10.0;FDLayoutConstants.CONVERGENCE_CHECK_PERIOD=100;FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=0.1;FDLayoutConstants.MIN_EDGE_LENGTH=1;FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD=10;module.exports=FDLayoutConstants;},{"./LayoutConstants":23}],10:[function(_dereq_,module,exports){var LEdge=_dereq_('./LEdge');var FDLayoutConstants=_dereq_('./FDLayoutConstants');function FDLayoutEdge(source,target,vEdge){LEdge.call(this,source,target,vEdge);this.idealLength=FDLayoutConstants.DEFAULT_EDGE_LENGTH;}
FDLayoutEdge.prototype=Object.create(LEdge.prototype);for(var prop in LEdge){FDLayoutEdge[prop]=LEdge[prop];}
module.exports=FDLayoutEdge;},{"./FDLayoutConstants":9,"./LEdge":17}],11:[function(_dereq_,module,exports){var LNode=_dereq_('./LNode');function FDLayoutNode(gm,loc,size,vNode){LNode.call(this,gm,loc,size,vNode);this.springForceX=0;this.springForceY=0;this.repulsionForceX=0;this.repulsionForceY=0;this.gravitationForceX=0;this.gravitationForceY=0;this.displacementX=0;this.displacementY=0;this.startX=0;this.finishX=0;this.startY=0;this.finishY=0;this.surrounding=[];}
FDLayoutNode.prototype=Object.create(LNode.prototype);for(var prop in LNode){FDLayoutNode[prop]=LNode[prop];}
FDLayoutNode.prototype.setGridCoordinates=function(_startX,_finishX,_startY,_finishY)
{this.startX=_startX;this.finishX=_finishX;this.startY=_startY;this.finishY=_finishY;};module.exports=FDLayoutNode;},{"./LNode":21}],12:[function(_dereq_,module,exports){var UniqueIDGeneretor=_dereq_('./UniqueIDGeneretor');function HashMap(){this.map={};this.keys=[];}
HashMap.prototype.put=function(key,value){var theId=UniqueIDGeneretor.createID(key);if(!this.contains(theId)){this.map[theId]=value;this.keys.push(key);}};HashMap.prototype.contains=function(key){var theId=UniqueIDGeneretor.createID(key);return this.map[key]!=null;};HashMap.prototype.get=function(key){var theId=UniqueIDGeneretor.createID(key);return this.map[theId];};HashMap.prototype.keySet=function(){return this.keys;};module.exports=HashMap;},{"./UniqueIDGeneretor":29}],13:[function(_dereq_,module,exports){var UniqueIDGeneretor=_dereq_('./UniqueIDGeneretor');function HashSet(){this.set={};};HashSet.prototype.add=function(obj){var theId=UniqueIDGeneretor.createID(obj);if(!this.contains(theId))
this.set[theId]=obj;};HashSet.prototype.remove=function(obj){delete this.set[UniqueIDGeneretor.createID(obj)];};HashSet.prototype.clear=function(){this.set={};};HashSet.prototype.contains=function(obj){return this.set[UniqueIDGeneretor.createID(obj)]==obj;};HashSet.prototype.isEmpty=function(){return this.size()===0;};HashSet.prototype.size=function(){return Object.keys(this.set).length;};HashSet.prototype.addAllTo=function(list){var keys=Object.keys(this.set);var length=keys.length;for(var i=0;i<length;i++){list.push(this.set[keys[i]]);}};HashSet.prototype.size=function(){return Object.keys(this.set).length;};HashSet.prototype.addAll=function(list){var s=list.length;for(var i=0;i<s;i++){var v=list[i];this.add(v);}};module.exports=HashSet;},{"./UniqueIDGeneretor":29}],14:[function(_dereq_,module,exports){function IGeometry(){}
IGeometry.calcSeparationAmount=function(rectA,rectB,overlapAmount,separationBuffer)
{if(!rectA.intersects(rectB)){throw"assert failed";}
var directions=new Array(2);IGeometry.decideDirectionsForOverlappingNodes(rectA,rectB,directions);overlapAmount[0]=Math.min(rectA.getRight(),rectB.getRight())-
Math.max(rectA.x,rectB.x);overlapAmount[1]=Math.min(rectA.getBottom(),rectB.getBottom())-
Math.max(rectA.y,rectB.y);if((rectA.getX()<=rectB.getX())&&(rectA.getRight()>=rectB.getRight()))
{overlapAmount[0]+=Math.min((rectB.getX()-rectA.getX()),(rectA.getRight()-rectB.getRight()));}
else if((rectB.getX()<=rectA.getX())&&(rectB.getRight()>=rectA.getRight()))
{overlapAmount[0]+=Math.min((rectA.getX()-rectB.getX()),(rectB.getRight()-rectA.getRight()));}
if((rectA.getY()<=rectB.getY())&&(rectA.getBottom()>=rectB.getBottom()))
{overlapAmount[1]+=Math.min((rectB.getY()-rectA.getY()),(rectA.getBottom()-rectB.getBottom()));}
else if((rectB.getY()<=rectA.getY())&&(rectB.getBottom()>=rectA.getBottom()))
{overlapAmount[1]+=Math.min((rectA.getY()-rectB.getY()),(rectB.getBottom()-rectA.getBottom()));}
var slope=Math.abs((rectB.getCenterY()-rectA.getCenterY())/
(rectB.getCenterX()-rectA.getCenterX()));if((rectB.getCenterY()==rectA.getCenterY())&&(rectB.getCenterX()==rectA.getCenterX()))
{slope=1.0;}
var moveByY=slope*overlapAmount[0];var moveByX=overlapAmount[1]/slope;if(overlapAmount[0]<moveByX)
{moveByX=overlapAmount[0];}
else
{moveByY=overlapAmount[1];}
overlapAmount[0]=-1*directions[0]*((moveByX/2)+separationBuffer);overlapAmount[1]=-1*directions[1]*((moveByY/2)+separationBuffer);}
IGeometry.decideDirectionsForOverlappingNodes=function(rectA,rectB,directions)
{if(rectA.getCenterX()<rectB.getCenterX())
{directions[0]=-1;}
else
{directions[0]=1;}
if(rectA.getCenterY()<rectB.getCenterY())
{directions[1]=-1;}
else
{directions[1]=1;}}
IGeometry.getIntersection2=function(rectA,rectB,result)
{var p1x=rectA.getCenterX();var p1y=rectA.getCenterY();var p2x=rectB.getCenterX();var p2y=rectB.getCenterY();if(rectA.intersects(rectB))
{result[0]=p1x;result[1]=p1y;result[2]=p2x;result[3]=p2y;return true;}
var topLeftAx=rectA.getX();var topLeftAy=rectA.getY();var topRightAx=rectA.getRight();var bottomLeftAx=rectA.getX();var bottomLeftAy=rectA.getBottom();var bottomRightAx=rectA.getRight();var halfWidthA=rectA.getWidthHalf();var halfHeightA=rectA.getHeightHalf();var topLeftBx=rectB.getX();var topLeftBy=rectB.getY();var topRightBx=rectB.getRight();var bottomLeftBx=rectB.getX();var bottomLeftBy=rectB.getBottom();var bottomRightBx=rectB.getRight();var halfWidthB=rectB.getWidthHalf();var halfHeightB=rectB.getHeightHalf();var clipPointAFound=false;var clipPointBFound=false;if(p1x==p2x)
{if(p1y>p2y)
{result[0]=p1x;result[1]=topLeftAy;result[2]=p2x;result[3]=bottomLeftBy;return false;}
else if(p1y<p2y)
{result[0]=p1x;result[1]=bottomLeftAy;result[2]=p2x;result[3]=topLeftBy;return false;}
else
{}}
else if(p1y==p2y)
{if(p1x>p2x)
{result[0]=topLeftAx;result[1]=p1y;result[2]=topRightBx;result[3]=p2y;return false;}
else if(p1x<p2x)
{result[0]=topRightAx;result[1]=p1y;result[2]=topLeftBx;result[3]=p2y;return false;}
else
{}}
else
{var slopeA=rectA.height/rectA.width;var slopeB=rectB.height/rectB.width;var slopePrime=(p2y-p1y)/(p2x-p1x);var cardinalDirectionA;var cardinalDirectionB;var tempPointAx;var tempPointAy;var tempPointBx;var tempPointBy;if((-slopeA)==slopePrime)
{if(p1x>p2x)
{result[0]=bottomLeftAx;result[1]=bottomLeftAy;clipPointAFound=true;}
else
{result[0]=topRightAx;result[1]=topLeftAy;clipPointAFound=true;}}
else if(slopeA==slopePrime)
{if(p1x>p2x)
{result[0]=topLeftAx;result[1]=topLeftAy;clipPointAFound=true;}
else
{result[0]=bottomRightAx;result[1]=bottomLeftAy;clipPointAFound=true;}}
if((-slopeB)==slopePrime)
{if(p2x>p1x)
{result[2]=bottomLeftBx;result[3]=bottomLeftBy;clipPointBFound=true;}
else
{result[2]=topRightBx;result[3]=topLeftBy;clipPointBFound=true;}}
else if(slopeB==slopePrime)
{if(p2x>p1x)
{result[2]=topLeftBx;result[3]=topLeftBy;clipPointBFound=true;}
else
{result[2]=bottomRightBx;result[3]=bottomLeftBy;clipPointBFound=true;}}
if(clipPointAFound&&clipPointBFound)
{return false;}
if(p1x>p2x)
{if(p1y>p2y)
{cardinalDirectionA=IGeometry.getCardinalDirection(slopeA,slopePrime,4);cardinalDirectionB=IGeometry.getCardinalDirection(slopeB,slopePrime,2);}
else
{cardinalDirectionA=IGeometry.getCardinalDirection(-slopeA,slopePrime,3);cardinalDirectionB=IGeometry.getCardinalDirection(-slopeB,slopePrime,1);}}
else
{if(p1y>p2y)
{cardinalDirectionA=IGeometry.getCardinalDirection(-slopeA,slopePrime,1);cardinalDirectionB=IGeometry.getCardinalDirection(-slopeB,slopePrime,3);}
else
{cardinalDirectionA=IGeometry.getCardinalDirection(slopeA,slopePrime,2);cardinalDirectionB=IGeometry.getCardinalDirection(slopeB,slopePrime,4);}}
if(!clipPointAFound)
{switch(cardinalDirectionA)
{case 1:tempPointAy=topLeftAy;tempPointAx=p1x+(-halfHeightA)/slopePrime;result[0]=tempPointAx;result[1]=tempPointAy;break;case 2:tempPointAx=bottomRightAx;tempPointAy=p1y+halfWidthA*slopePrime;result[0]=tempPointAx;result[1]=tempPointAy;break;case 3:tempPointAy=bottomLeftAy;tempPointAx=p1x+halfHeightA/slopePrime;result[0]=tempPointAx;result[1]=tempPointAy;break;case 4:tempPointAx=bottomLeftAx;tempPointAy=p1y+(-halfWidthA)*slopePrime;result[0]=tempPointAx;result[1]=tempPointAy;break;}}
if(!clipPointBFound)
{switch(cardinalDirectionB)
{case 1:tempPointBy=topLeftBy;tempPointBx=p2x+(-halfHeightB)/slopePrime;result[2]=tempPointBx;result[3]=tempPointBy;break;case 2:tempPointBx=bottomRightBx;tempPointBy=p2y+halfWidthB*slopePrime;result[2]=tempPointBx;result[3]=tempPointBy;break;case 3:tempPointBy=bottomLeftBy;tempPointBx=p2x+halfHeightB/slopePrime;result[2]=tempPointBx;result[3]=tempPointBy;break;case 4:tempPointBx=bottomLeftBx;tempPointBy=p2y+(-halfWidthB)*slopePrime;result[2]=tempPointBx;result[3]=tempPointBy;break;}}}
return false;}
IGeometry.getCardinalDirection=function(slope,slopePrime,line)
{if(slope>slopePrime)
{return line;}
else
{return 1+line%4;}}
IGeometry.getIntersection=function(s1,s2,f1,f2)
{if(f2==null){return IGeometry.getIntersection2(s1,s2,f1);}
var x1=s1.x;var y1=s1.y;var x2=s2.x;var y2=s2.y;var x3=f1.x;var y3=f1.y;var x4=f2.x;var y4=f2.y;var x,y;var a1,a2,b1,b2,c1,c2;var denom;a1=y2-y1;b1=x1-x2;c1=x2*y1-x1*y2;a2=y4-y3;b2=x3-x4;c2=x4*y3-x3*y4;denom=a1*b2-a2*b1;if(denom==0)
{return null;}
x=(b1*c2-b2*c1)/denom;y=(a2*c1-a1*c2)/denom;return new Point(x,y);}
IGeometry.HALF_PI=0.5*Math.PI;IGeometry.ONE_AND_HALF_PI=1.5*Math.PI;IGeometry.TWO_PI=2.0*Math.PI;IGeometry.THREE_PI=3.0*Math.PI;module.exports=IGeometry;},{}],15:[function(_dereq_,module,exports){function IMath(){}
IMath.sign=function(value){if(value>0)
{return 1;}
else if(value<0)
{return-1;}
else
{return 0;}}
IMath.floor=function(value){return value<0?Math.ceil(value):Math.floor(value);}
IMath.ceil=function(value){return value<0?Math.floor(value):Math.ceil(value);}
module.exports=IMath;},{}],16:[function(_dereq_,module,exports){function Integer(){}
Integer.MAX_VALUE=2147483647;Integer.MIN_VALUE=-2147483648;module.exports=Integer;},{}],17:[function(_dereq_,module,exports){var LGraphObject=_dereq_('./LGraphObject');function LEdge(source,target,vEdge){LGraphObject.call(this,vEdge);this.isOverlapingSourceAndTarget=false;this.vGraphObject=vEdge;this.bendpoints=[];this.source=source;this.target=target;}
LEdge.prototype=Object.create(LGraphObject.prototype);for(var prop in LGraphObject){LEdge[prop]=LGraphObject[prop];}
LEdge.prototype.getSource=function()
{return this.source;};LEdge.prototype.getTarget=function()
{return this.target;};LEdge.prototype.isInterGraph=function()
{return this.isInterGraph;};LEdge.prototype.getLength=function()
{return this.length;};LEdge.prototype.isOverlapingSourceAndTarget=function()
{return this.isOverlapingSourceAndTarget;};LEdge.prototype.getBendpoints=function()
{return this.bendpoints;};LEdge.prototype.getLca=function()
{return this.lca;};LEdge.prototype.getSourceInLca=function()
{return this.sourceInLca;};LEdge.prototype.getTargetInLca=function()
{return this.targetInLca;};LEdge.prototype.getOtherEnd=function(node)
{if(this.source===node)
{return this.target;}
else if(this.target===node)
{return this.source;}
else
{throw"Node is not incident with this edge";}}
LEdge.prototype.getOtherEndInGraph=function(node,graph)
{var otherEnd=this.getOtherEnd(node);var root=graph.getGraphManager().getRoot();while(true)
{if(otherEnd.getOwner()==graph)
{return otherEnd;}
if(otherEnd.getOwner()==root)
{break;}
otherEnd=otherEnd.getOwner().getParent();}
return null;};LEdge.prototype.updateLength=function()
{var clipPointCoordinates=new Array(4);this.isOverlapingSourceAndTarget=IGeometry.getIntersection(this.target.getRect(),this.source.getRect(),clipPointCoordinates);if(!this.isOverlapingSourceAndTarget)
{this.lengthX=clipPointCoordinates[0]-clipPointCoordinates[2];this.lengthY=clipPointCoordinates[1]-clipPointCoordinates[3];if(Math.abs(this.lengthX)<1.0)
{this.lengthX=IMath.sign(this.lengthX);}
if(Math.abs(this.lengthY)<1.0)
{this.lengthY=IMath.sign(this.lengthY);}
this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY);}};LEdge.prototype.updateLengthSimple=function()
{this.lengthX=this.target.getCenterX()-this.source.getCenterX();this.lengthY=this.target.getCenterY()-this.source.getCenterY();if(Math.abs(this.lengthX)<1.0)
{this.lengthX=IMath.sign(this.lengthX);}
if(Math.abs(this.lengthY)<1.0)
{this.lengthY=IMath.sign(this.lengthY);}
this.length=Math.sqrt(this.lengthX*this.lengthX+this.lengthY*this.lengthY);}
module.exports=LEdge;},{"./LGraphObject":20}],18:[function(_dereq_,module,exports){var LGraphObject=_dereq_('./LGraphObject');var Integer=_dereq_('./Integer');var LayoutConstants=_dereq_('./LayoutConstants');var LGraphManager=_dereq_('./LGraphManager');var LNode=_dereq_('./LNode');function LGraph(parent,obj2,vGraph){LGraphObject.call(this,vGraph);this.estimatedSize=Integer.MIN_VALUE;this.margin=LayoutConstants.DEFAULT_GRAPH_MARGIN;this.edges=[];this.nodes=[];this.isConnected=false;this.parent=parent;if(obj2!=null&&obj2 instanceof LGraphManager){this.graphManager=obj2;}
else if(obj2!=null&&obj2 instanceof Layout){this.graphManager=obj2.graphManager;}}
LGraph.prototype=Object.create(LGraphObject.prototype);for(var prop in LGraphObject){LGraph[prop]=LGraphObject[prop];}
LGraph.prototype.getNodes=function(){return this.nodes;};LGraph.prototype.getEdges=function(){return this.edges;};LGraph.prototype.getGraphManager=function()
{return this.graphManager;};LGraph.prototype.getParent=function()
{return this.parent;};LGraph.prototype.getLeft=function()
{return this.left;};LGraph.prototype.getRight=function()
{return this.right;};LGraph.prototype.getTop=function()
{return this.top;};LGraph.prototype.getBottom=function()
{return this.bottom;};LGraph.prototype.isConnected=function()
{return this.isConnected;};LGraph.prototype.add=function(obj1,sourceNode,targetNode){if(sourceNode==null&&targetNode==null){var newNode=obj1;if(this.graphManager==null){throw"Graph has no graph mgr!";}
if(this.getNodes().indexOf(newNode)>-1){throw"Node already in graph!";}
newNode.owner=this;this.getNodes().push(newNode);return newNode;}
else{var newEdge=obj1;if(!(this.getNodes().indexOf(sourceNode)>-1&&(this.getNodes().indexOf(targetNode))>-1)){throw"Source or target not in graph!";}
if(!(sourceNode.owner==targetNode.owner&&sourceNode.owner==this)){throw"Both owners must be this graph!";}
if(sourceNode.owner!=targetNode.owner)
{return null;}
newEdge.source=sourceNode;newEdge.target=targetNode;newEdge.isInterGraph=false;this.getEdges().push(newEdge);sourceNode.edges.push(newEdge);if(targetNode!=sourceNode)
{targetNode.edges.push(newEdge);}
return newEdge;}};LGraph.prototype.remove=function(obj){var node=obj;if(obj instanceof LNode){if(node==null){throw"Node is null!";}
if(!(node.owner!=null&&node.owner==this)){throw"Owner graph is invalid!";}
if(this.graphManager==null){throw"Owner graph manager is invalid!";}
var edgesToBeRemoved=node.edges.slice();var edge;var s=edgesToBeRemoved.length;for(var i=0;i<s;i++)
{edge=edgesToBeRemoved[i];if(edge.isInterGraph)
{this.graphManager.remove(edge);}
else
{edge.source.owner.remove(edge);}}
var index=this.nodes.indexOf(node);if(index==-1){throw"Node not in owner node list!";}
this.nodes.splice(index,1);}
else if(obj instanceof LEdge){var edge=obj;if(edge==null){throw"Edge is null!";}
if(!(edge.source!=null&&edge.target!=null)){throw"Source and/or target is null!";}
if(!(edge.source.owner!=null&&edge.target.owner!=null&&edge.source.owner==this&&edge.target.owner==this)){throw"Source and/or target owner is invalid!";}
var sourceIndex=edge.source.edges.indexOf(edge);var targetIndex=edge.target.edges.indexOf(edge);if(!(sourceIndex>-1&&targetIndex>-1)){throw"Source and/or target doesn't know this edge!";}
edge.source.edges.splice(sourceIndex,1);if(edge.target!=edge.source)
{edge.target.edges.splice(targetIndex,1);}
var index=edge.source.owner.getEdges().indexOf(edge);if(index==-1){throw"Not in owner's edge list!";}
edge.source.owner.getEdges().splice(index,1);}};LGraph.prototype.updateLeftTop=function()
{var top=Integer.MAX_VALUE;var left=Integer.MAX_VALUE;var nodeTop;var nodeLeft;var nodes=this.getNodes();var s=nodes.length;for(var i=0;i<s;i++)
{var lNode=nodes[i];nodeTop=Math.floor(lNode.getTop());nodeLeft=Math.floor(lNode.getLeft());if(top>nodeTop)
{top=nodeTop;}
if(left>nodeLeft)
{left=nodeLeft;}}
if(top==Integer.MAX_VALUE)
{return null;}
this.left=left-this.margin;this.top=top-this.margin;return new Point(this.left,this.top);};LGraph.prototype.updateBounds=function(recursive)
{var left=Integer.MAX_VALUE;var right=-Integer.MAX_VALUE;var top=Integer.MAX_VALUE;var bottom=-Integer.MAX_VALUE;var nodeLeft;var nodeRight;var nodeTop;var nodeBottom;var nodes=this.nodes;var s=nodes.length;for(var i=0;i<s;i++)
{var lNode=nodes[i];if(recursive&&lNode.child!=null)
{lNode.updateBounds();}
nodeLeft=Math.floor(lNode.getLeft());nodeRight=Math.floor(lNode.getRight());nodeTop=Math.floor(lNode.getTop());nodeBottom=Math.floor(lNode.getBottom());if(left>nodeLeft)
{left=nodeLeft;}
if(right<nodeRight)
{right=nodeRight;}
if(top>nodeTop)
{top=nodeTop;}
if(bottom<nodeBottom)
{bottom=nodeBottom;}}
var boundingRect=new RectangleD(left,top,right-left,bottom-top);if(left==Integer.MAX_VALUE)
{this.left=Math.floor(this.parent.getLeft());this.right=Math.floor(this.parent.getRight());this.top=Math.floor(this.parent.getTop());this.bottom=Math.floor(this.parent.getBottom());}
this.left=boundingRect.x-this.margin;this.right=boundingRect.x+boundingRect.width+this.margin;this.top=boundingRect.y-this.margin;this.bottom=boundingRect.y+boundingRect.height+this.margin;};LGraph.calculateBounds=function(nodes)
{var left=Integer.MAX_VALUE;var right=-Integer.MAX_VALUE;var top=Integer.MAX_VALUE;var bottom=-Integer.MAX_VALUE;var nodeLeft;var nodeRight;var nodeTop;var nodeBottom;var s=nodes.length;for(var i=0;i<s;i++)
{var lNode=nodes[i];nodeLeft=Math.floor(lNode.getLeft());nodeRight=Math.floor(lNode.getRight());nodeTop=Math.floor(lNode.getTop());nodeBottom=Math.floor(lNode.getBottom());if(left>nodeLeft)
{left=nodeLeft;}
if(right<nodeRight)
{right=nodeRight;}
if(top>nodeTop)
{top=nodeTop;}
if(bottom<nodeBottom)
{bottom=nodeBottom;}}
var boundingRect=new RectangleD(left,top,right-left,bottom-top);return boundingRect;};LGraph.prototype.getInclusionTreeDepth=function()
{if(this==this.graphManager.getRoot())
{return 1;}
else
{return this.parent.getInclusionTreeDepth();}};LGraph.prototype.getEstimatedSize=function()
{if(this.estimatedSize==Integer.MIN_VALUE){throw"assert failed";}
return this.estimatedSize;};LGraph.prototype.calcEstimatedSize=function()
{var size=0;var nodes=this.nodes;var s=nodes.length;for(var i=0;i<s;i++)
{var lNode=nodes[i];size+=lNode.calcEstimatedSize();}
if(size==0)
{this.estimatedSize=LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;}
else
{this.estimatedSize=Math.floor(size/Math.sqrt(this.nodes.length));}
return Math.floor(this.estimatedSize);};LGraph.prototype.updateConnected=function()
{if(this.nodes.length==0)
{this.isConnected=true;return;}
var toBeVisited=[];var visited=new HashSet();var currentNode=this.nodes[0];var neighborEdges;var currentNeighbor;toBeVisited=toBeVisited.concat(currentNode.withChildren());while(toBeVisited.length>0)
{currentNode=toBeVisited.shift();visited.add(currentNode);neighborEdges=currentNode.getEdges();var s=neighborEdges.length;for(var i=0;i<s;i++)
{var neighborEdge=neighborEdges[i];currentNeighbor=neighborEdge.getOtherEndInGraph(currentNode,this);if(currentNeighbor!=null&&!visited.contains(currentNeighbor))
{toBeVisited=toBeVisited.concat(currentNeighbor.withChildren());}}}
this.isConnected=false;if(visited.size()>=this.nodes.length)
{var noOfVisitedInThisGraph=0;var s=visited.size();for(var visitedId in visited.set)
{var visitedNode=visited.set[visitedId];if(visitedNode.owner==this)
{noOfVisitedInThisGraph++;}}
if(noOfVisitedInThisGraph==this.nodes.length)
{this.isConnected=true;}}};module.exports=LGraph;},{"./Integer":16,"./LGraphManager":19,"./LGraphObject":20,"./LNode":21,"./LayoutConstants":23}],19:[function(_dereq_,module,exports){function LGraphManager(layout){this.layout=layout;this.graphs=[];this.edges=[];}
LGraphManager.prototype.addRoot=function()
{var ngraph=this.layout.newGraph();var nnode=this.layout.newNode(null);var root=this.add(ngraph,nnode);this.setRootGraph(root);return this.rootGraph;};LGraphManager.prototype.add=function(newGraph,parentNode,newEdge,sourceNode,targetNode)
{if(newEdge==null&&sourceNode==null&&targetNode==null){if(newGraph==null){throw"Graph is null!";}
if(parentNode==null){throw"Parent node is null!";}
if(this.graphs.indexOf(newGraph)>-1){throw"Graph already in this graph mgr!";}
this.graphs.push(newGraph);if(newGraph.parent!=null){throw"Already has a parent!";}
if(parentNode.child!=null){throw"Already has a child!";}
newGraph.parent=parentNode;parentNode.child=newGraph;return newGraph;}
else{targetNode=newEdge;sourceNode=parentNode;newEdge=newGraph;var sourceGraph=sourceNode.getOwner();var targetGraph=targetNode.getOwner();if(!(sourceGraph!=null&&sourceGraph.getGraphManager()==this)){throw"Source not in this graph mgr!";}
if(!(targetGraph!=null&&targetGraph.getGraphManager()==this)){throw"Target not in this graph mgr!";}
if(sourceGraph==targetGraph)
{newEdge.isInterGraph=false;return sourceGraph.add(newEdge,sourceNode,targetNode);}
else
{newEdge.isInterGraph=true;newEdge.source=sourceNode;newEdge.target=targetNode;if(this.edges.indexOf(newEdge)>-1){throw"Edge already in inter-graph edge list!";}
this.edges.push(newEdge);if(!(newEdge.source!=null&&newEdge.target!=null)){throw"Edge source and/or target is null!";}
if(!(newEdge.source.edges.indexOf(newEdge)==-1&&newEdge.target.edges.indexOf(newEdge)==-1)){throw"Edge already in source and/or target incidency list!";}
newEdge.source.edges.push(newEdge);newEdge.target.edges.push(newEdge);return newEdge;}}};LGraphManager.prototype.remove=function(lObj){if(lObj instanceof LGraph){var graph=lObj;if(graph.getGraphManager()!=this){throw"Graph not in this graph mgr";}
if(!(graph==this.rootGraph||(graph.parent!=null&&graph.parent.graphManager==this))){throw"Invalid parent node!";}
var edgesToBeRemoved=[];edgesToBeRemoved=edgesToBeRemoved.concat(graph.getEdges());var edge;var s=edgesToBeRemoved.length;for(var i=0;i<s;i++)
{edge=edgesToBeRemoved[i];graph.remove(edge);}
var nodesToBeRemoved=[];nodesToBeRemoved=nodesToBeRemoved.concat(graph.getNodes());var node;s=nodesToBeRemoved.length;for(var i=0;i<s;i++)
{node=nodesToBeRemoved[i];graph.remove(node);}
if(graph==this.rootGraph)
{this.setRootGraph(null);}
var index=this.graphs.indexOf(graph);this.graphs.splice(index,1);graph.parent=null;}
else if(lObj instanceof LEdge){edge=lObj;if(edge==null){throw"Edge is null!";}
if(!edge.isInterGraph){throw"Not an inter-graph edge!";}
if(!(edge.source!=null&&edge.target!=null)){throw"Source and/or target is null!";}
if(!(edge.source.edges.indexOf(edge)!=-1&&edge.target.edges.indexOf(edge)!=-1)){throw"Source and/or target doesn't know this edge!";}
var index=edge.source.edges.indexOf(edge);edge.source.edges.splice(index,1);index=edge.target.edges.indexOf(edge);edge.target.edges.splice(index,1);if(!(edge.source.owner!=null&&edge.source.owner.getGraphManager()!=null)){throw"Edge owner graph or owner graph manager is null!";}
if(edge.source.owner.getGraphManager().edges.indexOf(edge)==-1){throw"Not in owner graph manager's edge list!";}
var index=edge.source.owner.getGraphManager().edges.indexOf(edge);edge.source.owner.getGraphManager().edges.splice(index,1);}};LGraphManager.prototype.updateBounds=function()
{this.rootGraph.updateBounds(true);};LGraphManager.prototype.getGraphs=function()
{return this.graphs;};LGraphManager.prototype.getAllNodes=function()
{if(this.allNodes==null)
{var nodeList=[];var graphs=this.getGraphs();var s=graphs.length;for(var i=0;i<s;i++)
{nodeList=nodeList.concat(graphs[i].getNodes());}
this.allNodes=nodeList;}
return this.allNodes;};LGraphManager.prototype.resetAllNodes=function()
{this.allNodes=null;};LGraphManager.prototype.resetAllEdges=function()
{this.allEdges=null;};LGraphManager.prototype.resetAllNodesToApplyGravitation=function()
{this.allNodesToApplyGravitation=null;};LGraphManager.prototype.getAllEdges=function()
{if(this.allEdges==null)
{var edgeList=[];var graphs=this.getGraphs();var s=graphs.length;for(var i=0;i<graphs.length;i++)
{edgeList=edgeList.concat(graphs[i].getEdges());}
edgeList=edgeList.concat(this.edges);this.allEdges=edgeList;}
return this.allEdges;};LGraphManager.prototype.getAllNodesToApplyGravitation=function()
{return this.allNodesToApplyGravitation;};LGraphManager.prototype.setAllNodesToApplyGravitation=function(nodeList)
{if(this.allNodesToApplyGravitation!=null){throw"assert failed";}
this.allNodesToApplyGravitation=nodeList;};LGraphManager.prototype.getRoot=function()
{return this.rootGraph;};LGraphManager.prototype.setRootGraph=function(graph)
{if(graph.getGraphManager()!=this){throw"Root not in this graph mgr!";}
this.rootGraph=graph;if(graph.parent==null)
{graph.parent=this.layout.newNode("Root node");}};LGraphManager.prototype.getLayout=function()
{return this.layout;};LGraphManager.prototype.isOneAncestorOfOther=function(firstNode,secondNode)
{if(!(firstNode!=null&&secondNode!=null)){throw"assert failed";}
if(firstNode==secondNode)
{return true;}
var ownerGraph=firstNode.getOwner();var parentNode;do
{parentNode=ownerGraph.getParent();if(parentNode==null)
{break;}
if(parentNode==secondNode)
{return true;}
ownerGraph=parentNode.getOwner();if(ownerGraph==null)
{break;}}while(true);ownerGraph=secondNode.getOwner();do
{parentNode=ownerGraph.getParent();if(parentNode==null)
{break;}
if(parentNode==firstNode)
{return true;}
ownerGraph=parentNode.getOwner();if(ownerGraph==null)
{break;}}while(true);return false;};LGraphManager.prototype.calcLowestCommonAncestors=function()
{var edge;var sourceNode;var targetNode;var sourceAncestorGraph;var targetAncestorGraph;var edges=this.getAllEdges();var s=edges.length;for(var i=0;i<s;i++)
{edge=edges[i];sourceNode=edge.source;targetNode=edge.target;edge.lca=null;edge.sourceInLca=sourceNode;edge.targetInLca=targetNode;if(sourceNode==targetNode)
{edge.lca=sourceNode.getOwner();continue;}
sourceAncestorGraph=sourceNode.getOwner();while(edge.lca==null)
{targetAncestorGraph=targetNode.getOwner();while(edge.lca==null)
{if(targetAncestorGraph==sourceAncestorGraph)
{edge.lca=targetAncestorGraph;break;}
if(targetAncestorGraph==this.rootGraph)
{break;}
if(edge.lca!=null){throw"assert failed";}
edge.targetInLca=targetAncestorGraph.getParent();targetAncestorGraph=edge.targetInLca.getOwner();}
if(sourceAncestorGraph==this.rootGraph)
{break;}
if(edge.lca==null)
{edge.sourceInLca=sourceAncestorGraph.getParent();sourceAncestorGraph=edge.sourceInLca.getOwner();}}
if(edge.lca==null){throw"assert failed";}}};LGraphManager.prototype.calcLowestCommonAncestor=function(firstNode,secondNode)
{if(firstNode==secondNode)
{return firstNode.getOwner();}
var firstOwnerGraph=firstNode.getOwner();do
{if(firstOwnerGraph==null)
{break;}
var secondOwnerGraph=secondNode.getOwner();do
{if(secondOwnerGraph==null)
{break;}
if(secondOwnerGraph==firstOwnerGraph)
{return secondOwnerGraph;}
secondOwnerGraph=secondOwnerGraph.getParent().getOwner();}while(true);firstOwnerGraph=firstOwnerGraph.getParent().getOwner();}while(true);return firstOwnerGraph;};LGraphManager.prototype.calcInclusionTreeDepths=function(graph,depth){if(graph==null&&depth==null){graph=this.rootGraph;depth=1;}
var node;var nodes=graph.getNodes();var s=nodes.length;for(var i=0;i<s;i++)
{node=nodes[i];node.inclusionTreeDepth=depth;if(node.child!=null)
{this.calcInclusionTreeDepths(node.child,depth+1);}}};LGraphManager.prototype.includesInvalidEdge=function()
{var edge;var s=this.edges.length;for(var i=0;i<s;i++)
{edge=this.edges[i];if(this.isOneAncestorOfOther(edge.source,edge.target))
{return true;}}
return false;};module.exports=LGraphManager;},{}],20:[function(_dereq_,module,exports){function LGraphObject(vGraphObject){this.vGraphObject=vGraphObject;}
module.exports=LGraphObject;},{}],21:[function(_dereq_,module,exports){var LGraphObject=_dereq_('./LGraphObject');var Integer=_dereq_('./Integer');var RectangleD=_dereq_('./RectangleD');function LNode(gm,loc,size,vNode){if(size==null&&vNode==null){vNode=loc;}
LGraphObject.call(this,vNode);if(gm.graphManager!=null)
gm=gm.graphManager;this.estimatedSize=Integer.MIN_VALUE;this.inclusionTreeDepth=Integer.MAX_VALUE;this.vGraphObject=vNode;this.edges=[];this.graphManager=gm;if(size!=null&&loc!=null)
this.rect=new RectangleD(loc.x,loc.y,size.width,size.height);else
this.rect=new RectangleD();}
LNode.prototype=Object.create(LGraphObject.prototype);for(var prop in LGraphObject){LNode[prop]=LGraphObject[prop];}
LNode.prototype.getEdges=function()
{return this.edges;};LNode.prototype.getChild=function()
{return this.child;};LNode.prototype.getOwner=function()
{if(this.owner!=null){if(!(this.owner==null||this.owner.getNodes().indexOf(this)>-1)){throw"assert failed";}}
return this.owner;};LNode.prototype.getWidth=function()
{return this.rect.width;};LNode.prototype.setWidth=function(width)
{this.rect.width=width;};LNode.prototype.getHeight=function()
{return this.rect.height;};LNode.prototype.setHeight=function(height)
{this.rect.height=height;};LNode.prototype.getCenterX=function()
{return this.rect.x+this.rect.width/2;};LNode.prototype.getCenterY=function()
{return this.rect.y+this.rect.height/2;};LNode.prototype.getCenter=function()
{return new PointD(this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2);};LNode.prototype.getLocation=function()
{return new PointD(this.rect.x,this.rect.y);};LNode.prototype.getRect=function()
{return this.rect;};LNode.prototype.getDiagonal=function()
{return Math.sqrt(this.rect.width*this.rect.width+
this.rect.height*this.rect.height);};LNode.prototype.setRect=function(upperLeft,dimension)
{this.rect.x=upperLeft.x;this.rect.y=upperLeft.y;this.rect.width=dimension.width;this.rect.height=dimension.height;};LNode.prototype.setCenter=function(cx,cy)
{this.rect.x=cx-this.rect.width/2;this.rect.y=cy-this.rect.height/2;};LNode.prototype.setLocation=function(x,y)
{this.rect.x=x;this.rect.y=y;};LNode.prototype.moveBy=function(dx,dy)
{this.rect.x+=dx;this.rect.y+=dy;};LNode.prototype.getEdgeListToNode=function(to)
{var edgeList=[];var edge;for(var obj in this.edges)
{edge=obj;if(edge.target==to)
{if(edge.source!=this)
throw"Incorrect edge source!";edgeList.push(edge);}}
return edgeList;};LNode.prototype.getEdgesBetween=function(other)
{var edgeList=[];var edge;for(var obj in this.edges)
{edge=this.edges[obj];if(!(edge.source==this||edge.target==this))
throw"Incorrect edge source and/or target";if((edge.target==other)||(edge.source==other))
{edgeList.push(edge);}}
return edgeList;};LNode.prototype.getNeighborsList=function()
{var neighbors=new HashSet();var edge;for(var obj in this.edges)
{edge=this.edges[obj];if(edge.source==this)
{neighbors.add(edge.target);}
else
{if(!edge.target==this)
throw"Incorrect incidency!";neighbors.add(edge.source);}}
return neighbors;};LNode.prototype.withChildren=function()
{var withNeighborsList=[];var childNode;withNeighborsList.push(this);if(this.child!=null)
{var nodes=this.child.getNodes();for(var i=0;i<nodes.length;i++)
{childNode=nodes[i];withNeighborsList=withNeighborsList.concat(childNode.withChildren());}}
return withNeighborsList;};LNode.prototype.getEstimatedSize=function(){if(this.estimatedSize==Integer.MIN_VALUE){throw"assert failed";}
return this.estimatedSize;};LNode.prototype.calcEstimatedSize=function(){if(this.child==null)
{return this.estimatedSize=Math.floor((this.rect.width+this.rect.height)/2);}
else
{this.estimatedSize=this.child.calcEstimatedSize();this.rect.width=this.estimatedSize;this.rect.height=this.estimatedSize;return this.estimatedSize;}};LNode.prototype.scatter=function(){var randomCenterX;var randomCenterY;var minX=-LayoutConstants.INITIAL_WORLD_BOUNDARY;var maxX=LayoutConstants.INITIAL_WORLD_BOUNDARY;randomCenterX=LayoutConstants.WORLD_CENTER_X+
(RandomSeed.nextDouble()*(maxX-minX))+minX;var minY=-LayoutConstants.INITIAL_WORLD_BOUNDARY;var maxY=LayoutConstants.INITIAL_WORLD_BOUNDARY;randomCenterY=LayoutConstants.WORLD_CENTER_Y+
(RandomSeed.nextDouble()*(maxY-minY))+minY;this.rect.x=randomCenterX;this.rect.y=randomCenterY};LNode.prototype.updateBounds=function(){if(this.getChild()==null){throw"assert failed";}
if(this.getChild().getNodes().length!=0)
{var childGraph=this.getChild();childGraph.updateBounds(true);this.rect.x=childGraph.getLeft();this.rect.y=childGraph.getTop();this.setWidth(childGraph.getRight()-childGraph.getLeft()+
2*LayoutConstants.COMPOUND_NODE_MARGIN);this.setHeight(childGraph.getBottom()-childGraph.getTop()+
2*LayoutConstants.COMPOUND_NODE_MARGIN+
LayoutConstants.LABEL_HEIGHT);}};LNode.prototype.getInclusionTreeDepth=function()
{if(this.inclusionTreeDepth==Integer.MAX_VALUE){throw"assert failed";}
return this.inclusionTreeDepth;};LNode.prototype.transform=function(trans)
{var left=this.rect.x;if(left>LayoutConstants.WORLD_BOUNDARY)
{left=LayoutConstants.WORLD_BOUNDARY;}
else if(left<-LayoutConstants.WORLD_BOUNDARY)
{left=-LayoutConstants.WORLD_BOUNDARY;}
var top=this.rect.y;if(top>LayoutConstants.WORLD_BOUNDARY)
{top=LayoutConstants.WORLD_BOUNDARY;}
else if(top<-LayoutConstants.WORLD_BOUNDARY)
{top=-LayoutConstants.WORLD_BOUNDARY;}
var leftTop=new PointD(left,top);var vLeftTop=trans.inverseTransformPoint(leftTop);this.setLocation(vLeftTop.x,vLeftTop.y);};LNode.prototype.getLeft=function()
{return this.rect.x;};LNode.prototype.getRight=function()
{return this.rect.x+this.rect.width;};LNode.prototype.getTop=function()
{return this.rect.y;};LNode.prototype.getBottom=function()
{return this.rect.y+this.rect.height;};LNode.prototype.getParent=function()
{if(this.owner==null)
{return null;}
return this.owner.getParent();};module.exports=LNode;},{"./Integer":16,"./LGraphObject":20,"./RectangleD":27}],22:[function(_dereq_,module,exports){var LayoutConstants=_dereq_('./LayoutConstants');var HashMap=_dereq_('./HashMap');var LGraphManager=_dereq_('./LGraphManager');function Layout(isRemoteUse){this.layoutQuality=LayoutConstants.DEFAULT_QUALITY;this.createBendsAsNeeded=LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;this.incremental=LayoutConstants.DEFAULT_INCREMENTAL;this.animationOnLayout=LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;this.animationDuringLayout=LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;this.animationPeriod=LayoutConstants.DEFAULT_ANIMATION_PERIOD;this.uniformLeafNodeSizes=LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;this.edgeToDummyNodes=new HashMap();this.graphManager=new LGraphManager(this);this.isLayoutFinished=false;this.isSubLayout=false;this.isRemoteUse=false;if(isRemoteUse!=null){this.isRemoteUse=isRemoteUse;}}
Layout.RANDOM_SEED=1;Layout.prototype.getGraphManager=function(){return this.graphManager;};Layout.prototype.getAllNodes=function(){return this.graphManager.getAllNodes();};Layout.prototype.getAllEdges=function(){return this.graphManager.getAllEdges();};Layout.prototype.getAllNodesToApplyGravitation=function(){return this.graphManager.getAllNodesToApplyGravitation();};Layout.prototype.newGraphManager=function(){var gm=new LGraphManager(this);this.graphManager=gm;return gm;};Layout.prototype.newGraph=function(vGraph)
{return new LGraph(null,this.graphManager,vGraph);};Layout.prototype.newNode=function(vNode)
{return new LNode(this.graphManager,vNode);};Layout.prototype.newEdge=function(vEdge)
{return new LEdge(null,null,vEdge);};Layout.prototype.runLayout=function()
{this.isLayoutFinished=false;this.initParameters();var isLayoutSuccessfull;if((this.graphManager.getRoot()==null)||this.graphManager.getRoot().getNodes().length==0||this.graphManager.includesInvalidEdge())
{isLayoutSuccessfull=false;}
else
{var startTime=0;if(!this.isSubLayout)
{startTime=new Date().getTime()}
isLayoutSuccessfull=this.layout();if(!this.isSubLayout)
{var endTime=new Date().getTime();var excTime=endTime-startTime;console.log("Total execution time: "+excTime+" miliseconds.");}}
if(isLayoutSuccessfull)
{if(!this.isSubLayout)
{this.doPostLayout();}}
this.isLayoutFinished=true;return isLayoutSuccessfull;};Layout.prototype.doPostLayout=function()
{this.transform();this.update();};Layout.prototype.update2=function(){if(this.createBendsAsNeeded)
{this.createBendpointsFromDummyNodes();this.graphManager.resetAllEdges();}
if(!this.isRemoteUse)
{var edge;var allEdges=this.graphManager.getAllEdges();for(var i=0;i<allEdges.length;i++)
{edge=allEdges[i];}
var node;var nodes=this.graphManager.getRoot().getNodes();for(var i=0;i<nodes.length;i++)
{node=nodes[i];}
this.update(this.graphManager.getRoot());}};Layout.prototype.update=function(obj){if(obj==null){this.update2();}
else if(obj instanceof LNode){var node=obj;if(node.getChild()!=null)
{var nodes=node.getChild().getNodes();for(var i=0;i<nodes.length;i++)
{update(nodes[i]);}}
if(node.vGraphObject!=null)
{var vNode=node.vGraphObject;vNode.update(node);}}
else if(obj instanceof LEdge){var edge=obj;if(edge.vGraphObject!=null)
{var vEdge=edge.vGraphObject;vEdge.update(edge);}}
else if(obj instanceof LGraph){var graph=obj;if(graph.vGraphObject!=null)
{var vGraph=graph.vGraphObject;vGraph.update(graph);}}};Layout.prototype.initParameters=function(){if(!this.isSubLayout)
{this.layoutQuality=LayoutConstants.DEFAULT_QUALITY;this.animationDuringLayout=LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;this.animationPeriod=LayoutConstants.DEFAULT_ANIMATION_PERIOD;this.animationOnLayout=LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;this.incremental=LayoutConstants.DEFAULT_INCREMENTAL;this.createBendsAsNeeded=LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;this.uniformLeafNodeSizes=LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;}
if(this.animationDuringLayout)
{animationOnLayout=false;}};Layout.prototype.transform=function(newLeftTop){if(newLeftTop==undefined){this.transform(new PointD(0,0));}
else{var trans=new Transform();var leftTop=this.graphManager.getRoot().updateLeftTop();if(leftTop!=null)
{trans.setWorldOrgX(newLeftTop.x);trans.setWorldOrgY(newLeftTop.y);trans.setDeviceOrgX(leftTop.x);trans.setDeviceOrgY(leftTop.y);var nodes=this.getAllNodes();var node;for(var i=0;i<nodes.length;i++)
{node=nodes[i];node.transform(trans);}}}};Layout.prototype.positionNodesRandomly=function(graph){if(graph==undefined){this.positionNodesRandomly(this.getGraphManager().getRoot());this.getGraphManager().getRoot().updateBounds(true);}
else{var lNode;var childGraph;var nodes=graph.getNodes();for(var i=0;i<nodes.length;i++)
{lNode=nodes[i];childGraph=lNode.getChild();if(childGraph==null)
{lNode.scatter();}
else if(childGraph.getNodes().length==0)
{lNode.scatter();}
else
{this.positionNodesRandomly(childGraph);lNode.updateBounds();}}}};Layout.prototype.getFlatForest=function()
{var flatForest=[];var isForest=true;var allNodes=this.graphManager.getRoot().getNodes();var isFlat=true;for(var i=0;i<allNodes.length;i++)
{if(allNodes[i].getChild()!=null)
{isFlat=false;}}
if(!isFlat)
{return flatForest;}
var visited=new HashSet();var toBeVisited=[];var parents=new HashMap();var unProcessedNodes=[];unProcessedNodes=unProcessedNodes.concat(allNodes);while(unProcessedNodes.length>0&&isForest)
{toBeVisited.push(unProcessedNodes[0]);while(toBeVisited.length>0&&isForest)
{var currentNode=toBeVisited[0];toBeVisited.splice(0,1);visited.add(currentNode);var neighborEdges=currentNode.getEdges();for(var i=0;i<neighborEdges.length;i++)
{var currentNeighbor=neighborEdges[i].getOtherEnd(currentNode);if(parents.get(currentNode)!=currentNeighbor)
{if(!visited.contains(currentNeighbor))
{toBeVisited.push(currentNeighbor);parents.put(currentNeighbor,currentNode);}
else
{isForest=false;break;}}}}
if(!isForest)
{flatForest=[];}
else
{var temp=[];visited.addAllTo(temp);flatForest.push(temp);for(var i=0;i<temp.length;i++){var value=temp[i];var index=unProcessedNodes.indexOf(value);if(index>-1){unProcessedNodes.splice(index,1);}}
visited=new HashSet();parents=new HashMap();}}
return flatForest;};Layout.prototype.createDummyNodesForBendpoints=function(edge)
{var dummyNodes=[];var prev=edge.source;var graph=this.graphManager.calcLowestCommonAncestor(edge.source,edge.target);for(var i=0;i<edge.bendpoints.length;i++)
{var dummyNode=this.newNode(null);dummyNode.setRect(new Point(0,0),new Dimension(1,1));graph.add(dummyNode);var dummyEdge=this.newEdge(null);this.graphManager.add(dummyEdge,prev,dummyNode);dummyNodes.add(dummyNode);prev=dummyNode;}
var dummyEdge=this.newEdge(null);this.graphManager.add(dummyEdge,prev,edge.target);this.edgeToDummyNodes.put(edge,dummyNodes);if(edge.isInterGraph())
{this.graphManager.remove(edge);}
else
{graph.remove(edge);}
return dummyNodes;};Layout.prototype.createBendpointsFromDummyNodes=function()
{var edges=[];edges=edges.concat(this.graphManager.getAllEdges());edges=this.edgeToDummyNodes.keySet().concat(edges);for(var k=0;k<edges.length;k++)
{var lEdge=edges[k];if(lEdge.bendpoints.length>0)
{var path=this.edgeToDummyNodes.get(lEdge);for(var i=0;i<path.length;i++)
{var dummyNode=path[i];var p=new PointD(dummyNode.getCenterX(),dummyNode.getCenterY());var ebp=lEdge.bendpoints.get(i);ebp.x=p.x;ebp.y=p.y;dummyNode.getOwner().remove(dummyNode);}
this.graphManager.add(lEdge,lEdge.source,lEdge.target);}}};Layout.transform=function(sliderValue,defaultValue,minDiv,maxMul){if(minDiv!=undefined&&maxMul!=undefined){var value=defaultValue;if(sliderValue<=50)
{var minValue=defaultValue/minDiv;value-=((defaultValue-minValue)/50)*(50-sliderValue);}
else
{var maxValue=defaultValue*maxMul;value+=((maxValue-defaultValue)/50)*(sliderValue-50);}
return value;}
else{var a,b;if(sliderValue<=50)
{a=9.0*defaultValue/500.0;b=defaultValue/10.0;}
else
{a=9.0*defaultValue/50.0;b=-8*defaultValue;}
return(a*sliderValue+b);}};Layout.findCenterOfTree=function(nodes)
{var list=[];list=list.concat(nodes);var removedNodes=[];var remainingDegrees=new HashMap();var foundCenter=false;var centerNode=null;if(list.length==1||list.length==2)
{foundCenter=true;centerNode=list[0];}
for(var i=0;i<list.length;i++)
{var node=list[i];var degree=node.getNeighborsList().size();remainingDegrees.put(node,node.getNeighborsList().size());if(degree==1)
{removedNodes.push(node);}}
var tempList=[];tempList=tempList.concat(removedNodes);while(!foundCenter)
{var tempList2=[];tempList2=tempList2.concat(tempList);tempList=[];for(var i=0;i<list.length;i++)
{var node=list[i];var index=list.indexOf(node);if(index>=0){list.splice(index,1);}
var neighbours=node.getNeighborsList();for(var j in neighbours.set)
{var neighbour=neighbours.set[j];if(removedNodes.indexOf(neighbour)<0)
{var otherDegree=remainingDegrees.get(neighbour);var newDegree=otherDegree-1;if(newDegree==1)
{tempList.push(neighbour);}
remainingDegrees.put(neighbour,newDegree);}}}
removedNodes=removedNodes.concat(tempList);if(list.length==1||list.length==2)
{foundCenter=true;centerNode=list[0];}}
return centerNode;};Layout.prototype.setGraphManager=function(gm)
{this.graphManager=gm;};module.exports=Layout;},{"./HashMap":12,"./LGraphManager":19,"./LayoutConstants":23}],23:[function(_dereq_,module,exports){function LayoutConstants(){}
LayoutConstants.PROOF_QUALITY=0;LayoutConstants.DEFAULT_QUALITY=1;LayoutConstants.DRAFT_QUALITY=2;LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED=false;LayoutConstants.DEFAULT_INCREMENTAL=false;LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT=true;LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT=false;LayoutConstants.DEFAULT_ANIMATION_PERIOD=50;LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES=false;LayoutConstants.DEFAULT_GRAPH_MARGIN=10;LayoutConstants.LABEL_HEIGHT=20;LayoutConstants.COMPOUND_NODE_MARGIN=5;LayoutConstants.SIMPLE_NODE_SIZE=40;LayoutConstants.SIMPLE_NODE_HALF_SIZE=LayoutConstants.SIMPLE_NODE_SIZE/2;LayoutConstants.EMPTY_COMPOUND_NODE_SIZE=40;LayoutConstants.MIN_EDGE_LENGTH=1;LayoutConstants.WORLD_BOUNDARY=1000000;LayoutConstants.INITIAL_WORLD_BOUNDARY=LayoutConstants.WORLD_BOUNDARY/1000;LayoutConstants.WORLD_CENTER_X=1200;LayoutConstants.WORLD_CENTER_Y=900;module.exports=LayoutConstants;},{}],24:[function(_dereq_,module,exports){function Point(x,y,p){this.x=null;this.y=null;if(x==null&&y==null&&p==null){this.x=0;this.y=0;}
else if(typeof x=='number'&&typeof y=='number'&&p==null){this.x=x;this.y=y;}
else if(x.constructor.name=='Point'&&y==null&&p==null){p=x;this.x=p.x;this.y=p.y;}}
Point.prototype.getX=function(){return this.x;}
Point.prototype.getY=function(){return this.y;}
Point.prototype.getLocation=function(){return new Point(this.x,this.y);}
Point.prototype.setLocation=function(x,y,p){if(x.constructor.name=='Point'&&y==null&&p==null){p=x;this.setLocation(p.x,p.y);}
else if(typeof x=='number'&&typeof y=='number'&&p==null){if(parseInt(x)==x&&parseInt(y)==y){this.move(x,y);}
else{this.x=Math.floor(x+0.5);this.y=Math.floor(y+0.5);}}}
Point.prototype.move=function(x,y){this.x=x;this.y=y;}
Point.prototype.translate=function(dx,dy){this.x+=dx;this.y+=dy;}
Point.prototype.equals=function(obj){if(obj.constructor.name=="Point"){var pt=obj;return(this.x==pt.x)&&(this.y==pt.y);}
return this==obj;}
Point.prototype.toString=function(){return new Point().constructor.name+"[x="+this.x+",y="+this.y+"]";}
module.exports=Point;},{}],25:[function(_dereq_,module,exports){function PointD(x,y){if(x==null&&y==null){this.x=0;this.y=0;}else{this.x=x;this.y=y;}}
PointD.prototype.getX=function()
{return this.x;};PointD.prototype.getY=function()
{return this.y;};PointD.prototype.setX=function(x)
{this.x=x;};PointD.prototype.setY=function(y)
{this.y=y;};PointD.prototype.getDifference=function(pt)
{return new DimensionD(this.x-pt.x,this.y-pt.y);};PointD.prototype.getCopy=function()
{return new PointD(this.x,this.y);};PointD.prototype.translate=function(dim)
{this.x+=dim.width;this.y+=dim.height;return this;};module.exports=PointD;},{}],26:[function(_dereq_,module,exports){function RandomSeed(){}
RandomSeed.seed=1;RandomSeed.x=0;RandomSeed.nextDouble=function(){RandomSeed.x=Math.sin(RandomSeed.seed++)*10000;return RandomSeed.x-Math.floor(RandomSeed.x);};module.exports=RandomSeed;},{}],27:[function(_dereq_,module,exports){function RectangleD(x,y,width,height){this.x=0;this.y=0;this.width=0;this.height=0;if(x!=null&&y!=null&&width!=null&&height!=null){this.x=x;this.y=y;this.width=width;this.height=height;}}
RectangleD.prototype.getX=function()
{return this.x;};RectangleD.prototype.setX=function(x)
{this.x=x;};RectangleD.prototype.getY=function()
{return this.y;};RectangleD.prototype.setY=function(y)
{this.y=y;};RectangleD.prototype.getWidth=function()
{return this.width;};RectangleD.prototype.setWidth=function(width)
{this.width=width;};RectangleD.prototype.getHeight=function()
{return this.height;};RectangleD.prototype.setHeight=function(height)
{this.height=height;};RectangleD.prototype.getRight=function()
{return this.x+this.width;};RectangleD.prototype.getBottom=function()
{return this.y+this.height;};RectangleD.prototype.intersects=function(a)
{if(this.getRight()<a.x)
{return false;}
if(this.getBottom()<a.y)
{return false;}
if(a.getRight()<this.x)
{return false;}
if(a.getBottom()<this.y)
{return false;}
return true;};RectangleD.prototype.getCenterX=function()
{return this.x+this.width/2;};RectangleD.prototype.getMinX=function()
{return this.getX();};RectangleD.prototype.getMaxX=function()
{return this.getX()+this.width;};RectangleD.prototype.getCenterY=function()
{return this.y+this.height/2;};RectangleD.prototype.getMinY=function()
{return this.getY();};RectangleD.prototype.getMaxY=function()
{return this.getY()+this.height;};RectangleD.prototype.getWidthHalf=function()
{return this.width/2;};RectangleD.prototype.getHeightHalf=function()
{return this.height/2;};module.exports=RectangleD;},{}],28:[function(_dereq_,module,exports){function Transform(x,y){this.lworldOrgX=0.0;this.lworldOrgY=0.0;this.ldeviceOrgX=0.0;this.ldeviceOrgY=0.0;this.lworldExtX=1.0;this.lworldExtY=1.0;this.ldeviceExtX=1.0;this.ldeviceExtY=1.0;}
Transform.prototype.getWorldOrgX=function()
{return this.lworldOrgX;}
Transform.prototype.setWorldOrgX=function(wox)
{this.lworldOrgX=wox;}
Transform.prototype.getWorldOrgY=function()
{return this.lworldOrgY;}
Transform.prototype.setWorldOrgY=function(woy)
{this.lworldOrgY=woy;}
Transform.prototype.getWorldExtX=function()
{return this.lworldExtX;}
Transform.prototype.setWorldExtX=function(wex)
{this.lworldExtX=wex;}
Transform.prototype.getWorldExtY=function()
{return this.lworldExtY;}
Transform.prototype.setWorldExtY=function(wey)
{this.lworldExtY=wey;}
Transform.prototype.getDeviceOrgX=function()
{return this.ldeviceOrgX;}
Transform.prototype.setDeviceOrgX=function(dox)
{this.ldeviceOrgX=dox;}
Transform.prototype.getDeviceOrgY=function()
{return this.ldeviceOrgY;}
Transform.prototype.setDeviceOrgY=function(doy)
{this.ldeviceOrgY=doy;}
Transform.prototype.getDeviceExtX=function()
{return this.ldeviceExtX;}
Transform.prototype.setDeviceExtX=function(dex)
{this.ldeviceExtX=dex;}
Transform.prototype.getDeviceExtY=function()
{return this.ldeviceExtY;}
Transform.prototype.setDeviceExtY=function(dey)
{this.ldeviceExtY=dey;}
Transform.prototype.transformX=function(x)
{var xDevice=0.0;var worldExtX=this.lworldExtX;if(worldExtX!=0.0)
{xDevice=this.ldeviceOrgX+
((x-this.lworldOrgX)*this.ldeviceExtX/worldExtX);}
return xDevice;}
Transform.prototype.transformY=function(y)
{var yDevice=0.0;var worldExtY=this.lworldExtY;if(worldExtY!=0.0)
{yDevice=this.ldeviceOrgY+
((y-this.lworldOrgY)*this.ldeviceExtY/worldExtY);}
return yDevice;}
Transform.prototype.inverseTransformX=function(x)
{var xWorld=0.0;var deviceExtX=this.ldeviceExtX;if(deviceExtX!=0.0)
{xWorld=this.lworldOrgX+
((x-this.ldeviceOrgX)*this.lworldExtX/deviceExtX);}
return xWorld;}
Transform.prototype.inverseTransformY=function(y)
{var yWorld=0.0;var deviceExtY=this.ldeviceExtY;if(deviceExtY!=0.0)
{yWorld=this.lworldOrgY+
((y-this.ldeviceOrgY)*this.lworldExtY/deviceExtY);}
return yWorld;}
Transform.prototype.inverseTransformPoint=function(inPoint)
{var outPoint=new PointD(this.inverseTransformX(inPoint.x),this.inverseTransformY(inPoint.y));return outPoint;}
module.exports=Transform;},{}],29:[function(_dereq_,module,exports){function UniqueIDGeneretor(){}
UniqueIDGeneretor.lastID=0;UniqueIDGeneretor.createID=function(obj){if(UniqueIDGeneretor.isPrimitive(obj)){return obj;}
if(obj.uniqueID!=null){return obj.uniqueID;}
obj.uniqueID=UniqueIDGeneretor.getString();UniqueIDGeneretor.lastID++;return obj.uniqueID;}
UniqueIDGeneretor.getString=function(id){if(id==null)
id=UniqueIDGeneretor.lastID;return"Object#"+id+"";}
UniqueIDGeneretor.isPrimitive=function(arg){var type=typeof arg;return arg==null||(type!="object"&&type!="function");}
module.exports=UniqueIDGeneretor;},{}],30:[function(_dereq_,module,exports){'use strict';var Thread;var DimensionD=_dereq_('./DimensionD');var HashMap=_dereq_('./HashMap');var HashSet=_dereq_('./HashSet');var IGeometry=_dereq_('./IGeometry');var IMath=_dereq_('./IMath');var Integer=_dereq_('./Integer');var Point=_dereq_('./Point');var PointD=_dereq_('./PointD');var RandomSeed=_dereq_('./RandomSeed');var RectangleD=_dereq_('./RectangleD');var Transform=_dereq_('./Transform');var UniqueIDGeneretor=_dereq_('./UniqueIDGeneretor');var LGraphObject=_dereq_('./LGraphObject');var LGraph=_dereq_('./LGraph');var LEdge=_dereq_('./LEdge');var LGraphManager=_dereq_('./LGraphManager');var LNode=_dereq_('./LNode');var Layout=_dereq_('./Layout');var LayoutConstants=_dereq_('./LayoutConstants');var FDLayout=_dereq_('./FDLayout');var FDLayoutConstants=_dereq_('./FDLayoutConstants');var FDLayoutEdge=_dereq_('./FDLayoutEdge');var FDLayoutNode=_dereq_('./FDLayoutNode');var CoSEConstants=_dereq_('./CoSEConstants');var CoSEEdge=_dereq_('./CoSEEdge');var CoSEGraph=_dereq_('./CoSEGraph');var CoSEGraphManager=_dereq_('./CoSEGraphManager');var CoSELayout=_dereq_('./CoSELayout');var CoSENode=_dereq_('./CoSENode');_CoSELayout.idToLNode={};_CoSELayout.toBeTiled={};var defaults={ready:function(){},stop:function(){},fit:true,padding:10,randomize:true,nodeRepulsion:4500,idealEdgeLength:50,edgeElasticity:0.45,nestingFactor:0.1,gravity:0.25,numIter:2500,tile:true,animate:'end',tilingPaddingVertical:10,tilingPaddingHorizontal:10,gravityRangeCompound:1.5,gravityCompound:1.0,gravityRange:3.8};function extend(defaults,options){var obj={};for(var i in defaults){obj[i]=defaults[i];}
for(var i in options){obj[i]=options[i];}
return obj;};_CoSELayout.layout=new CoSELayout();function _CoSELayout(options){this.options=extend(defaults,options);_CoSELayout.getUserOptions(this.options);}
_CoSELayout.getUserOptions=function(options){if(options.nodeRepulsion!=null)
CoSEConstants.DEFAULT_REPULSION_STRENGTH=FDLayoutConstants.DEFAULT_REPULSION_STRENGTH=options.nodeRepulsion;if(options.idealEdgeLength!=null)
CoSEConstants.DEFAULT_EDGE_LENGTH=FDLayoutConstants.DEFAULT_EDGE_LENGTH=options.idealEdgeLength;if(options.edgeElasticity!=null)
CoSEConstants.DEFAULT_SPRING_STRENGTH=FDLayoutConstants.DEFAULT_SPRING_STRENGTH=options.edgeElasticity;if(options.nestingFactor!=null)
CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR=options.nestingFactor;if(options.gravity!=null)
CoSEConstants.DEFAULT_GRAVITY_STRENGTH=FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH=options.gravity;if(options.numIter!=null)
CoSEConstants.MAX_ITERATIONS=FDLayoutConstants.MAX_ITERATIONS=options.numIter;if(options.gravityRange!=null)
CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR=FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR=options.gravityRange;if(options.gravityCompound!=null)
CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH=FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH=options.gravityCompound;if(options.gravityRangeCompound!=null)
CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR=options.gravityRangeCompound;CoSEConstants.DEFAULT_INCREMENTAL=FDLayoutConstants.DEFAULT_INCREMENTAL=LayoutConstants.DEFAULT_INCREMENTAL=!(options.randomize);CoSEConstants.ANIMATE=FDLayoutConstants.ANIMATE=options.animate;};_CoSELayout.prototype.run=function(){var layout=this;_CoSELayout.idToLNode={};_CoSELayout.toBeTiled={};_CoSELayout.layout=new CoSELayout();this.cy=this.options.cy;var after=this;this.cy.trigger('layoutstart');var gm=_CoSELayout.layout.newGraphManager();this.gm=gm;var nodes=this.options.eles.nodes();var edges=this.options.eles.edges();this.root=gm.addRoot();if(!this.options.tile){this.processChildrenList(this.root,_CoSELayout.getTopMostNodes(nodes));}
else{var memberGroups=this.groupZeroDegreeMembers();var tiledMemberPack=this.clearCompounds(this.options);var tiledZeroDegreeNodes=this.clearZeroDegreeMembers(memberGroups);}
for(var i=0;i<edges.length;i++){var edge=edges[i];var sourceNode=_CoSELayout.idToLNode[edge.data("source")];var targetNode=_CoSELayout.idToLNode[edge.data("target")];var e1=gm.add(_CoSELayout.layout.newEdge(),sourceNode,targetNode);e1.id=edge.id();}
var t1=layout.thread;if(!t1||t1.stopped()){t1=layout.thread=Thread();t1.require(DimensionD,'DimensionD');t1.require(HashMap,'HashMap');t1.require(HashSet,'HashSet');t1.require(IGeometry,'IGeometry');t1.require(IMath,'IMath');t1.require(Integer,'Integer');t1.require(Point,'Point');t1.require(PointD,'PointD');t1.require(RandomSeed,'RandomSeed');t1.require(RectangleD,'RectangleD');t1.require(Transform,'Transform');t1.require(UniqueIDGeneretor,'UniqueIDGeneretor');t1.require(LGraphObject,'LGraphObject');t1.require(LGraph,'LGraph');t1.require(LEdge,'LEdge');t1.require(LGraphManager,'LGraphManager');t1.require(LNode,'LNode');t1.require(Layout,'Layout');t1.require(LayoutConstants,'LayoutConstants');t1.require(FDLayout,'FDLayout');t1.require(FDLayoutConstants,'FDLayoutConstants');t1.require(FDLayoutEdge,'FDLayoutEdge');t1.require(FDLayoutNode,'FDLayoutNode');t1.require(CoSEConstants,'CoSEConstants');t1.require(CoSEEdge,'CoSEEdge');t1.require(CoSEGraph,'CoSEGraph');t1.require(CoSEGraphManager,'CoSEGraphManager');t1.require(CoSELayout,'CoSELayout');t1.require(CoSENode,'CoSENode');}
var nodes=this.options.eles.nodes();var edges=this.options.eles.edges();var pData={'nodes':[],'edges':[]};var nodeIdMap={};for(var i=0;i<nodes.length;i++){nodeIdMap[nodes[i].id()]=true;}
var lnodes=gm.getAllNodes();for(var i=0;i<lnodes.length;i++){var lnode=lnodes[i];var nodeId=lnode.id;var cyNode=this.options.cy.getElementById(nodeId);var parentId=cyNode.data('parent');parentId=nodeIdMap[parentId]?parentId:undefined;var w=lnode.rect.width;var posX=lnode.rect.x;var posY=lnode.rect.y;var h=lnode.rect.height;var dummy_parent_id=cyNode.data('dummy_parent_id');pData['nodes'].push({id:nodeId,pid:parentId,x:posX,y:posY,width:w,height:h,dummy_parent_id:dummy_parent_id});}
var ledges=gm.getAllEdges();for(var i=0;i<ledges.length;i++){var ledge=ledges[i];var edgeId=ledge.id;var cyEdge=this.options.cy.getElementById(edgeId);var srcNodeId=cyEdge.source().id();var tgtNodeId=cyEdge.target().id();pData['edges'].push({id:edgeId,source:srcNodeId,target:tgtNodeId});}
var ready=false;t1.pass(pData).run(function(pData){var log=function(msg){broadcast({log:msg});};log("start thread");var layout_t=new CoSELayout();var gm_t=layout_t.newGraphManager();var ngraph=gm_t.layout.newGraph();var nnode=gm_t.layout.newNode(null);var root=gm_t.add(ngraph,nnode);root.graphManager=gm_t;gm_t.setRootGraph(root);var root_t=gm_t.rootGraph;var orphans_t=[];var idToLNode_t={};var childrenMap={};var result={};var processNodes=function(parent,children){var size=children.length;for(var i=0;i<size;i++){var theChild=children[i];var children_of_children=childrenMap[theChild.id];var theNode;if(theChild.width!=null&&theChild.height!=null){theNode=parent.add(new CoSENode(gm_t,new PointD(theChild.x,theChild.y),new DimensionD(parseFloat(theChild.width),parseFloat(theChild.height))));}
else{theNode=parent.add(new CoSENode(gm_t));}
theNode.id=theChild.id;idToLNode_t[theChild.id]=theNode;if(isNaN(theNode.rect.x)){theNode.rect.x=0;}
if(isNaN(theNode.rect.y)){theNode.rect.y=0;}
if(children_of_children!=null&&children_of_children.length>0){var theNewGraph;theNewGraph=layout_t.getGraphManager().add(layout_t.newGraph(),theNode);theNewGraph.graphManager=gm_t;processNodes(theNewGraph,children_of_children);}}}
var nodes=pData.nodes;for(var i=0;i<nodes.length;i++){var theNode=nodes[i];var p_id=theNode.pid;if(p_id!=null){if(childrenMap[p_id]==null){childrenMap[p_id]=[];}
childrenMap[p_id].push(theNode);}
else{orphans_t.push(theNode);}}
processNodes(root_t,orphans_t);var edges=pData.edges;for(var i=0;i<edges.length;i++){var edge=edges[i];var sourceNode=idToLNode_t[edge.source];var targetNode=idToLNode_t[edge.target];var e1=gm_t.add(layout_t.newEdge(),sourceNode,targetNode);}
layout_t.runLayout();for(var id in idToLNode_t){var lNode=idToLNode_t[id];var rect=lNode.rect;result[id]={id:id,x:rect.x,y:rect.y,w:rect.width,h:rect.height};}
var seeds={};seeds.rsSeed=RandomSeed.seed;seeds.rsX=RandomSeed.x;var pass={result:result,seeds:seeds}
return pass;}).then(function(pass){var result=pass.result;var seeds=pass.seeds;RandomSeed.seed=seeds.rsSeed;RandomSeed.x=seeds.rsX;for(var id in result){var lNode=_CoSELayout.idToLNode[id];var node=result[id];lNode.rect.x=node.x;lNode.rect.y=node.y;lNode.rect.width=node.w;lNode.rect.height=node.h;}
if(after.options.tile){after.repopulateZeroDegreeMembers(tiledZeroDegreeNodes);after.repopulateCompounds(tiledMemberPack);after.options.eles.nodes().updateCompoundBounds();}
var getPositions=function(i,ele){var theId=ele.data('id');var lNode=_CoSELayout.idToLNode[theId];return{x:lNode.getRect().getCenterX(),y:lNode.getRect().getCenterY()};};if(after.options.animate!=='during'){after.options.eles.nodes().layoutPositions(after,after.options,getPositions);}
else{after.options.eles.nodes().positions(getPositions);if(after.options.fit)
after.options.cy.fit(after.options.eles.nodes(),after.options.padding);if(!ready){after.cy.one('layoutready',after.options.ready);after.cy.trigger('layoutready');}
after.cy.one('layoutstop',after.options.stop);after.cy.trigger('layoutstop');}
t1.stop();after.options.eles.nodes().removeData('dummy_parent_id');});t1.on('message',function(e){var logMsg=e.message.log;if(logMsg!=null){console.log('Thread log: '+logMsg);return;}
var pData=e.message.pData;if(pData!=null){after.options.eles.nodes().positions(function(i,ele){if(ele.data('dummy_parent_id')){return{x:pData[ele.data('dummy_parent_id')].x,y:pData[ele.data('dummy_parent_id')].y};}
var theId=ele.data('id');var pNode=pData[theId];var temp=this;while(pNode==null){temp=temp.parent()[0];pNode=pData[temp.id()];pData[theId]=pNode;}
return{x:pNode.x,y:pNode.y};});if(after.options.fit)
after.options.cy.fit(after.options.eles.nodes(),after.options.padding);if(!ready){ready=true;after.one('layoutready',after.options.ready);after.trigger({type:'layoutready',layout:after});}
return;}});return this;};_CoSELayout.getTopMostNodes=function(nodes){var nodesMap={};for(var i=0;i<nodes.length;i++){nodesMap[nodes[i].id()]=true;}
var roots=nodes.filter(function(i,ele){var parent=ele.parent()[0];while(parent!=null){if(nodesMap[parent.id()]){return false;}
parent=parent.parent()[0];}
return true;});return roots;};_CoSELayout.prototype.getToBeTiled=function(node){var id=node.data("id");if(_CoSELayout.toBeTiled[id]!=null){return _CoSELayout.toBeTiled[id];}
var children=node.children();if(children==null||children.length==0){_CoSELayout.toBeTiled[id]=false;return false;}
for(var i=0;i<children.length;i++){var theChild=children[i];if(this.getNodeDegree(theChild)>0){_CoSELayout.toBeTiled[id]=false;return false;}
if(theChild.children()==null||theChild.children().length==0){_CoSELayout.toBeTiled[theChild.data("id")]=false;continue;}
if(!this.getToBeTiled(theChild)){_CoSELayout.toBeTiled[id]=false;return false;}}
_CoSELayout.toBeTiled[id]=true;return true;};_CoSELayout.prototype.getNodeDegree=function(node){var id=node.id();var edges=this.options.eles.edges().filter(function(i,ele){var source=ele.data('source');var target=ele.data('target');if(source!=target&&(source==id||target==id)){return true;}});return edges.length;};_CoSELayout.prototype.getNodeDegreeWithChildren=function(node){var degree=this.getNodeDegree(node);var children=node.children();for(var i=0;i<children.length;i++){var child=children[i];degree+=this.getNodeDegreeWithChildren(child);}
return degree;};_CoSELayout.prototype.groupZeroDegreeMembers=function(){var tempMemberGroups=[];var memberGroups=[];var self=this;var parentMap={};for(var i=0;i<this.options.eles.nodes().length;i++){parentMap[this.options.eles.nodes()[i].id()]=true;}
var zeroDegree=this.options.eles.nodes().filter(function(i,ele){var pid=ele.data('parent');if(pid!=undefined&&!parentMap[pid]){pid=undefined;}
if(self.getNodeDegreeWithChildren(ele)==0&&(pid==undefined||(pid!=undefined&&!self.getToBeTiled(ele.parent()[0]))))
return true;else
return false;});for(var i=0;i<zeroDegree.length;i++)
{var node=zeroDegree[i];var p_id=node.parent().id();if(p_id!=undefined&&!parentMap[p_id]){p_id=undefined;}
if(typeof tempMemberGroups[p_id]==="undefined")
tempMemberGroups[p_id]=[];tempMemberGroups[p_id]=tempMemberGroups[p_id].concat(node);}
for(var p_id in tempMemberGroups){if(tempMemberGroups[p_id].length>1){var dummyCompoundId="DummyCompound_"+p_id;memberGroups[dummyCompoundId]=tempMemberGroups[p_id];if(this.options.cy.getElementById(dummyCompoundId).empty()){this.options.cy.add({group:"nodes",data:{id:dummyCompoundId,parent:p_id}});var dummy=this.options.cy.nodes()[this.options.cy.nodes().length-1];this.options.eles=this.options.eles.union(dummy);dummy.hide();for(var i=0;i<tempMemberGroups[p_id].length;i++){if(i==0){dummy.data('tempchildren',[]);}
var node=tempMemberGroups[p_id][i];node.data('dummy_parent_id',dummyCompoundId);this.options.cy.add({group:"nodes",data:{parent:dummyCompoundId,width:node.width(),height:node.height()}});var tempchild=this.options.cy.nodes()[this.options.cy.nodes().length-1];tempchild.hide();tempchild.css('width',tempchild.data('width'));tempchild.css('height',tempchild.data('height'));tempchild.width();dummy.data('tempchildren').push(tempchild);}}}}
return memberGroups;};_CoSELayout.prototype.performDFSOnCompounds=function(options){var compoundOrder=[];var roots=_CoSELayout.getTopMostNodes(this.options.eles.nodes());this.fillCompexOrderByDFS(compoundOrder,roots);return compoundOrder;};_CoSELayout.prototype.fillCompexOrderByDFS=function(compoundOrder,children){for(var i=0;i<children.length;i++){var child=children[i];this.fillCompexOrderByDFS(compoundOrder,child.children());if(this.getToBeTiled(child)){compoundOrder.push(child);}}};_CoSELayout.prototype.clearCompounds=function(options){var childGraphMap=[];var compoundOrder=this.performDFSOnCompounds(options);_CoSELayout.compoundOrder=compoundOrder;this.processChildrenList(this.root,_CoSELayout.getTopMostNodes(this.options.eles.nodes()));for(var i=0;i<compoundOrder.length;i++){var lCompoundNode=_CoSELayout.idToLNode[compoundOrder[i].id()];childGraphMap[compoundOrder[i].id()]=compoundOrder[i].children();lCompoundNode.child=null;}
var tiledMemberPack=this.tileCompoundMembers(childGraphMap);return tiledMemberPack;};_CoSELayout.prototype.clearZeroDegreeMembers=function(memberGroups){var tiledZeroDegreePack=[];for(var id in memberGroups){var compoundNode=_CoSELayout.idToLNode[id];tiledZeroDegreePack[id]=this.tileNodes(memberGroups[id]);compoundNode.rect.width=tiledZeroDegreePack[id].width;compoundNode.rect.height=tiledZeroDegreePack[id].height;}
return tiledZeroDegreePack;};_CoSELayout.prototype.repopulateCompounds=function(tiledMemberPack){for(var i=_CoSELayout.compoundOrder.length-1;i>=0;i--){var id=_CoSELayout.compoundOrder[i].id();var lCompoundNode=_CoSELayout.idToLNode[id];var horizontalMargin=parseInt(_CoSELayout.compoundOrder[i].css('padding-left'));var verticalMargin=parseInt(_CoSELayout.compoundOrder[i].css('padding-top'));this.adjustLocations(tiledMemberPack[id],lCompoundNode.rect.x,lCompoundNode.rect.y,horizontalMargin,verticalMargin);}};_CoSELayout.prototype.repopulateZeroDegreeMembers=function(tiledPack){for(var i in tiledPack){var compound=this.cy.getElementById(i);var compoundNode=_CoSELayout.idToLNode[i];var horizontalMargin=parseInt(compound.css('padding-left'));var verticalMargin=parseInt(compound.css('padding-top'));this.adjustLocations(tiledPack[i],compoundNode.rect.x,compoundNode.rect.y,horizontalMargin,verticalMargin);var tempchildren=compound.data('tempchildren');for(var i=0;i<tempchildren.length;i++){tempchildren[i].remove();}
compound.remove();}};_CoSELayout.prototype.adjustLocations=function(organization,x,y,compoundHorizontalMargin,compoundVerticalMargin){x+=compoundHorizontalMargin;y+=compoundVerticalMargin;var left=x;for(var i=0;i<organization.rows.length;i++){var row=organization.rows[i];x=left;var maxHeight=0;for(var j=0;j<row.length;j++){var lnode=row[j];var node=this.cy.getElementById(lnode.id);lnode.rect.x=x;lnode.rect.y=y;x+=lnode.rect.width+organization.horizontalPadding;if(lnode.rect.height>maxHeight)
maxHeight=lnode.rect.height;}
y+=maxHeight+organization.verticalPadding;}};_CoSELayout.prototype.tileCompoundMembers=function(childGraphMap){var tiledMemberPack=[];for(var id in childGraphMap){var compoundNode=_CoSELayout.idToLNode[id];tiledMemberPack[id]=this.tileNodes(childGraphMap[id]);compoundNode.rect.width=tiledMemberPack[id].width+20;compoundNode.rect.height=tiledMemberPack[id].height+20;}
return tiledMemberPack;};_CoSELayout.prototype.tileNodes=function(nodes){var self=this;var verticalPadding=typeof self.options.tilingPaddingVertical==='function'?self.options.tilingPaddingVertical.call():self.options.tilingPaddingVertical;var horizontalPadding=typeof self.options.tilingPaddingHorizontal==='function'?self.options.tilingPaddingHorizontal.call():self.options.tilingPaddingHorizontal;var organization={rows:[],rowWidth:[],rowHeight:[],width:20,height:20,verticalPadding:verticalPadding,horizontalPadding:horizontalPadding};var layoutNodes=[];for(var i=0;i<nodes.length;i++){var node=nodes[i];var lNode=_CoSELayout.idToLNode[node.id()];if(!node.data('dummy_parent_id')){var owner=lNode.owner;owner.remove(lNode);this.gm.resetAllNodes();this.gm.getAllNodes();}
layoutNodes.push(lNode);}
layoutNodes.sort(function(n1,n2){if(n1.rect.width*n1.rect.height>n2.rect.width*n2.rect.height)
return-1;if(n1.rect.width*n1.rect.height<n2.rect.width*n2.rect.height)
return 1;return 0;});for(var i=0;i<layoutNodes.length;i++){var lNode=layoutNodes[i];var cyNode=this.cy.getElementById(lNode.id).parent()[0];var minWidth=0;if(cyNode){minWidth=parseInt(cyNode.css('padding-left'))+parseInt(cyNode.css('padding-right'));}
if(organization.rows.length==0){this.insertNodeToRow(organization,lNode,0,minWidth);}
else if(this.canAddHorizontal(organization,lNode.rect.width,lNode.rect.height)){this.insertNodeToRow(organization,lNode,this.getShortestRowIndex(organization),minWidth);}
else{this.insertNodeToRow(organization,lNode,organization.rows.length,minWidth);}
this.shiftToLastRow(organization);}
return organization;};_CoSELayout.prototype.insertNodeToRow=function(organization,node,rowIndex,minWidth){var minCompoundSize=minWidth;if(rowIndex==organization.rows.length){var secondDimension=[];organization.rows.push(secondDimension);organization.rowWidth.push(minCompoundSize);organization.rowHeight.push(0);}
var w=organization.rowWidth[rowIndex]+node.rect.width;if(organization.rows[rowIndex].length>0){w+=organization.horizontalPadding;}
organization.rowWidth[rowIndex]=w;if(organization.width<w){organization.width=w;}
var h=node.rect.height;if(rowIndex>0)
h+=organization.verticalPadding;var extraHeight=0;if(h>organization.rowHeight[rowIndex]){extraHeight=organization.rowHeight[rowIndex];organization.rowHeight[rowIndex]=h;extraHeight=organization.rowHeight[rowIndex]-extraHeight;}
organization.height+=extraHeight;organization.rows[rowIndex].push(node);};_CoSELayout.prototype.getShortestRowIndex=function(organization){var r=-1;var min=Number.MAX_VALUE;for(var i=0;i<organization.rows.length;i++){if(organization.rowWidth[i]<min){r=i;min=organization.rowWidth[i];}}
return r;};_CoSELayout.prototype.getLongestRowIndex=function(organization){var r=-1;var max=Number.MIN_VALUE;for(var i=0;i<organization.rows.length;i++){if(organization.rowWidth[i]>max){r=i;max=organization.rowWidth[i];}}
return r;};_CoSELayout.prototype.canAddHorizontal=function(organization,extraWidth,extraHeight){var sri=this.getShortestRowIndex(organization);if(sri<0){return true;}
var min=organization.rowWidth[sri];if(min+organization.horizontalPadding+extraWidth<=organization.width)
return true;var hDiff=0;if(organization.rowHeight[sri]<extraHeight){if(sri>0)
hDiff=extraHeight+organization.verticalPadding-organization.rowHeight[sri];}
var add_to_row_ratio;if(organization.width-min>=extraWidth+organization.horizontalPadding){add_to_row_ratio=(organization.height+hDiff)/(min+extraWidth+organization.horizontalPadding);}else{add_to_row_ratio=(organization.height+hDiff)/organization.width;}
hDiff=extraHeight+organization.verticalPadding;var add_new_row_ratio;if(organization.width<extraWidth){add_new_row_ratio=(organization.height+hDiff)/extraWidth;}else{add_new_row_ratio=(organization.height+hDiff)/organization.width;}
if(add_new_row_ratio<1)
add_new_row_ratio=1/add_new_row_ratio;if(add_to_row_ratio<1)
add_to_row_ratio=1/add_to_row_ratio;return add_to_row_ratio<add_new_row_ratio;};_CoSELayout.prototype.shiftToLastRow=function(organization){var longest=this.getLongestRowIndex(organization);var last=organization.rowWidth.length-1;var row=organization.rows[longest];var node=row[row.length-1];var diff=node.width+organization.horizontalPadding;if(organization.width-organization.rowWidth[last]>diff&&longest!=last){row.splice(-1,1);organization.rows[last].push(node);organization.rowWidth[longest]=organization.rowWidth[longest]-diff;organization.rowWidth[last]=organization.rowWidth[last]+diff;organization.width=organization.rowWidth[this.getLongestRowIndex(organization)];var maxHeight=Number.MIN_VALUE;for(var i=0;i<row.length;i++){if(row[i].height>maxHeight)
maxHeight=row[i].height;}
if(longest>0)
maxHeight+=organization.verticalPadding;var prevTotal=organization.rowHeight[longest]+organization.rowHeight[last];organization.rowHeight[longest]=maxHeight;if(organization.rowHeight[last]<node.height+organization.verticalPadding)
organization.rowHeight[last]=node.height+organization.verticalPadding;var finalTotal=organization.rowHeight[longest]+organization.rowHeight[last];organization.height+=(finalTotal-prevTotal);this.shiftToLastRow(organization);}};_CoSELayout.prototype.stop=function(){this.stopped=true;if(this.thread){this.thread.stop();}
this.trigger('layoutstop');return this;};_CoSELayout.prototype.processChildrenList=function(parent,children){var size=children.length;for(var i=0;i<size;i++){var theChild=children[i];this.options.eles.nodes().length;var children_of_children=theChild.children();var theNode;if(theChild.width()!=null&&theChild.height()!=null){theNode=parent.add(new CoSENode(_CoSELayout.layout.graphManager,new PointD(theChild.position('x'),theChild.position('y')),new DimensionD(parseFloat(theChild.width()),parseFloat(theChild.height()))));}
else{theNode=parent.add(new CoSENode(this.graphManager));}
theNode.id=theChild.data("id");_CoSELayout.idToLNode[theChild.data("id")]=theNode;if(isNaN(theNode.rect.x)){theNode.rect.x=0;}
if(isNaN(theNode.rect.y)){theNode.rect.y=0;}
if(children_of_children!=null&&children_of_children.length>0){var theNewGraph;theNewGraph=_CoSELayout.layout.getGraphManager().add(_CoSELayout.layout.newGraph(),theNode);this.processChildrenList(theNewGraph,children_of_children);}}};module.exports=function get(cytoscape){Thread=cytoscape.Thread;return _CoSELayout;};},{"./CoSEConstants":1,"./CoSEEdge":2,"./CoSEGraph":3,"./CoSEGraphManager":4,"./CoSELayout":5,"./CoSENode":6,"./DimensionD":7,"./FDLayout":8,"./FDLayoutConstants":9,"./FDLayoutEdge":10,"./FDLayoutNode":11,"./HashMap":12,"./HashSet":13,"./IGeometry":14,"./IMath":15,"./Integer":16,"./LEdge":17,"./LGraph":18,"./LGraphManager":19,"./LGraphObject":20,"./LNode":21,"./Layout":22,"./LayoutConstants":23,"./Point":24,"./PointD":25,"./RandomSeed":26,"./RectangleD":27,"./Transform":28,"./UniqueIDGeneretor":29}],31:[function(_dereq_,module,exports){'use strict';var getLayout=_dereq_('./Layout');var register=function(cytoscape){var Layout=getLayout(cytoscape);cytoscape('layout','cose-bilkent',Layout);};if(typeof cytoscape!=='undefined'){register(cytoscape);}
module.exports=register;},{"./Layout":30}]},{},[31])(31)});
