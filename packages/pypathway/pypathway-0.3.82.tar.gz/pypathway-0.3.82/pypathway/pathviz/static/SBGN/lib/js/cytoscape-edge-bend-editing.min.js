(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.cytoscapeEdgeBendEditing=f()}})(function(){var define,module,exports;return(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){var debounce=_dereq_('./debounce');var bendPointUtilities=_dereq_('./bendPointUtilities');var registerUndoRedoFunctions=_dereq_('./registerUndoRedoFunctions');module.exports=function(params,cy){var fn=params;var addBendPointCxtMenuId='cy-edge-bend-editing-cxt-add-bend-point';var removeBendPointCxtMenuId='cy-edge-bend-editing-cxt-remove-bend-point';var ePosition,eRemove,eZoom,eSelect,eUnselect,eTapStart,eTapDrag,eTapEnd,eCxtTap;var functions={init:function(){registerUndoRedoFunctions(cy);var self=this;var opts=params;var $container=$(this);var $canvas=$('<canvas></canvas>');$container.append($canvas);var cxtAddBendPointFcn=function(event){var edge=event.cyTarget;var param={edge:edge,weights:edge.scratch('cyedgebendeditingWeights')?[].concat(edge.scratch('cyedgebendeditingWeights')):edge.scratch('cyedgebendeditingWeights'),distances:edge.scratch('cyedgebendeditingDistances')?[].concat(edge.scratch('cyedgebendeditingDistances')):edge.scratch('cyedgebendeditingDistances')};bendPointUtilities.addBendPoint();if(options().undoable){cy.undoRedo().do('changeBendPoints',param);}
clearDraws(true);};var cxtRemoveBendPointFcn=function(event){var edge=event.cyTarget;var param={edge:edge,weights:[].concat(edge.scratch('cyedgebendeditingWeights')),distances:[].concat(edge.scratch('cyedgebendeditingDistances'))};bendPointUtilities.removeBendPoint();if(options().undoable){cy.undoRedo().do('changeBendPoints',param);}
clearDraws(true);};var menuItems=[{id:addBendPointCxtMenuId,title:opts.addBendMenuItemTitle,selector:'edge:selected',onClickFunction:cxtAddBendPointFcn},{id:removeBendPointCxtMenuId,title:opts.removeBendMenuItemTitle,selector:'edge:selected',onClickFunction:cxtRemoveBendPointFcn}];if(cy.isContextMenusActive()){cy.appendMenuItems(menuItems);}
else{cy.contextMenus({menuItems:menuItems,menuItemClasses:['cy-edge-bend-editing-cxt-operation']});}
var _sizeCanvas=debounce(function(){$canvas.attr('height',$container.height()).attr('width',$container.width()).css({'position':'absolute','top':0,'left':0,'z-index':'999'});setTimeout(function(){var canvasBb=$canvas.offset();var containerBb=$container.offset();$canvas.css({'top':-(canvasBb.top-containerBb.top),'left':-(canvasBb.left-containerBb.left)});if(cy){clearDraws(true);}},0);},250);function sizeCanvas(){_sizeCanvas();}
sizeCanvas();$(window).bind('resize',function(){sizeCanvas();});var ctx=$canvas[0].getContext('2d');var data=$container.data('cyedgebendediting');if(data==null){data={};}
data.options=opts;var optCache;function options(){return optCache||(optCache=$container.data('cyedgebendediting').options);}
function convertToRenderedPosition(modelPosition){var pan=cy.pan();var zoom=cy.zoom();var x=modelPosition.x*zoom+pan.x;var y=modelPosition.y*zoom+pan.y;return{x:x,y:y};}
function clearDraws(renderSelectedBendShapes){var w=$container.width();var h=$container.height();ctx.clearRect(0,0,w,h);if(renderSelectedBendShapes){var selectedEdges=cy.edges(':selected');for(var i=0;i<selectedEdges.length;i++){var edge=selectedEdges[i];renderBendShapes(edge);}}}
function renderBendShapes(edge){if(!edge.hasClass('edgebendediting-hasbendpoints')){return;}
var segpts=bendPointUtilities.getSegmentPoints(edge);var length=getBendShapesLenght(edge);var srcPos=edge.source().position();var tgtPos=edge.target().position();var weights=edge.scratch('cyedgebendeditingWeights');var distances=edge.scratch('cyedgebendeditingDistances');for(var i=0;segpts&&i<segpts.length;i=i+2){var bendX=segpts[i];var bendY=segpts[i+1];var oldStyle=ctx.fillStyle;ctx.fillStyle=edge.css('line-color');renderBendShape(bendX,bendY,length);ctx.fillStyle=oldStyle;}}
function renderBendShape(bendX,bendY,length){var topLeftX=bendX-length/2;var topLeftY=bendY-length/2;var renderedTopLeftPos=convertToRenderedPosition({x:topLeftX,y:topLeftY});length*=cy.zoom();ctx.beginPath();ctx.rect(renderedTopLeftPos.x,renderedTopLeftPos.y,length,length);ctx.fill();ctx.closePath();}
function getBendShapesLenght(edge){var factor=options().bendShapeSizeFactor;var length=parseFloat(edge.css('width'))*factor;return length;}
function checkIfInsideBendShape(x,y,length,centerX,centerY){var minX=centerX-length/2;var maxX=centerX+length/2;var minY=centerY-length/2;var maxY=centerY+length/2;var inside=(x>=minX&&x<=maxX)&&(y>=minY&&y<=maxY);return inside;}
function getContainingBendShapeIndex(x,y,edge){if(edge.scratch('cyedgebendeditingWeights')==null||edge.scratch('cyedgebendeditingWeights').lenght==0){return-1;}
var segpts=bendPointUtilities.getSegmentPoints(edge);var length=getBendShapesLenght(edge);for(var i=0;segpts&&i<segpts.length;i=i+2){var bendX=segpts[i];var bendY=segpts[i+1];var inside=checkIfInsideBendShape(x,y,length,bendX,bendY);if(inside){return i/2;}}
return-1;};var lastPanningEnabled,lastZoomingEnabled,lastBoxSelectionEnabled;function disableGestures(){lastPanningEnabled=cy.panningEnabled();lastZoomingEnabled=cy.zoomingEnabled();lastBoxSelectionEnabled=cy.boxSelectionEnabled();cy.zoomingEnabled(false).panningEnabled(false).boxSelectionEnabled(false);}
function resetGestures(){cy.zoomingEnabled(lastZoomingEnabled).panningEnabled(lastPanningEnabled).boxSelectionEnabled(lastBoxSelectionEnabled);}
$container.cytoscape(function(e){clearDraws(true);lastPanningEnabled=cy.panningEnabled();lastZoomingEnabled=cy.zoomingEnabled();lastBoxSelectionEnabled=cy.boxSelectionEnabled();cy.bind('zoom pan',eZoom=function(){clearDraws(true);});cy.on('position','node',ePosition=function(){var node=this;clearDraws(true);});cy.on('remove','edge',eRemove=function(){var node=this;clearDraws(true);});cy.on('select','edge',eSelect=function(){var edge=this;renderBendShapes(edge);});cy.on('unselect','edge',eUnselect=function(){var edge=this;clearDraws(true);});var movedBendIndex;var movedBendEdge;var moveBendParam;cy.on('tapstart','edge',eTapStart=function(event){var edge=this;moveBendParam={edge:edge,weights:edge.scratch('cyedgebendeditingWeights')?[].concat(edge.scratch('cyedgebendeditingWeights')):edge.scratch('cyedgebendeditingWeights'),distances:edge.scratch('cyedgebendeditingDistances')?[].concat(edge.scratch('cyedgebendeditingDistances')):edge.scratch('cyedgebendeditingDistances')};var cyPosX=event.cyPosition.x;var cyPosY=event.cyPosition.y;var index=getContainingBendShapeIndex(cyPosX,cyPosY,edge);if(index!=-1){movedBendIndex=index;movedBendEdge=edge;disableGestures();}});cy.on('tapdrag',eTapDrag=function(event){var edge=movedBendEdge;if(movedBendEdge===undefined||movedBendIndex===undefined){return;}
var weights=edge.scratch('cyedgebendeditingWeights');var distances=edge.scratch('cyedgebendeditingDistances');var relativeBendPosition=bendPointUtilities.convertToRelativeBendPosition(edge,event.cyPosition);weights[movedBendIndex]=relativeBendPosition.weight;distances[movedBendIndex]=relativeBendPosition.distance;edge.scratch('cyedgebendeditingWeights',weights);edge.scratch('cyedgebendeditingDistances',distances);clearDraws(true);});cy.on('tapend',eTapEnd=function(event){var edge=movedBendEdge;if(edge!==undefined&&moveBendParam!==undefined&&edge.scratch('cyedgebendeditingWeights')&&edge.scratch('cyedgebendeditingWeights').toString()!=moveBendParam.weights.toString()){if(options().undoable){cy.undoRedo().do('changeBendPoints',moveBendParam);}}
movedBendIndex=undefined;movedBendEdge=undefined;moveBendParam=undefined;resetGestures();clearDraws(true);});cy.on('cxttap','edge',eCxtTap=function(event){var edge=this;if(!edge.selected()){return;}
var selectedBendIndex=getContainingBendShapeIndex(event.cyPosition.x,event.cyPosition.y,edge);if(selectedBendIndex==-1){$('#'+removeBendPointCxtMenuId).css('display','none');bendPointUtilities.currentCtxPos=event.cyPosition;}
else{$('#'+addBendPointCxtMenuId).css('display','none');bendPointUtilities.currentBendIndex=selectedBendIndex;}
bendPointUtilities.currentCtxEdge=edge;});cy.on('cyedgebendediting.changeBendPoints','edge',function(){var edge=this;edge.select();clearDraws(true);});});$container.data('cyedgebendediting',data);},unbind:function(){cy.off('position','node',ePosition).off('remove','node',eRemove).off('select','edge',eSelect).off('unselect','edge',eUnselect).off('tapstart','edge',eTapStart).off('tapdrag',eTapDrag).off('tapend',eTapEnd).off('cxttap',eCxtTap);cy.unbind("zoom pan",eZoom);}};if(functions[fn]){return functions[fn].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof fn=='object'||!fn){return functions.init.apply(this,arguments);}else{$.error('No such function `'+fn+'` for cytoscape.js-edge-bend-editing');}
return $(this);};},{"./bendPointUtilities":2,"./debounce":3,"./registerUndoRedoFunctions":5}],2:[function(_dereq_,module,exports){var bendPointUtilities={currentCtxEdge:undefined,currentCtxPos:undefined,currentBendIndex:undefined,initBendPoints:function(bendPositionsFcn,edges){for(var i=0;i<edges.length;i++){var edge=edges[i];var bendPositions=bendPositionsFcn.apply(this,edge);var result=this.convertToRelativeBendPositions(edge,bendPositions);if(result.distances.length>0){edge.scratch('cyedgebendeditingWeights',result.weights);edge.scratch('cyedgebendeditingDistances',result.distances);edge.addClass('edgebendediting-hasbendpoints');}}},getLineDirection:function(srcPoint,tgtPoint){if(srcPoint.y==tgtPoint.y&&srcPoint.x<tgtPoint.x){return 1;}
if(srcPoint.y<tgtPoint.y&&srcPoint.x<tgtPoint.x){return 2;}
if(srcPoint.y<tgtPoint.y&&srcPoint.x==tgtPoint.x){return 3;}
if(srcPoint.y<tgtPoint.y&&srcPoint.x>tgtPoint.x){return 4;}
if(srcPoint.y==tgtPoint.y&&srcPoint.x>tgtPoint.x){return 5;}
if(srcPoint.y>tgtPoint.y&&srcPoint.x>tgtPoint.x){return 6;}
if(srcPoint.y>tgtPoint.y&&srcPoint.x==tgtPoint.x){return 7;}
return 8;},getSrcTgtPointsAndTangents:function(edge){var sourceNode=edge.source();var targetNode=edge.target();var tgtPosition=targetNode.position();var srcPosition=sourceNode.position();var srcPoint=sourceNode.position();var tgtPoint=targetNode.position();var m1=(tgtPoint.y-srcPoint.y)/(tgtPoint.x-srcPoint.x);var m2=-1/m1;return{m1:m1,m2:m2,srcPoint:srcPoint,tgtPoint:tgtPoint};},getIntersection:function(edge,point,srcTgtPointsAndTangents){if(srcTgtPointsAndTangents===undefined){srcTgtPointsAndTangents=this.getSrcTgtPointsAndTangents(edge);}
var srcPoint=srcTgtPointsAndTangents.srcPoint;var tgtPoint=srcTgtPointsAndTangents.tgtPoint;var m1=srcTgtPointsAndTangents.m1;var m2=srcTgtPointsAndTangents.m2;var intersectX;var intersectY;if(m1==Infinity||m1==-Infinity){intersectX=srcPoint.x;intersectY=point.y;}
else if(m1==0){intersectX=point.x;intersectY=srcPoint.y;}
else{var a1=srcPoint.y-m1*srcPoint.x;var a2=point.y-m2*point.x;intersectX=(a2-a1)/(m1-m2);intersectY=m1*intersectX+a1;}
var intersectionPoint={x:intersectX,y:intersectY};return intersectionPoint;},getSegmentPoints:function(edge){if(edge.css('curve-style')!=='segments'){return undefined;}
var segpts=[];var segmentWs=edge.pstyle('segment-weights').pfValue;var segmentDs=edge.pstyle('segment-distances').pfValue;var segmentsN=Math.min(segmentWs.length,segmentDs.length);var srcPos=edge.source().position();var tgtPos=edge.target().position();var dy=(tgtPos.y-srcPos.y);var dx=(tgtPos.x-srcPos.x);var l=Math.sqrt(dx*dx+dy*dy);var vector={x:dx,y:dy};var vectorNorm={x:vector.x/l,y:vector.y/l};var vectorNormInverse={x:-vectorNorm.y,y:vectorNorm.x};for(var s=0;s<segmentsN;s++){var w=segmentWs[s];var d=segmentDs[s];var w1=(1-w);var w2=w;var posPts={x1:srcPos.x,x2:tgtPos.x,y1:srcPos.y,y2:tgtPos.y};var midptPts=posPts;var adjustedMidpt={x:midptPts.x1*w1+midptPts.x2*w2,y:midptPts.y1*w1+midptPts.y2*w2};segpts.push(adjustedMidpt.x+vectorNormInverse.x*d,adjustedMidpt.y+vectorNormInverse.y*d);}
return segpts;},convertToRelativeBendPosition:function(edge,bendPoint,srcTgtPointsAndTangents){if(srcTgtPointsAndTangents===undefined){srcTgtPointsAndTangents=this.getSrcTgtPointsAndTangents(edge);}
var intersectionPoint=this.getIntersection(edge,bendPoint,srcTgtPointsAndTangents);var intersectX=intersectionPoint.x;var intersectY=intersectionPoint.y;var srcPoint=srcTgtPointsAndTangents.srcPoint;var tgtPoint=srcTgtPointsAndTangents.tgtPoint;var weight=intersectX==srcPoint.x?0:(intersectX-srcPoint.x)/(tgtPoint.x-srcPoint.x);var distance=Math.sqrt(Math.pow((intersectY-bendPoint.y),2)
+Math.pow((intersectX-bendPoint.x),2));var direction1=this.getLineDirection(srcPoint,tgtPoint);var direction2=this.getLineDirection(intersectionPoint,bendPoint);if(direction1-direction2!=-2&&direction1-direction2!=6){if(distance!=0)
distance=-1*distance;}
return{weight:weight,distance:distance};},convertToRelativeBendPositions:function(edge,bendPoints){var srcTgtPointsAndTangents=this.getSrcTgtPointsAndTangents(edge);var weights=[];var distances=[];for(var i=0;bendPoints&&i<bendPoints.length;i++){var bendPoint=bendPoints[i];var relativeBendPosition=this.convertToRelativeBendPosition(edge,bendPoint,srcTgtPointsAndTangents);weights.push(relativeBendPosition.weight);distances.push(relativeBendPosition.distance);}
return{weights:weights,distances:distances};},getSegmentDistancesString:function(edge){var str="";var distances=edge.scratch('cyedgebendeditingDistances');for(var i=0;distances&&i<distances.length;i++){str=str+" "+distances[i];}
return str;},getSegmentWeightsString:function(edge){var str="";var weights=edge.scratch('cyedgebendeditingWeights');for(var i=0;weights&&i<weights.length;i++){str=str+" "+weights[i];}
return str;},addBendPoint:function(edge,newBendPoint){if(edge===undefined||newBendPoint===undefined){edge=this.currentCtxEdge;newBendPoint=this.currentCtxPos;}
var relativeBendPosition=this.convertToRelativeBendPosition(edge,newBendPoint);var originalPointWeight=relativeBendPosition.weight;var edgeStartX=edge._private.rscratch.startX;var edgeStartY=edge._private.rscratch.startY;var edgeEndX=edge._private.rscratch.endX;var edgeEndY=edge._private.rscratch.endY;var startWeight=this.convertToRelativeBendPosition(edge,{x:edgeStartX,y:edgeStartY}).weight;var endWeight=this.convertToRelativeBendPosition(edge,{x:edgeEndX,y:edgeEndY}).weight;var weightsWithTgtSrc=[startWeight].concat(edge.scratch('cyedgebendeditingWeights')?edge.scratch('cyedgebendeditingWeights'):[]).concat([endWeight]);var segPts=this.getSegmentPoints(edge);var minDist=Infinity;var intersection;var segptsWithTgtSrc=[edgeStartX,edgeStartY].concat(segPts?segPts:[]).concat([edgeEndX,edgeEndY]);var newBendIndex=-1;for(var i=0;i<weightsWithTgtSrc.length-1;i++){var w1=weightsWithTgtSrc[i];var w2=weightsWithTgtSrc[i+1];if((originalPointWeight<=w1&&originalPointWeight>=w2)||(originalPointWeight<=w2&&originalPointWeight>=w1)){var startX=segptsWithTgtSrc[2*i];var startY=segptsWithTgtSrc[2*i+1];var endX=segptsWithTgtSrc[2*i+2];var endY=segptsWithTgtSrc[2*i+3];var start={x:startX,y:startY};var end={x:endX,y:endY};var m1=(startY-endY)/(startX-endX);var m2=-1/m1;var srcTgtPointsAndTangents={srcPoint:start,tgtPoint:end,m1:m1,m2:m2};var currentIntersection=this.getIntersection(edge,newBendPoint,srcTgtPointsAndTangents);var dist=Math.sqrt(Math.pow((newBendPoint.x-currentIntersection.x),2)
+Math.pow((newBendPoint.y-currentIntersection.y),2));if(dist<minDist){minDist=dist;intersection=currentIntersection;newBendIndex=i;}}}
if(intersection!==undefined){newBendPoint=intersection;}
relativeBendPosition=this.convertToRelativeBendPosition(edge,newBendPoint);if(intersection===undefined){relativeBendPosition.distance=0;}
var weights=edge.scratch('cyedgebendeditingWeights');var distances=edge.scratch('cyedgebendeditingDistances');weights=weights?weights:[];distances=distances?distances:[];if(weights.length===0){newBendIndex=0;}
if(newBendIndex!=-1){weights.splice(newBendIndex,0,relativeBendPosition.weight);distances.splice(newBendIndex,0,relativeBendPosition.distance);}
edge.scratch('cyedgebendeditingWeights',weights);edge.scratch('cyedgebendeditingDistances',distances);edge.addClass('edgebendediting-hasbendpoints');return relativeBendPosition;},removeBendPoint:function(edge,bendPointIndex){if(edge===undefined||bendPointIndex===undefined){edge=this.currentCtxEdge;bendPointIndex=this.currentBendIndex;}
var distances=edge.scratch('cyedgebendeditingDistances');var weights=edge.scratch('cyedgebendeditingWeights');distances.splice(bendPointIndex,1);weights.splice(bendPointIndex,1);if(distances.length==0||weights.lenght==0){edge.removeClass('edgebendediting-hasbendpoints');}
else{edge.scratch('cyedgebendeditingDistances',distances);edge.scratch('cyedgebendeditingWeights',weights);}},calculateDistance:function(pt1,pt2){var diffX=pt1.x-pt2.x;var diffY=pt1.y-pt2.y;var dist=Math.sqrt(Math.pow(diffX,2)+Math.pow(diffY,2));return dist;}};module.exports=bendPointUtilities;},{}],3:[function(_dereq_,module,exports){var debounce=(function(){var FUNC_ERROR_TEXT='Expected a function';var nativeMax=Math.max,nativeNow=Date.now;var now=nativeNow||function(){return new Date().getTime();};function debounce(func,wait,options){var args,maxTimeoutId,result,stamp,thisArg,timeoutId,trailingCall,lastCalled=0,maxWait=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}
wait=wait<0?0:(+wait||0);if(options===true){var leading=true;trailing=false;}else if(isObject(options)){leading=!!options.leading;maxWait='maxWait'in options&&nativeMax(+options.maxWait||0,wait);trailing='trailing'in options?!!options.trailing:trailing;}
function cancel(){if(timeoutId){clearTimeout(timeoutId);}
if(maxTimeoutId){clearTimeout(maxTimeoutId);}
lastCalled=0;maxTimeoutId=timeoutId=trailingCall=undefined;}
function complete(isCalled,id){if(id){clearTimeout(id);}
maxTimeoutId=timeoutId=trailingCall=undefined;if(isCalled){lastCalled=now();result=func.apply(thisArg,args);if(!timeoutId&&!maxTimeoutId){args=thisArg=undefined;}}}
function delayed(){var remaining=wait-(now()-stamp);if(remaining<=0||remaining>wait){complete(trailingCall,maxTimeoutId);}else{timeoutId=setTimeout(delayed,remaining);}}
function maxDelayed(){complete(trailing,timeoutId);}
function debounced(){args=arguments;stamp=now();thisArg=this;trailingCall=trailing&&(timeoutId||!leading);if(maxWait===false){var leadingCall=leading&&!timeoutId;}else{if(!maxTimeoutId&&!leading){lastCalled=stamp;}
var remaining=maxWait-(stamp-lastCalled),isCalled=remaining<=0||remaining>maxWait;if(isCalled){if(maxTimeoutId){maxTimeoutId=clearTimeout(maxTimeoutId);}
lastCalled=stamp;result=func.apply(thisArg,args);}
else if(!maxTimeoutId){maxTimeoutId=setTimeout(maxDelayed,remaining);}}
if(isCalled&&timeoutId){timeoutId=clearTimeout(timeoutId);}
else if(!timeoutId&&wait!==maxWait){timeoutId=setTimeout(delayed,wait);}
if(leadingCall){isCalled=true;result=func.apply(thisArg,args);}
if(isCalled&&!timeoutId&&!maxTimeoutId){args=thisArg=undefined;}
return result;}
debounced.cancel=cancel;return debounced;}
function isObject(value){var type=typeof value;return!!value&&(type=='object'||type=='function');}
return debounce;})();module.exports=debounce;},{}],4:[function(_dereq_,module,exports){;(function($$,$){'use strict';var bendPointUtilities=_dereq_('./bendPointUtilities');$.fn.cytoscapeEdgeBendEditing=_dereq_('./UIUtilities');var register=function(cytoscape){if(!cytoscape){return;}
var defaults={bendPositionsFunction:function(ele){return ele.data('bendPointPositions');},undoable:false,bendShapeSizeFactor:6,enabled:true,addBendMenuItemTitle:"Add Bend Point",removeBendMenuItemTitle:"Remove Bend Point"};var options;function extend(defaults,options){var obj={};for(var i in defaults){obj[i]=defaults[i];}
for(var i in options){obj[i]=options[i];}
return obj;};cytoscape('core','edgeBendEditing',function(opts){var cy=this;if(cy.contextMenus==null){var exceptionStr="To use cytoscape.js-edge-bend-editing extension you must include cytoscape.js-context-menus extension"
+"\n"+"Please see 'https://github.com/iVis-at-Bilkent/cytoscape.js-context-menus'";throw exceptionStr;}
options=extend(defaults,opts);cy.style().selector('.edgebendediting-hasbendpoints').css({'curve-style':'segments','segment-distances':function(ele){return bendPointUtilities.getSegmentDistancesString(ele);},'segment-weights':function(ele){return bendPointUtilities.getSegmentWeightsString(ele);},'edge-distances':'node-position'});bendPointUtilities.initBendPoints(options.bendPositionsFunction,cy.edges());if(options.enabled)
$(cy.container()).cytoscapeEdgeBendEditing(options,cy);else
$(cy.container()).cytoscapeEdgeBendEditing("unbind",cy);return this;});cytoscape('collection','getSegmentPoints',function(){var ele=this;return bendPointUtilities.getSegmentPoints(ele);});};if(typeof module!=='undefined'&&module.exports){module.exports=register;}
if(typeof define!=='undefined'&&define.amd){define('cytoscape-edge-bend-editing',function(){return register;});}
if(typeof cytoscape!=='undefined'){register(cytoscape);}})(cytoscape,jQuery);},{"./UIUtilities":1,"./bendPointUtilities":2}],5:[function(_dereq_,module,exports){module.exports=function(cy){if(cy.undoRedo==null)
return;var ur=cy.undoRedo({defaultActions:false,isDebug:true});function changeBendPoints(param){var edge=param.edge;var result={edge:edge,weights:param.set?edge.scratch('cyedgebendeditingWeights'):param.weights,distances:param.set?edge.scratch('cyedgebendeditingDistances'):param.distances,set:true};var hasBend=param.weights&&param.weights.length>0;if(param.set){hasBend?edge.scratch('cyedgebendeditingWeights',param.weights):edge.removeScratch('cyedgebendeditingWeights');hasBend?edge.scratch('cyedgebendeditingDistances',param.distances):edge.removeScratch('cyedgebendeditingDistances');if(hasBend){edge.addClass('edgebendediting-hasbendpoints');}
else{edge.removeClass('edgebendediting-hasbendpoints');}}
edge.trigger('cyedgebendediting.changeBendPoints');return result;}
ur.action('changeBendPoints',changeBendPoints,changeBendPoints);};},{}]},{},[4])(4)});
