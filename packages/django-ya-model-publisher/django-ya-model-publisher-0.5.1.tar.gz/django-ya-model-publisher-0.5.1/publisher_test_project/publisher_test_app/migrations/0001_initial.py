# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-20 15:27
from __future__ import unicode_literals

import aldryn_translation_tools.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_tools.permissions
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PublisherParlerAutoSlugifyTestModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_is_draft', models.BooleanField(db_index=True, default=True, editable=False)),
                ('publisher_modified_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('publisher_published_at', models.DateTimeField(editable=False, null=True)),
                ('publication_start_date', models.DateTimeField(blank=True, db_index=True, help_text='Published content will only be visible from this point in time. Leave blank if always visible.', null=True, verbose_name='publication start date')),
                ('publication_end_date', models.DateTimeField(blank=True, db_index=True, help_text='When to expire the published version. Leave empty to never expire.', null=True, verbose_name='publication end date')),
                ('publisher_linked', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='publisher_draft', to='publisher_test_app.PublisherParlerAutoSlugifyTestModel')),
            ],
            options={
                'abstract': False,
                'permissions': (('can_publish', 'Can publish'),),
            },
            bases=(aldryn_translation_tools.models.TranslatedAutoSlugifyMixin, parler.models.TranslatableModelMixin, django_tools.permissions.ModelPermissionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PublisherParlerAutoSlugifyTestModelTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='publisher_test_app.PublisherParlerAutoSlugifyTestModel')),
            ],
            options={
                'managed': True,
                'db_table': 'publisher_test_app_publisherparlerautoslugifytestmodel_translation',
                'verbose_name': 'publisher parler auto slugify test model Translation',
                'db_tablespace': '',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PublisherParlerTestModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_is_draft', models.BooleanField(db_index=True, default=True, editable=False)),
                ('publisher_modified_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('publisher_published_at', models.DateTimeField(editable=False, null=True)),
                ('publication_start_date', models.DateTimeField(blank=True, db_index=True, help_text='Published content will only be visible from this point in time. Leave blank if always visible.', null=True, verbose_name='publication start date')),
                ('publication_end_date', models.DateTimeField(blank=True, db_index=True, help_text='When to expire the published version. Leave empty to never expire.', null=True, verbose_name='publication end date')),
                ('publisher_linked', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='publisher_draft', to='publisher_test_app.PublisherParlerTestModel')),
            ],
            options={
                'abstract': False,
                'permissions': (('can_publish', 'Can publish'),),
            },
            bases=(parler.models.TranslatableModelMixin, django_tools.permissions.ModelPermissionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PublisherParlerTestModelTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=100)),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='publisher_test_app.PublisherParlerTestModel')),
            ],
            options={
                'managed': True,
                'db_table': 'publisher_test_app_publisherparlertestmodel_translation',
                'verbose_name': 'publisher parler test model Translation',
                'db_tablespace': '',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PublisherTestModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_is_draft', models.BooleanField(db_index=True, default=True, editable=False)),
                ('publisher_modified_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('publisher_published_at', models.DateTimeField(editable=False, null=True)),
                ('publication_start_date', models.DateTimeField(blank=True, db_index=True, help_text='Published content will only be visible from this point in time. Leave blank if always visible.', null=True, verbose_name='publication start date')),
                ('publication_end_date', models.DateTimeField(blank=True, db_index=True, help_text='When to expire the published version. Leave empty to never expire.', null=True, verbose_name='publication end date')),
                ('title', models.CharField(max_length=100)),
                ('publisher_linked', models.OneToOneField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='publisher_draft', to='publisher_test_app.PublisherTestModel')),
            ],
            options={
                'abstract': False,
                'permissions': (('can_publish', 'Can publish'),),
            },
            bases=(django_tools.permissions.ModelPermissionMixin, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='publisherparlertestmodeltranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='publisherparlerautoslugifytestmodeltranslation',
            unique_together=set([('language_code', 'master')]),
        ),
    ]
