
import argparse
import os
from collections import OrderedDict
from chemtools.basisset import CFDTYPE
import numpy as np
from chemtools.basisset import BasisSet


def oldbs2newbs(fname, name=None, element=None):

    with open(fname, 'r') as fil:
        oldbs = eval(fil.read())

    newfmt = OrderedDict()

    for shell, fs in oldbs['functions'].items():
        csfs = fs['contractedfs']
        exps = fs['exponents']
        cf = [np.array([x for x in zip(csf['indices'], csf['coefficients'])], dtype=CFDTYPE) for csf in csfs]
        newfmt[shell] = {'e' : np.array(exps, dtype=float), 'cf' : cf}

    bs = BasisSet(name=name, element=element, functions=newfmt)
    return bs

def main():

    parser = argparse.ArgumentParser()
    parser.add_argument('oldbas')
    parser.add_argument('basname')
    parser.add_argument('element')
    parser.add_argument('-o')
    args = parser.parse_args()

    bs = oldbs2newbs(args.oldbas, args.basname, args.element)

    if args.o is not None:
        output = args.o
    else:
        output = os.path.splitext(args.oldbas)[0] + '.pkl'

    bs.to_pickle()

if __name__ == '__main__':
    main()
