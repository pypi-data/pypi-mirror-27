# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkClampImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkClampImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkClampImageFilterPython')
    _itkClampImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkClampImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkClampImageFilterPython
            return _itkClampImageFilterPython
        try:
            _mod = imp.load_module('_itkClampImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkClampImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkClampImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
import itkVectorImagePython
import stdcomplexPython
import itkVariableLengthVectorPython
import itkImagePython
import itkCovariantVectorPython
import itkFixedArrayPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterBPython

def itkClampImageFilterIF3IF3_New():
  return itkClampImageFilterIF3IF3.New()


def itkClampImageFilterIF3IF3_Superclass_New():
  return itkClampImageFilterIF3IF3_Superclass.New()


def itkClampImageFilterIF2IF2_New():
  return itkClampImageFilterIF2IF2.New()


def itkClampImageFilterIF2IF2_Superclass_New():
  return itkClampImageFilterIF2IF2_Superclass.New()


def itkClampImageFilterIF3IUC3_New():
  return itkClampImageFilterIF3IUC3.New()


def itkClampImageFilterIF3IUC3_Superclass_New():
  return itkClampImageFilterIF3IUC3_Superclass.New()


def itkClampImageFilterIF2IUC2_New():
  return itkClampImageFilterIF2IUC2.New()


def itkClampImageFilterIF2IUC2_Superclass_New():
  return itkClampImageFilterIF2IUC2_Superclass.New()


def itkClampImageFilterIF3ISS3_New():
  return itkClampImageFilterIF3ISS3.New()


def itkClampImageFilterIF3ISS3_Superclass_New():
  return itkClampImageFilterIF3ISS3_Superclass.New()


def itkClampImageFilterIF2ISS2_New():
  return itkClampImageFilterIF2ISS2.New()


def itkClampImageFilterIF2ISS2_Superclass_New():
  return itkClampImageFilterIF2ISS2_Superclass.New()


def itkClampImageFilterIUC3IF3_New():
  return itkClampImageFilterIUC3IF3.New()


def itkClampImageFilterIUC3IF3_Superclass_New():
  return itkClampImageFilterIUC3IF3_Superclass.New()


def itkClampImageFilterIUC2IF2_New():
  return itkClampImageFilterIUC2IF2.New()


def itkClampImageFilterIUC2IF2_Superclass_New():
  return itkClampImageFilterIUC2IF2_Superclass.New()


def itkClampImageFilterIUC3IUC3_New():
  return itkClampImageFilterIUC3IUC3.New()


def itkClampImageFilterIUC3IUC3_Superclass_New():
  return itkClampImageFilterIUC3IUC3_Superclass.New()


def itkClampImageFilterIUC2IUC2_New():
  return itkClampImageFilterIUC2IUC2.New()


def itkClampImageFilterIUC2IUC2_Superclass_New():
  return itkClampImageFilterIUC2IUC2_Superclass.New()


def itkClampImageFilterIUC3ISS3_New():
  return itkClampImageFilterIUC3ISS3.New()


def itkClampImageFilterIUC3ISS3_Superclass_New():
  return itkClampImageFilterIUC3ISS3_Superclass.New()


def itkClampImageFilterIUC2ISS2_New():
  return itkClampImageFilterIUC2ISS2.New()


def itkClampImageFilterIUC2ISS2_Superclass_New():
  return itkClampImageFilterIUC2ISS2_Superclass.New()


def itkClampImageFilterISS3IF3_New():
  return itkClampImageFilterISS3IF3.New()


def itkClampImageFilterISS3IF3_Superclass_New():
  return itkClampImageFilterISS3IF3_Superclass.New()


def itkClampImageFilterISS2IF2_New():
  return itkClampImageFilterISS2IF2.New()


def itkClampImageFilterISS2IF2_Superclass_New():
  return itkClampImageFilterISS2IF2_Superclass.New()


def itkClampImageFilterISS3IUC3_New():
  return itkClampImageFilterISS3IUC3.New()


def itkClampImageFilterISS3IUC3_Superclass_New():
  return itkClampImageFilterISS3IUC3_Superclass.New()


def itkClampImageFilterISS2IUC2_New():
  return itkClampImageFilterISS2IUC2.New()


def itkClampImageFilterISS2IUC2_Superclass_New():
  return itkClampImageFilterISS2IUC2_Superclass.New()


def itkClampImageFilterISS3ISS3_New():
  return itkClampImageFilterISS3ISS3.New()


def itkClampImageFilterISS3ISS3_Superclass_New():
  return itkClampImageFilterISS3ISS3_Superclass.New()


def itkClampImageFilterISS2ISS2_New():
  return itkClampImageFilterISS2ISS2.New()


def itkClampImageFilterISS2ISS2_Superclass_New():
  return itkClampImageFilterISS2ISS2_Superclass.New()

class itkClampImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkClampImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2IF2_Superclass self) -> itkClampImageFilterIF2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,float > const &":
        """
        GetFunctor(itkClampImageFilterIF2IF2_Superclass self) -> itk::Functor::Clamp< float,float >
        GetFunctor(itkClampImageFilterIF2IF2_Superclass self) -> itk::Functor::Clamp< float,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2IF2_Superclass self, itk::Functor::Clamp< float,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF2IF2_Superclass *":
        """GetPointer(itkClampImageFilterIF2IF2_Superclass self) -> itkClampImageFilterIF2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IF2_Superclass

        Create a new object of the class itkClampImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_Clone, None, itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_GetFunctor, None, itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_SetFunctor, None, itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_GetPointer, None, itkClampImageFilterIF2IF2_Superclass)
itkClampImageFilterIF2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_swigregister
itkClampImageFilterIF2IF2_Superclass_swigregister(itkClampImageFilterIF2IF2_Superclass)

def itkClampImageFilterIF2IF2_Superclass___New_orig__() -> "itkClampImageFilterIF2IF2_Superclass_Pointer":
    """itkClampImageFilterIF2IF2_Superclass___New_orig__() -> itkClampImageFilterIF2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass___New_orig__()

def itkClampImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2_Superclass *":
    """itkClampImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Superclass_cast(obj)

class itkClampImageFilterIF2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    """Proxy of C++ itkClampImageFilterIF2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2ISS2_Superclass self) -> itkClampImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,short > const &":
        """
        GetFunctor(itkClampImageFilterIF2ISS2_Superclass self) -> itk::Functor::Clamp< float,short >
        GetFunctor(itkClampImageFilterIF2ISS2_Superclass self) -> itk::Functor::Clamp< float,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2ISS2_Superclass self, itk::Functor::Clamp< float,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF2ISS2_Superclass *":
        """GetPointer(itkClampImageFilterIF2ISS2_Superclass self) -> itkClampImageFilterIF2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_Clone, None, itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_GetFunctor, None, itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_SetFunctor, None, itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_GetPointer, None, itkClampImageFilterIF2ISS2_Superclass)
itkClampImageFilterIF2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_swigregister
itkClampImageFilterIF2ISS2_Superclass_swigregister(itkClampImageFilterIF2ISS2_Superclass)

def itkClampImageFilterIF2ISS2_Superclass___New_orig__() -> "itkClampImageFilterIF2ISS2_Superclass_Pointer":
    """itkClampImageFilterIF2ISS2_Superclass___New_orig__() -> itkClampImageFilterIF2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass___New_orig__()

def itkClampImageFilterIF2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2_Superclass *":
    """itkClampImageFilterIF2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Superclass_cast(obj)

class itkClampImageFilterIF2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    """Proxy of C++ itkClampImageFilterIF2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterIF2IUC2_Superclass self) -> itkClampImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIF2IUC2_Superclass self) -> itk::Functor::Clamp< float,unsigned char >
        GetFunctor(itkClampImageFilterIF2IUC2_Superclass self) -> itk::Functor::Clamp< float,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF2IUC2_Superclass self, itk::Functor::Clamp< float,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF2IUC2_Superclass *":
        """GetPointer(itkClampImageFilterIF2IUC2_Superclass self) -> itkClampImageFilterIF2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_Clone, None, itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_GetFunctor, None, itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_SetFunctor, None, itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_GetPointer, None, itkClampImageFilterIF2IUC2_Superclass)
itkClampImageFilterIF2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_swigregister
itkClampImageFilterIF2IUC2_Superclass_swigregister(itkClampImageFilterIF2IUC2_Superclass)

def itkClampImageFilterIF2IUC2_Superclass___New_orig__() -> "itkClampImageFilterIF2IUC2_Superclass_Pointer":
    """itkClampImageFilterIF2IUC2_Superclass___New_orig__() -> itkClampImageFilterIF2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass___New_orig__()

def itkClampImageFilterIF2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2_Superclass *":
    """itkClampImageFilterIF2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Superclass_cast(obj)

class itkClampImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkClampImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3IF3_Superclass self) -> itkClampImageFilterIF3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,float > const &":
        """
        GetFunctor(itkClampImageFilterIF3IF3_Superclass self) -> itk::Functor::Clamp< float,float >
        GetFunctor(itkClampImageFilterIF3IF3_Superclass self) -> itk::Functor::Clamp< float,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3IF3_Superclass self, itk::Functor::Clamp< float,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF3IF3_Superclass *":
        """GetPointer(itkClampImageFilterIF3IF3_Superclass self) -> itkClampImageFilterIF3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IF3_Superclass

        Create a new object of the class itkClampImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_Clone, None, itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_GetFunctor, None, itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_SetFunctor, None, itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_GetPointer, None, itkClampImageFilterIF3IF3_Superclass)
itkClampImageFilterIF3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_swigregister
itkClampImageFilterIF3IF3_Superclass_swigregister(itkClampImageFilterIF3IF3_Superclass)

def itkClampImageFilterIF3IF3_Superclass___New_orig__() -> "itkClampImageFilterIF3IF3_Superclass_Pointer":
    """itkClampImageFilterIF3IF3_Superclass___New_orig__() -> itkClampImageFilterIF3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass___New_orig__()

def itkClampImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3_Superclass *":
    """itkClampImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Superclass_cast(obj)

class itkClampImageFilterIF3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    """Proxy of C++ itkClampImageFilterIF3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3ISS3_Superclass self) -> itkClampImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,short > const &":
        """
        GetFunctor(itkClampImageFilterIF3ISS3_Superclass self) -> itk::Functor::Clamp< float,short >
        GetFunctor(itkClampImageFilterIF3ISS3_Superclass self) -> itk::Functor::Clamp< float,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3ISS3_Superclass self, itk::Functor::Clamp< float,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF3ISS3_Superclass *":
        """GetPointer(itkClampImageFilterIF3ISS3_Superclass self) -> itkClampImageFilterIF3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_Clone, None, itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_GetFunctor, None, itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_SetFunctor, None, itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_GetPointer, None, itkClampImageFilterIF3ISS3_Superclass)
itkClampImageFilterIF3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_swigregister
itkClampImageFilterIF3ISS3_Superclass_swigregister(itkClampImageFilterIF3ISS3_Superclass)

def itkClampImageFilterIF3ISS3_Superclass___New_orig__() -> "itkClampImageFilterIF3ISS3_Superclass_Pointer":
    """itkClampImageFilterIF3ISS3_Superclass___New_orig__() -> itkClampImageFilterIF3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass___New_orig__()

def itkClampImageFilterIF3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3_Superclass *":
    """itkClampImageFilterIF3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Superclass_cast(obj)

class itkClampImageFilterIF3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    """Proxy of C++ itkClampImageFilterIF3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterIF3IUC3_Superclass self) -> itkClampImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< float,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIF3IUC3_Superclass self) -> itk::Functor::Clamp< float,unsigned char >
        GetFunctor(itkClampImageFilterIF3IUC3_Superclass self) -> itk::Functor::Clamp< float,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< float,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIF3IUC3_Superclass self, itk::Functor::Clamp< float,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF3IUC3_Superclass *":
        """GetPointer(itkClampImageFilterIF3IUC3_Superclass self) -> itkClampImageFilterIF3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_Clone, None, itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_GetFunctor, None, itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_SetFunctor, None, itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_GetPointer, None, itkClampImageFilterIF3IUC3_Superclass)
itkClampImageFilterIF3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_swigregister
itkClampImageFilterIF3IUC3_Superclass_swigregister(itkClampImageFilterIF3IUC3_Superclass)

def itkClampImageFilterIF3IUC3_Superclass___New_orig__() -> "itkClampImageFilterIF3IUC3_Superclass_Pointer":
    """itkClampImageFilterIF3IUC3_Superclass___New_orig__() -> itkClampImageFilterIF3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass___New_orig__()

def itkClampImageFilterIF3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3_Superclass *":
    """itkClampImageFilterIF3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Superclass_cast(obj)

class itkClampImageFilterISS2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    """Proxy of C++ itkClampImageFilterISS2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2IF2_Superclass self) -> itkClampImageFilterISS2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,float > const &":
        """
        GetFunctor(itkClampImageFilterISS2IF2_Superclass self) -> itk::Functor::Clamp< short,float >
        GetFunctor(itkClampImageFilterISS2IF2_Superclass self) -> itk::Functor::Clamp< short,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2IF2_Superclass self, itk::Functor::Clamp< short,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS2IF2_Superclass *":
        """GetPointer(itkClampImageFilterISS2IF2_Superclass self) -> itkClampImageFilterISS2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IF2_Superclass

        Create a new object of the class itkClampImageFilterISS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_Clone, None, itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_GetFunctor, None, itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_SetFunctor, None, itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_GetPointer, None, itkClampImageFilterISS2IF2_Superclass)
itkClampImageFilterISS2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_swigregister
itkClampImageFilterISS2IF2_Superclass_swigregister(itkClampImageFilterISS2IF2_Superclass)

def itkClampImageFilterISS2IF2_Superclass___New_orig__() -> "itkClampImageFilterISS2IF2_Superclass_Pointer":
    """itkClampImageFilterISS2IF2_Superclass___New_orig__() -> itkClampImageFilterISS2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass___New_orig__()

def itkClampImageFilterISS2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2_Superclass *":
    """itkClampImageFilterISS2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Superclass_cast(obj)

class itkClampImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkClampImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2ISS2_Superclass self) -> itkClampImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,short > const &":
        """
        GetFunctor(itkClampImageFilterISS2ISS2_Superclass self) -> itk::Functor::Clamp< short,short >
        GetFunctor(itkClampImageFilterISS2ISS2_Superclass self) -> itk::Functor::Clamp< short,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2ISS2_Superclass self, itk::Functor::Clamp< short,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS2ISS2_Superclass *":
        """GetPointer(itkClampImageFilterISS2ISS2_Superclass self) -> itkClampImageFilterISS2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ISS2_Superclass

        Create a new object of the class itkClampImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_Clone, None, itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_GetFunctor, None, itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_SetFunctor, None, itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_GetPointer, None, itkClampImageFilterISS2ISS2_Superclass)
itkClampImageFilterISS2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_swigregister
itkClampImageFilterISS2ISS2_Superclass_swigregister(itkClampImageFilterISS2ISS2_Superclass)

def itkClampImageFilterISS2ISS2_Superclass___New_orig__() -> "itkClampImageFilterISS2ISS2_Superclass_Pointer":
    """itkClampImageFilterISS2ISS2_Superclass___New_orig__() -> itkClampImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass___New_orig__()

def itkClampImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2_Superclass *":
    """itkClampImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Superclass_cast(obj)

class itkClampImageFilterISS2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    """Proxy of C++ itkClampImageFilterISS2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterISS2IUC2_Superclass self) -> itkClampImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterISS2IUC2_Superclass self) -> itk::Functor::Clamp< short,unsigned char >
        GetFunctor(itkClampImageFilterISS2IUC2_Superclass self) -> itk::Functor::Clamp< short,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS2IUC2_Superclass self, itk::Functor::Clamp< short,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS2IUC2_Superclass *":
        """GetPointer(itkClampImageFilterISS2IUC2_Superclass self) -> itkClampImageFilterISS2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUC2_Superclass

        Create a new object of the class itkClampImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_Clone, None, itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_GetFunctor, None, itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_SetFunctor, None, itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_GetPointer, None, itkClampImageFilterISS2IUC2_Superclass)
itkClampImageFilterISS2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_swigregister
itkClampImageFilterISS2IUC2_Superclass_swigregister(itkClampImageFilterISS2IUC2_Superclass)

def itkClampImageFilterISS2IUC2_Superclass___New_orig__() -> "itkClampImageFilterISS2IUC2_Superclass_Pointer":
    """itkClampImageFilterISS2IUC2_Superclass___New_orig__() -> itkClampImageFilterISS2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass___New_orig__()

def itkClampImageFilterISS2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2_Superclass *":
    """itkClampImageFilterISS2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Superclass_cast(obj)

class itkClampImageFilterISS3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    """Proxy of C++ itkClampImageFilterISS3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3IF3_Superclass self) -> itkClampImageFilterISS3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,float > const &":
        """
        GetFunctor(itkClampImageFilterISS3IF3_Superclass self) -> itk::Functor::Clamp< short,float >
        GetFunctor(itkClampImageFilterISS3IF3_Superclass self) -> itk::Functor::Clamp< short,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3IF3_Superclass self, itk::Functor::Clamp< short,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS3IF3_Superclass *":
        """GetPointer(itkClampImageFilterISS3IF3_Superclass self) -> itkClampImageFilterISS3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IF3_Superclass

        Create a new object of the class itkClampImageFilterISS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_Clone, None, itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_GetFunctor, None, itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_SetFunctor, None, itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_GetPointer, None, itkClampImageFilterISS3IF3_Superclass)
itkClampImageFilterISS3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_swigregister
itkClampImageFilterISS3IF3_Superclass_swigregister(itkClampImageFilterISS3IF3_Superclass)

def itkClampImageFilterISS3IF3_Superclass___New_orig__() -> "itkClampImageFilterISS3IF3_Superclass_Pointer":
    """itkClampImageFilterISS3IF3_Superclass___New_orig__() -> itkClampImageFilterISS3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass___New_orig__()

def itkClampImageFilterISS3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3_Superclass *":
    """itkClampImageFilterISS3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Superclass_cast(obj)

class itkClampImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkClampImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3ISS3_Superclass self) -> itkClampImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,short > const &":
        """
        GetFunctor(itkClampImageFilterISS3ISS3_Superclass self) -> itk::Functor::Clamp< short,short >
        GetFunctor(itkClampImageFilterISS3ISS3_Superclass self) -> itk::Functor::Clamp< short,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3ISS3_Superclass self, itk::Functor::Clamp< short,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS3ISS3_Superclass *":
        """GetPointer(itkClampImageFilterISS3ISS3_Superclass self) -> itkClampImageFilterISS3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ISS3_Superclass

        Create a new object of the class itkClampImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_Clone, None, itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_GetFunctor, None, itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_SetFunctor, None, itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_GetPointer, None, itkClampImageFilterISS3ISS3_Superclass)
itkClampImageFilterISS3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_swigregister
itkClampImageFilterISS3ISS3_Superclass_swigregister(itkClampImageFilterISS3ISS3_Superclass)

def itkClampImageFilterISS3ISS3_Superclass___New_orig__() -> "itkClampImageFilterISS3ISS3_Superclass_Pointer":
    """itkClampImageFilterISS3ISS3_Superclass___New_orig__() -> itkClampImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass___New_orig__()

def itkClampImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3_Superclass *":
    """itkClampImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Superclass_cast(obj)

class itkClampImageFilterISS3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    """Proxy of C++ itkClampImageFilterISS3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterISS3IUC3_Superclass self) -> itkClampImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< short,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterISS3IUC3_Superclass self) -> itk::Functor::Clamp< short,unsigned char >
        GetFunctor(itkClampImageFilterISS3IUC3_Superclass self) -> itk::Functor::Clamp< short,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< short,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterISS3IUC3_Superclass self, itk::Functor::Clamp< short,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS3IUC3_Superclass *":
        """GetPointer(itkClampImageFilterISS3IUC3_Superclass self) -> itkClampImageFilterISS3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUC3_Superclass

        Create a new object of the class itkClampImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_Clone, None, itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_GetFunctor, None, itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_SetFunctor, None, itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_GetPointer, None, itkClampImageFilterISS3IUC3_Superclass)
itkClampImageFilterISS3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_swigregister
itkClampImageFilterISS3IUC3_Superclass_swigregister(itkClampImageFilterISS3IUC3_Superclass)

def itkClampImageFilterISS3IUC3_Superclass___New_orig__() -> "itkClampImageFilterISS3IUC3_Superclass_Pointer":
    """itkClampImageFilterISS3IUC3_Superclass___New_orig__() -> itkClampImageFilterISS3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass___New_orig__()

def itkClampImageFilterISS3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3_Superclass *":
    """itkClampImageFilterISS3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Superclass_cast(obj)

class itkClampImageFilterIUC2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    """Proxy of C++ itkClampImageFilterIUC2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IF2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IF2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2IF2_Superclass self) -> itkClampImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,float > const &":
        """
        GetFunctor(itkClampImageFilterIUC2IF2_Superclass self) -> itk::Functor::Clamp< unsigned char,float >
        GetFunctor(itkClampImageFilterIUC2IF2_Superclass self) -> itk::Functor::Clamp< unsigned char,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2IF2_Superclass self, itk::Functor::Clamp< unsigned char,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC2IF2_Superclass *":
        """GetPointer(itkClampImageFilterIUC2IF2_Superclass self) -> itkClampImageFilterIUC2IF2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IF2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IF2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_Clone, None, itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_GetFunctor, None, itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_SetFunctor, None, itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_GetPointer, None, itkClampImageFilterIUC2IF2_Superclass)
itkClampImageFilterIUC2IF2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_swigregister
itkClampImageFilterIUC2IF2_Superclass_swigregister(itkClampImageFilterIUC2IF2_Superclass)

def itkClampImageFilterIUC2IF2_Superclass___New_orig__() -> "itkClampImageFilterIUC2IF2_Superclass_Pointer":
    """itkClampImageFilterIUC2IF2_Superclass___New_orig__() -> itkClampImageFilterIUC2IF2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass___New_orig__()

def itkClampImageFilterIUC2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2_Superclass *":
    """itkClampImageFilterIUC2IF2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Superclass_cast(obj)

class itkClampImageFilterIUC2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    """Proxy of C++ itkClampImageFilterIUC2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2ISS2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2ISS2_Superclass self) -> itkClampImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,short > const &":
        """
        GetFunctor(itkClampImageFilterIUC2ISS2_Superclass self) -> itk::Functor::Clamp< unsigned char,short >
        GetFunctor(itkClampImageFilterIUC2ISS2_Superclass self) -> itk::Functor::Clamp< unsigned char,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2ISS2_Superclass self, itk::Functor::Clamp< unsigned char,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC2ISS2_Superclass *":
        """GetPointer(itkClampImageFilterIUC2ISS2_Superclass self) -> itkClampImageFilterIUC2ISS2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ISS2_Superclass

        Create a new object of the class itkClampImageFilterIUC2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2ISS2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_Clone, None, itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_GetFunctor, None, itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_SetFunctor, None, itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_GetPointer, None, itkClampImageFilterIUC2ISS2_Superclass)
itkClampImageFilterIUC2ISS2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_swigregister
itkClampImageFilterIUC2ISS2_Superclass_swigregister(itkClampImageFilterIUC2ISS2_Superclass)

def itkClampImageFilterIUC2ISS2_Superclass___New_orig__() -> "itkClampImageFilterIUC2ISS2_Superclass_Pointer":
    """itkClampImageFilterIUC2ISS2_Superclass___New_orig__() -> itkClampImageFilterIUC2ISS2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass___New_orig__()

def itkClampImageFilterIUC2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2_Superclass *":
    """itkClampImageFilterIUC2ISS2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Superclass_cast(obj)

class itkClampImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkClampImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC2IUC2_Superclass self) -> itkClampImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIUC2IUC2_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char >
        GetFunctor(itkClampImageFilterIUC2IUC2_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC2IUC2_Superclass self, itk::Functor::Clamp< unsigned char,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC2IUC2_Superclass *":
        """GetPointer(itkClampImageFilterIUC2IUC2_Superclass self) -> itkClampImageFilterIUC2IUC2_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkClampImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_Clone, None, itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_GetPointer, None, itkClampImageFilterIUC2IUC2_Superclass)
itkClampImageFilterIUC2IUC2_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_swigregister
itkClampImageFilterIUC2IUC2_Superclass_swigregister(itkClampImageFilterIUC2IUC2_Superclass)

def itkClampImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkClampImageFilterIUC2IUC2_Superclass_Pointer":
    """itkClampImageFilterIUC2IUC2_Superclass___New_orig__() -> itkClampImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass___New_orig__()

def itkClampImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2_Superclass *":
    """itkClampImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Superclass_cast(obj)

class itkClampImageFilterIUC3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    """Proxy of C++ itkClampImageFilterIUC3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IF3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IF3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3IF3_Superclass self) -> itkClampImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,float > const &":
        """
        GetFunctor(itkClampImageFilterIUC3IF3_Superclass self) -> itk::Functor::Clamp< unsigned char,float >
        GetFunctor(itkClampImageFilterIUC3IF3_Superclass self) -> itk::Functor::Clamp< unsigned char,float > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,float > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3IF3_Superclass self, itk::Functor::Clamp< unsigned char,float > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC3IF3_Superclass *":
        """GetPointer(itkClampImageFilterIUC3IF3_Superclass self) -> itkClampImageFilterIUC3IF3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IF3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IF3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_Clone, None, itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_GetFunctor, None, itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_SetFunctor, None, itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_GetPointer, None, itkClampImageFilterIUC3IF3_Superclass)
itkClampImageFilterIUC3IF3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_swigregister
itkClampImageFilterIUC3IF3_Superclass_swigregister(itkClampImageFilterIUC3IF3_Superclass)

def itkClampImageFilterIUC3IF3_Superclass___New_orig__() -> "itkClampImageFilterIUC3IF3_Superclass_Pointer":
    """itkClampImageFilterIUC3IF3_Superclass___New_orig__() -> itkClampImageFilterIUC3IF3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass___New_orig__()

def itkClampImageFilterIUC3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3_Superclass *":
    """itkClampImageFilterIUC3IF3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Superclass_cast(obj)

class itkClampImageFilterIUC3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    """Proxy of C++ itkClampImageFilterIUC3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3ISS3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3ISS3_Superclass self) -> itkClampImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,short > const &":
        """
        GetFunctor(itkClampImageFilterIUC3ISS3_Superclass self) -> itk::Functor::Clamp< unsigned char,short >
        GetFunctor(itkClampImageFilterIUC3ISS3_Superclass self) -> itk::Functor::Clamp< unsigned char,short > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,short > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3ISS3_Superclass self, itk::Functor::Clamp< unsigned char,short > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC3ISS3_Superclass *":
        """GetPointer(itkClampImageFilterIUC3ISS3_Superclass self) -> itkClampImageFilterIUC3ISS3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ISS3_Superclass

        Create a new object of the class itkClampImageFilterIUC3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3ISS3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_Clone, None, itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_GetFunctor, None, itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_SetFunctor, None, itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_GetPointer, None, itkClampImageFilterIUC3ISS3_Superclass)
itkClampImageFilterIUC3ISS3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_swigregister
itkClampImageFilterIUC3ISS3_Superclass_swigregister(itkClampImageFilterIUC3ISS3_Superclass)

def itkClampImageFilterIUC3ISS3_Superclass___New_orig__() -> "itkClampImageFilterIUC3ISS3_Superclass_Pointer":
    """itkClampImageFilterIUC3ISS3_Superclass___New_orig__() -> itkClampImageFilterIUC3ISS3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass___New_orig__()

def itkClampImageFilterIUC3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3_Superclass *":
    """itkClampImageFilterIUC3ISS3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Superclass_cast(obj)

class itkClampImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkClampImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkClampImageFilterIUC3IUC3_Superclass self) -> itkClampImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::Clamp< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkClampImageFilterIUC3IUC3_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char >
        GetFunctor(itkClampImageFilterIUC3IUC3_Superclass self) -> itk::Functor::Clamp< unsigned char,unsigned char > const &
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Clamp< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkClampImageFilterIUC3IUC3_Superclass self, itk::Functor::Clamp< unsigned char,unsigned char > const & functor)"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC3IUC3_Superclass *":
        """GetPointer(itkClampImageFilterIUC3IUC3_Superclass self) -> itkClampImageFilterIUC3IUC3_Superclass"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkClampImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_Clone, None, itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_GetPointer, None, itkClampImageFilterIUC3IUC3_Superclass)
itkClampImageFilterIUC3IUC3_Superclass_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_swigregister
itkClampImageFilterIUC3IUC3_Superclass_swigregister(itkClampImageFilterIUC3IUC3_Superclass)

def itkClampImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkClampImageFilterIUC3IUC3_Superclass_Pointer":
    """itkClampImageFilterIUC3IUC3_Superclass___New_orig__() -> itkClampImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass___New_orig__()

def itkClampImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3_Superclass *":
    """itkClampImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3_Superclass"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Superclass_cast(obj)

class itkClampImageFilterIF2IF2(itkClampImageFilterIF2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IF2_Pointer":
        """Clone(itkClampImageFilterIF2IF2 self) -> itkClampImageFilterIF2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIF2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIF2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF2IF2 *":
        """GetPointer(itkClampImageFilterIF2IF2 self) -> itkClampImageFilterIF2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IF2

        Create a new object of the class itkClampImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_Clone, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetLowerBound, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetUpperBound, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_SetBounds, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IF2_GetPointer, None, itkClampImageFilterIF2IF2)
itkClampImageFilterIF2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IF2_swigregister
itkClampImageFilterIF2IF2_swigregister(itkClampImageFilterIF2IF2)

def itkClampImageFilterIF2IF2___New_orig__() -> "itkClampImageFilterIF2IF2_Pointer":
    """itkClampImageFilterIF2IF2___New_orig__() -> itkClampImageFilterIF2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2___New_orig__()

def itkClampImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IF2 *":
    """itkClampImageFilterIF2IF2_cast(itkLightObject obj) -> itkClampImageFilterIF2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IF2_cast(obj)

class itkClampImageFilterIF2ISS2(itkClampImageFilterIF2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2ISS2_Pointer":
        """Clone(itkClampImageFilterIF2ISS2 self) -> itkClampImageFilterIF2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIF2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIF2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF2ISS2 *":
        """GetPointer(itkClampImageFilterIF2ISS2 self) -> itkClampImageFilterIF2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2ISS2

        Create a new object of the class itkClampImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_Clone, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetLowerBound, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetUpperBound, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_SetBounds, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2ISS2_GetPointer, None, itkClampImageFilterIF2ISS2)
itkClampImageFilterIF2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_swigregister
itkClampImageFilterIF2ISS2_swigregister(itkClampImageFilterIF2ISS2)

def itkClampImageFilterIF2ISS2___New_orig__() -> "itkClampImageFilterIF2ISS2_Pointer":
    """itkClampImageFilterIF2ISS2___New_orig__() -> itkClampImageFilterIF2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2___New_orig__()

def itkClampImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2ISS2 *":
    """itkClampImageFilterIF2ISS2_cast(itkLightObject obj) -> itkClampImageFilterIF2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2ISS2_cast(obj)

class itkClampImageFilterIF2IUC2(itkClampImageFilterIF2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterIF2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF2IUC2_Pointer":
        """Clone(itkClampImageFilterIF2IUC2 self) -> itkClampImageFilterIF2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIF2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIF2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIF2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF2IUC2 *":
        """GetPointer(itkClampImageFilterIF2IUC2 self) -> itkClampImageFilterIF2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF2IUC2

        Create a new object of the class itkClampImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_Clone, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetLowerBound, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetUpperBound, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_SetBounds, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF2IUC2_GetPointer, None, itkClampImageFilterIF2IUC2)
itkClampImageFilterIF2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_swigregister
itkClampImageFilterIF2IUC2_swigregister(itkClampImageFilterIF2IUC2)

def itkClampImageFilterIF2IUC2___New_orig__() -> "itkClampImageFilterIF2IUC2_Pointer":
    """itkClampImageFilterIF2IUC2___New_orig__() -> itkClampImageFilterIF2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2___New_orig__()

def itkClampImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF2IUC2 *":
    """itkClampImageFilterIF2IUC2_cast(itkLightObject obj) -> itkClampImageFilterIF2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterIF2IUC2_cast(obj)

class itkClampImageFilterIF3IF3(itkClampImageFilterIF3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IF3_Pointer":
        """Clone(itkClampImageFilterIF3IF3 self) -> itkClampImageFilterIF3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIF3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIF3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF3IF3 *":
        """GetPointer(itkClampImageFilterIF3IF3 self) -> itkClampImageFilterIF3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IF3

        Create a new object of the class itkClampImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_Clone, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetLowerBound, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetUpperBound, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_SetBounds, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IF3_GetPointer, None, itkClampImageFilterIF3IF3)
itkClampImageFilterIF3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IF3_swigregister
itkClampImageFilterIF3IF3_swigregister(itkClampImageFilterIF3IF3)

def itkClampImageFilterIF3IF3___New_orig__() -> "itkClampImageFilterIF3IF3_Pointer":
    """itkClampImageFilterIF3IF3___New_orig__() -> itkClampImageFilterIF3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3___New_orig__()

def itkClampImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IF3 *":
    """itkClampImageFilterIF3IF3_cast(itkLightObject obj) -> itkClampImageFilterIF3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IF3_cast(obj)

class itkClampImageFilterIF3ISS3(itkClampImageFilterIF3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3ISS3_Pointer":
        """Clone(itkClampImageFilterIF3ISS3 self) -> itkClampImageFilterIF3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIF3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIF3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF3ISS3 *":
        """GetPointer(itkClampImageFilterIF3ISS3 self) -> itkClampImageFilterIF3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3ISS3

        Create a new object of the class itkClampImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_Clone, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetLowerBound, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetUpperBound, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_SetBounds, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3ISS3_GetPointer, None, itkClampImageFilterIF3ISS3)
itkClampImageFilterIF3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_swigregister
itkClampImageFilterIF3ISS3_swigregister(itkClampImageFilterIF3ISS3)

def itkClampImageFilterIF3ISS3___New_orig__() -> "itkClampImageFilterIF3ISS3_Pointer":
    """itkClampImageFilterIF3ISS3___New_orig__() -> itkClampImageFilterIF3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3___New_orig__()

def itkClampImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3ISS3 *":
    """itkClampImageFilterIF3ISS3_cast(itkLightObject obj) -> itkClampImageFilterIF3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3ISS3_cast(obj)

class itkClampImageFilterIF3IUC3(itkClampImageFilterIF3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterIF3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIF3IUC3_Pointer":
        """Clone(itkClampImageFilterIF3IUC3 self) -> itkClampImageFilterIF3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIF3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIF3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIF3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIF3IUC3 *":
        """GetPointer(itkClampImageFilterIF3IUC3 self) -> itkClampImageFilterIF3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIF3IUC3

        Create a new object of the class itkClampImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIF3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_Clone, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetLowerBound, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetUpperBound, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_SetBounds, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIF3IUC3_GetPointer, None, itkClampImageFilterIF3IUC3)
itkClampImageFilterIF3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_swigregister
itkClampImageFilterIF3IUC3_swigregister(itkClampImageFilterIF3IUC3)

def itkClampImageFilterIF3IUC3___New_orig__() -> "itkClampImageFilterIF3IUC3_Pointer":
    """itkClampImageFilterIF3IUC3___New_orig__() -> itkClampImageFilterIF3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3___New_orig__()

def itkClampImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIF3IUC3 *":
    """itkClampImageFilterIF3IUC3_cast(itkLightObject obj) -> itkClampImageFilterIF3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterIF3IUC3_cast(obj)

class itkClampImageFilterISS2IF2(itkClampImageFilterISS2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IF2_Pointer":
        """Clone(itkClampImageFilterISS2IF2 self) -> itkClampImageFilterISS2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterISS2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterISS2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS2IF2 *":
        """GetPointer(itkClampImageFilterISS2IF2 self) -> itkClampImageFilterISS2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IF2

        Create a new object of the class itkClampImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_Clone, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetLowerBound, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetUpperBound, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_SetBounds, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IF2_GetPointer, None, itkClampImageFilterISS2IF2)
itkClampImageFilterISS2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IF2_swigregister
itkClampImageFilterISS2IF2_swigregister(itkClampImageFilterISS2IF2)

def itkClampImageFilterISS2IF2___New_orig__() -> "itkClampImageFilterISS2IF2_Pointer":
    """itkClampImageFilterISS2IF2___New_orig__() -> itkClampImageFilterISS2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2___New_orig__()

def itkClampImageFilterISS2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IF2 *":
    """itkClampImageFilterISS2IF2_cast(itkLightObject obj) -> itkClampImageFilterISS2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IF2_cast(obj)

class itkClampImageFilterISS2ISS2(itkClampImageFilterISS2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2ISS2_Pointer":
        """Clone(itkClampImageFilterISS2ISS2 self) -> itkClampImageFilterISS2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterISS2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterISS2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS2ISS2 *":
        """GetPointer(itkClampImageFilterISS2ISS2 self) -> itkClampImageFilterISS2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2ISS2

        Create a new object of the class itkClampImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_Clone, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetLowerBound, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetUpperBound, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_SetBounds, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2ISS2_GetPointer, None, itkClampImageFilterISS2ISS2)
itkClampImageFilterISS2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_swigregister
itkClampImageFilterISS2ISS2_swigregister(itkClampImageFilterISS2ISS2)

def itkClampImageFilterISS2ISS2___New_orig__() -> "itkClampImageFilterISS2ISS2_Pointer":
    """itkClampImageFilterISS2ISS2___New_orig__() -> itkClampImageFilterISS2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2___New_orig__()

def itkClampImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2ISS2 *":
    """itkClampImageFilterISS2ISS2_cast(itkLightObject obj) -> itkClampImageFilterISS2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2ISS2_cast(obj)

class itkClampImageFilterISS2IUC2(itkClampImageFilterISS2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterISS2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS2IUC2_Pointer":
        """Clone(itkClampImageFilterISS2IUC2 self) -> itkClampImageFilterISS2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterISS2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterISS2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterISS2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS2IUC2 *":
        """GetPointer(itkClampImageFilterISS2IUC2 self) -> itkClampImageFilterISS2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS2IUC2

        Create a new object of the class itkClampImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_Clone, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetLowerBound, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetUpperBound, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_SetBounds, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS2IUC2_GetPointer, None, itkClampImageFilterISS2IUC2)
itkClampImageFilterISS2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_swigregister
itkClampImageFilterISS2IUC2_swigregister(itkClampImageFilterISS2IUC2)

def itkClampImageFilterISS2IUC2___New_orig__() -> "itkClampImageFilterISS2IUC2_Pointer":
    """itkClampImageFilterISS2IUC2___New_orig__() -> itkClampImageFilterISS2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2___New_orig__()

def itkClampImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS2IUC2 *":
    """itkClampImageFilterISS2IUC2_cast(itkLightObject obj) -> itkClampImageFilterISS2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterISS2IUC2_cast(obj)

class itkClampImageFilterISS3IF3(itkClampImageFilterISS3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IF3_Pointer":
        """Clone(itkClampImageFilterISS3IF3 self) -> itkClampImageFilterISS3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterISS3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterISS3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS3IF3 *":
        """GetPointer(itkClampImageFilterISS3IF3 self) -> itkClampImageFilterISS3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IF3

        Create a new object of the class itkClampImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_Clone, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetLowerBound, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetUpperBound, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_SetBounds, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IF3_GetPointer, None, itkClampImageFilterISS3IF3)
itkClampImageFilterISS3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IF3_swigregister
itkClampImageFilterISS3IF3_swigregister(itkClampImageFilterISS3IF3)

def itkClampImageFilterISS3IF3___New_orig__() -> "itkClampImageFilterISS3IF3_Pointer":
    """itkClampImageFilterISS3IF3___New_orig__() -> itkClampImageFilterISS3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3___New_orig__()

def itkClampImageFilterISS3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IF3 *":
    """itkClampImageFilterISS3IF3_cast(itkLightObject obj) -> itkClampImageFilterISS3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IF3_cast(obj)

class itkClampImageFilterISS3ISS3(itkClampImageFilterISS3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3ISS3_Pointer":
        """Clone(itkClampImageFilterISS3ISS3 self) -> itkClampImageFilterISS3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterISS3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterISS3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS3ISS3 *":
        """GetPointer(itkClampImageFilterISS3ISS3 self) -> itkClampImageFilterISS3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3ISS3

        Create a new object of the class itkClampImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_Clone, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetLowerBound, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetUpperBound, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_SetBounds, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3ISS3_GetPointer, None, itkClampImageFilterISS3ISS3)
itkClampImageFilterISS3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_swigregister
itkClampImageFilterISS3ISS3_swigregister(itkClampImageFilterISS3ISS3)

def itkClampImageFilterISS3ISS3___New_orig__() -> "itkClampImageFilterISS3ISS3_Pointer":
    """itkClampImageFilterISS3ISS3___New_orig__() -> itkClampImageFilterISS3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3___New_orig__()

def itkClampImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3ISS3 *":
    """itkClampImageFilterISS3ISS3_cast(itkLightObject obj) -> itkClampImageFilterISS3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3ISS3_cast(obj)

class itkClampImageFilterISS3IUC3(itkClampImageFilterISS3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterISS3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterISS3IUC3_Pointer":
        """Clone(itkClampImageFilterISS3IUC3 self) -> itkClampImageFilterISS3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterISS3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterISS3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterISS3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterISS3IUC3 *":
        """GetPointer(itkClampImageFilterISS3IUC3 self) -> itkClampImageFilterISS3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterISS3IUC3

        Create a new object of the class itkClampImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterISS3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_Clone, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetLowerBound, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetUpperBound, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_SetBounds, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterISS3IUC3_GetPointer, None, itkClampImageFilterISS3IUC3)
itkClampImageFilterISS3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_swigregister
itkClampImageFilterISS3IUC3_swigregister(itkClampImageFilterISS3IUC3)

def itkClampImageFilterISS3IUC3___New_orig__() -> "itkClampImageFilterISS3IUC3_Pointer":
    """itkClampImageFilterISS3IUC3___New_orig__() -> itkClampImageFilterISS3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3___New_orig__()

def itkClampImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterISS3IUC3 *":
    """itkClampImageFilterISS3IUC3_cast(itkLightObject obj) -> itkClampImageFilterISS3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterISS3IUC3_cast(obj)

class itkClampImageFilterIUC2IF2(itkClampImageFilterIUC2IF2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IF2_Pointer":
        """Clone(itkClampImageFilterIUC2IF2 self) -> itkClampImageFilterIUC2IF2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIUC2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIUC2IF2 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2IF2 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC2IF2 *":
        """GetPointer(itkClampImageFilterIUC2IF2 self) -> itkClampImageFilterIUC2IF2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IF2

        Create a new object of the class itkClampImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IF2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_Clone, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetLowerBound, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetUpperBound, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_SetBounds, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IF2_GetPointer, None, itkClampImageFilterIUC2IF2)
itkClampImageFilterIUC2IF2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_swigregister
itkClampImageFilterIUC2IF2_swigregister(itkClampImageFilterIUC2IF2)

def itkClampImageFilterIUC2IF2___New_orig__() -> "itkClampImageFilterIUC2IF2_Pointer":
    """itkClampImageFilterIUC2IF2___New_orig__() -> itkClampImageFilterIUC2IF2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2___New_orig__()

def itkClampImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IF2 *":
    """itkClampImageFilterIUC2IF2_cast(itkLightObject obj) -> itkClampImageFilterIUC2IF2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IF2_cast(obj)

class itkClampImageFilterIUC2ISS2(itkClampImageFilterIUC2ISS2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2ISS2_Pointer":
        """Clone(itkClampImageFilterIUC2ISS2 self) -> itkClampImageFilterIUC2ISS2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIUC2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIUC2ISS2 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2ISS2 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC2ISS2 *":
        """GetPointer(itkClampImageFilterIUC2ISS2 self) -> itkClampImageFilterIUC2ISS2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2ISS2

        Create a new object of the class itkClampImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2ISS2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_Clone, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetLowerBound, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetUpperBound, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_SetBounds, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_GetPointer, None, itkClampImageFilterIUC2ISS2)
itkClampImageFilterIUC2ISS2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_swigregister
itkClampImageFilterIUC2ISS2_swigregister(itkClampImageFilterIUC2ISS2)

def itkClampImageFilterIUC2ISS2___New_orig__() -> "itkClampImageFilterIUC2ISS2_Pointer":
    """itkClampImageFilterIUC2ISS2___New_orig__() -> itkClampImageFilterIUC2ISS2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2___New_orig__()

def itkClampImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2ISS2 *":
    """itkClampImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkClampImageFilterIUC2ISS2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2ISS2_cast(obj)

class itkClampImageFilterIUC2IUC2(itkClampImageFilterIUC2IUC2_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC2IUC2_Pointer":
        """Clone(itkClampImageFilterIUC2IUC2 self) -> itkClampImageFilterIUC2IUC2_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC2IUC2 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC2IUC2 *":
        """GetPointer(itkClampImageFilterIUC2IUC2 self) -> itkClampImageFilterIUC2IUC2"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC2IUC2

        Create a new object of the class itkClampImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC2IUC2.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_Clone, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetLowerBound, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetUpperBound, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_SetBounds, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_GetPointer, None, itkClampImageFilterIUC2IUC2)
itkClampImageFilterIUC2IUC2_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_swigregister
itkClampImageFilterIUC2IUC2_swigregister(itkClampImageFilterIUC2IUC2)

def itkClampImageFilterIUC2IUC2___New_orig__() -> "itkClampImageFilterIUC2IUC2_Pointer":
    """itkClampImageFilterIUC2IUC2___New_orig__() -> itkClampImageFilterIUC2IUC2_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2___New_orig__()

def itkClampImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC2IUC2 *":
    """itkClampImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkClampImageFilterIUC2IUC2"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC2IUC2_cast(obj)

class itkClampImageFilterIUC3IF3(itkClampImageFilterIUC3IF3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IF3_Pointer":
        """Clone(itkClampImageFilterIUC3IF3 self) -> itkClampImageFilterIUC3IF3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Clone(self)


    def GetLowerBound(self) -> "float":
        """GetLowerBound(itkClampImageFilterIUC3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetLowerBound(self)


    def GetUpperBound(self) -> "float":
        """GetUpperBound(itkClampImageFilterIUC3IF3 self) -> float"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'float const', upperBound: 'float const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3IF3 self, float const lowerBound, float const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC3IF3 *":
        """GetPointer(itkClampImageFilterIUC3IF3 self) -> itkClampImageFilterIUC3IF3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IF3

        Create a new object of the class itkClampImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IF3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_Clone, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetLowerBound, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetUpperBound, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_SetBounds, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IF3_GetPointer, None, itkClampImageFilterIUC3IF3)
itkClampImageFilterIUC3IF3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_swigregister
itkClampImageFilterIUC3IF3_swigregister(itkClampImageFilterIUC3IF3)

def itkClampImageFilterIUC3IF3___New_orig__() -> "itkClampImageFilterIUC3IF3_Pointer":
    """itkClampImageFilterIUC3IF3___New_orig__() -> itkClampImageFilterIUC3IF3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3___New_orig__()

def itkClampImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IF3 *":
    """itkClampImageFilterIUC3IF3_cast(itkLightObject obj) -> itkClampImageFilterIUC3IF3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IF3_cast(obj)

class itkClampImageFilterIUC3ISS3(itkClampImageFilterIUC3ISS3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3ISS3_Pointer":
        """Clone(itkClampImageFilterIUC3ISS3 self) -> itkClampImageFilterIUC3ISS3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Clone(self)


    def GetLowerBound(self) -> "short":
        """GetLowerBound(itkClampImageFilterIUC3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetLowerBound(self)


    def GetUpperBound(self) -> "short":
        """GetUpperBound(itkClampImageFilterIUC3ISS3 self) -> short"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'short const', upperBound: 'short const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3ISS3 self, short const lowerBound, short const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC3ISS3 *":
        """GetPointer(itkClampImageFilterIUC3ISS3 self) -> itkClampImageFilterIUC3ISS3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3ISS3

        Create a new object of the class itkClampImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3ISS3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_Clone, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetLowerBound, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetUpperBound, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_SetBounds, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_GetPointer, None, itkClampImageFilterIUC3ISS3)
itkClampImageFilterIUC3ISS3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_swigregister
itkClampImageFilterIUC3ISS3_swigregister(itkClampImageFilterIUC3ISS3)

def itkClampImageFilterIUC3ISS3___New_orig__() -> "itkClampImageFilterIUC3ISS3_Pointer":
    """itkClampImageFilterIUC3ISS3___New_orig__() -> itkClampImageFilterIUC3ISS3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3___New_orig__()

def itkClampImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3ISS3 *":
    """itkClampImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkClampImageFilterIUC3ISS3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3ISS3_cast(obj)

class itkClampImageFilterIUC3IUC3(itkClampImageFilterIUC3IUC3_Superclass):
    """


    Casts input pixels to output pixel type and clamps the output pixel
    values to a specified range.

    Default range corresponds to the range supported by the pixel type of
    the output image.

    This filter is templated over the input image type and the output
    image type.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  UnaryFunctorImageFilter

    See:  CastImageFilter Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/ClampImageFilter
    Cast an image from one type to another but clamp to the output value
    range

    C++ includes: itkClampImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkClampImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkClampImageFilterIUC3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkClampImageFilterIUC3IUC3_Pointer":
        """Clone(itkClampImageFilterIUC3IUC3 self) -> itkClampImageFilterIUC3IUC3_Pointer"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Clone(self)


    def GetLowerBound(self) -> "unsigned char":
        """GetLowerBound(itkClampImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetLowerBound(self)


    def GetUpperBound(self) -> "unsigned char":
        """GetUpperBound(itkClampImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetUpperBound(self)


    def SetBounds(self, lowerBound: 'unsigned char const', upperBound: 'unsigned char const') -> "void":
        """
        SetBounds(itkClampImageFilterIUC3IUC3 self, unsigned char const lowerBound, unsigned char const upperBound)

        Set the bounds of the
        range in which the data will be clamped. If the lower-bound is greater
        than the upper-bound, an itk::ExceptionObject will be thrown. 
        """
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_SetBounds(self, lowerBound, upperBound)

    __swig_destroy__ = _itkClampImageFilterPython.delete_itkClampImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkClampImageFilterIUC3IUC3 *":
        """GetPointer(itkClampImageFilterIUC3IUC3 self) -> itkClampImageFilterIUC3IUC3"""
        return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkClampImageFilterIUC3IUC3

        Create a new object of the class itkClampImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkClampImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkClampImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkClampImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkClampImageFilterIUC3IUC3.Clone = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_Clone, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3.GetLowerBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetLowerBound, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3.GetUpperBound = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetUpperBound, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3.SetBounds = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_SetBounds, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_GetPointer, None, itkClampImageFilterIUC3IUC3)
itkClampImageFilterIUC3IUC3_swigregister = _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_swigregister
itkClampImageFilterIUC3IUC3_swigregister(itkClampImageFilterIUC3IUC3)

def itkClampImageFilterIUC3IUC3___New_orig__() -> "itkClampImageFilterIUC3IUC3_Pointer":
    """itkClampImageFilterIUC3IUC3___New_orig__() -> itkClampImageFilterIUC3IUC3_Pointer"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3___New_orig__()

def itkClampImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkClampImageFilterIUC3IUC3 *":
    """itkClampImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkClampImageFilterIUC3IUC3"""
    return _itkClampImageFilterPython.itkClampImageFilterIUC3IUC3_cast(obj)



