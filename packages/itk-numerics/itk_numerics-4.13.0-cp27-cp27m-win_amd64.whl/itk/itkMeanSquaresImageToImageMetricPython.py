# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMeanSquaresImageToImageMetricPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkMeanSquaresImageToImageMetricPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkMeanSquaresImageToImageMetricPython')
    _itkMeanSquaresImageToImageMetricPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMeanSquaresImageToImageMetricPython', [dirname(__file__)])
        except ImportError:
            import _itkMeanSquaresImageToImageMetricPython
            return _itkMeanSquaresImageToImageMetricPython
        try:
            _mod = imp.load_module('_itkMeanSquaresImageToImageMetricPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkMeanSquaresImageToImageMetricPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMeanSquaresImageToImageMetricPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkOptimizerParametersPython
import itkArrayPython
import ITKCommonBasePython
import itkPointPython
import itkImageToImageMetricPython
import itkSpatialObjectBasePython
import itkAffineGeometryFramePython
import itkScalableAffineTransformPython
import itkAffineTransformPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkTransformBasePython
import itkDiffusionTensor3DPython
import itkSymmetricSecondRankTensorPython
import itkArray2DPython
import itkVariableLengthVectorPython
import itkMatrixOffsetTransformBasePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImageRegionPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import ITKCostFunctionsPython
import vnl_cost_functionPython
import vnl_unary_functionPython
import vnl_least_squares_functionPython
import itkCostFunctionPython
import itkImagePython
import itkRGBPixelPython
import itkInterpolateImageFunctionPython
import itkImageFunctionBasePython
import itkFunctionBasePython

def itkMeanSquaresImageToImageMetricIF3IF3_New():
  return itkMeanSquaresImageToImageMetricIF3IF3.New()


def itkMeanSquaresImageToImageMetricIF2IF2_New():
  return itkMeanSquaresImageToImageMetricIF2IF2.New()


def itkMeanSquaresImageToImageMetricIUC3IUC3_New():
  return itkMeanSquaresImageToImageMetricIUC3IUC3.New()


def itkMeanSquaresImageToImageMetricIUC2IUC2_New():
  return itkMeanSquaresImageToImageMetricIUC2IUC2.New()


def itkMeanSquaresImageToImageMetricISS3ISS3_New():
  return itkMeanSquaresImageToImageMetricISS3ISS3.New()


def itkMeanSquaresImageToImageMetricISS2ISS2_New():
  return itkMeanSquaresImageToImageMetricISS2ISS2.New()

class itkMeanSquaresImageToImageMetricIF2IF2(itkImageToImageMetricPython.itkImageToImageMetricIF2IF2):
    """


    TODO.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/Metrics/MeanSquaresImageToImageM
    etric Compute the mean squares metric between two images

    C++ includes: itkMeanSquaresImageToImageMetric.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMeanSquaresImageToImageMetricIF2IF2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMeanSquaresImageToImageMetricIF2IF2 self) -> itkMeanSquaresImageToImageMetricIF2IF2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_Clone(self)

    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF2IF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF2IF2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMeanSquaresImageToImageMetricIF2IF2 self) -> itkMeanSquaresImageToImageMetricIF2IF2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF2IF2

        Create a new object of the class itkMeanSquaresImageToImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIF2IF2.Clone = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_Clone, None, itkMeanSquaresImageToImageMetricIF2IF2)
itkMeanSquaresImageToImageMetricIF2IF2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_GetPointer, None, itkMeanSquaresImageToImageMetricIF2IF2)
itkMeanSquaresImageToImageMetricIF2IF2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_swigregister
itkMeanSquaresImageToImageMetricIF2IF2_swigregister(itkMeanSquaresImageToImageMetricIF2IF2)

def itkMeanSquaresImageToImageMetricIF2IF2___New_orig__():
    """itkMeanSquaresImageToImageMetricIF2IF2___New_orig__() -> itkMeanSquaresImageToImageMetricIF2IF2_Pointer"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2___New_orig__()

def itkMeanSquaresImageToImageMetricIF2IF2_cast(obj):
    """itkMeanSquaresImageToImageMetricIF2IF2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF2IF2"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_cast(obj)

class itkMeanSquaresImageToImageMetricIF3IF3(itkImageToImageMetricPython.itkImageToImageMetricIF3IF3):
    """


    TODO.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/Metrics/MeanSquaresImageToImageM
    etric Compute the mean squares metric between two images

    C++ includes: itkMeanSquaresImageToImageMetric.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMeanSquaresImageToImageMetricIF3IF3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMeanSquaresImageToImageMetricIF3IF3 self) -> itkMeanSquaresImageToImageMetricIF3IF3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_Clone(self)

    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF3IF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF3IF3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMeanSquaresImageToImageMetricIF3IF3 self) -> itkMeanSquaresImageToImageMetricIF3IF3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF3IF3

        Create a new object of the class itkMeanSquaresImageToImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIF3IF3.Clone = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_Clone, None, itkMeanSquaresImageToImageMetricIF3IF3)
itkMeanSquaresImageToImageMetricIF3IF3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_GetPointer, None, itkMeanSquaresImageToImageMetricIF3IF3)
itkMeanSquaresImageToImageMetricIF3IF3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_swigregister
itkMeanSquaresImageToImageMetricIF3IF3_swigregister(itkMeanSquaresImageToImageMetricIF3IF3)

def itkMeanSquaresImageToImageMetricIF3IF3___New_orig__():
    """itkMeanSquaresImageToImageMetricIF3IF3___New_orig__() -> itkMeanSquaresImageToImageMetricIF3IF3_Pointer"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3___New_orig__()

def itkMeanSquaresImageToImageMetricIF3IF3_cast(obj):
    """itkMeanSquaresImageToImageMetricIF3IF3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIF3IF3"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_cast(obj)

class itkMeanSquaresImageToImageMetricISS2ISS2(itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2):
    """


    TODO.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/Metrics/MeanSquaresImageToImageM
    etric Compute the mean squares metric between two images

    C++ includes: itkMeanSquaresImageToImageMetric.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMeanSquaresImageToImageMetricISS2ISS2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMeanSquaresImageToImageMetricISS2ISS2 self) -> itkMeanSquaresImageToImageMetricISS2ISS2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_Clone(self)

    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricISS2ISS2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMeanSquaresImageToImageMetricISS2ISS2 self) -> itkMeanSquaresImageToImageMetricISS2ISS2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricISS2ISS2

        Create a new object of the class itkMeanSquaresImageToImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricISS2ISS2.Clone = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_Clone, None, itkMeanSquaresImageToImageMetricISS2ISS2)
itkMeanSquaresImageToImageMetricISS2ISS2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_GetPointer, None, itkMeanSquaresImageToImageMetricISS2ISS2)
itkMeanSquaresImageToImageMetricISS2ISS2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_swigregister
itkMeanSquaresImageToImageMetricISS2ISS2_swigregister(itkMeanSquaresImageToImageMetricISS2ISS2)

def itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__():
    """itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__() -> itkMeanSquaresImageToImageMetricISS2ISS2_Pointer"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__()

def itkMeanSquaresImageToImageMetricISS2ISS2_cast(obj):
    """itkMeanSquaresImageToImageMetricISS2ISS2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricISS2ISS2"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_cast(obj)

class itkMeanSquaresImageToImageMetricISS3ISS3(itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3):
    """


    TODO.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/Metrics/MeanSquaresImageToImageM
    etric Compute the mean squares metric between two images

    C++ includes: itkMeanSquaresImageToImageMetric.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMeanSquaresImageToImageMetricISS3ISS3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMeanSquaresImageToImageMetricISS3ISS3 self) -> itkMeanSquaresImageToImageMetricISS3ISS3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_Clone(self)

    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricISS3ISS3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMeanSquaresImageToImageMetricISS3ISS3 self) -> itkMeanSquaresImageToImageMetricISS3ISS3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricISS3ISS3

        Create a new object of the class itkMeanSquaresImageToImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricISS3ISS3.Clone = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_Clone, None, itkMeanSquaresImageToImageMetricISS3ISS3)
itkMeanSquaresImageToImageMetricISS3ISS3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_GetPointer, None, itkMeanSquaresImageToImageMetricISS3ISS3)
itkMeanSquaresImageToImageMetricISS3ISS3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_swigregister
itkMeanSquaresImageToImageMetricISS3ISS3_swigregister(itkMeanSquaresImageToImageMetricISS3ISS3)

def itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__():
    """itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__() -> itkMeanSquaresImageToImageMetricISS3ISS3_Pointer"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__()

def itkMeanSquaresImageToImageMetricISS3ISS3_cast(obj):
    """itkMeanSquaresImageToImageMetricISS3ISS3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricISS3ISS3"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_cast(obj)

class itkMeanSquaresImageToImageMetricIUC2IUC2(itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2):
    """


    TODO.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/Metrics/MeanSquaresImageToImageM
    etric Compute the mean squares metric between two images

    C++ includes: itkMeanSquaresImageToImageMetric.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMeanSquaresImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMeanSquaresImageToImageMetricIUC2IUC2 self) -> itkMeanSquaresImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC2IUC2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMeanSquaresImageToImageMetricIUC2IUC2 self) -> itkMeanSquaresImageToImageMetricIUC2IUC2"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC2IUC2

        Create a new object of the class itkMeanSquaresImageToImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUC2IUC2.Clone = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_Clone, None, itkMeanSquaresImageToImageMetricIUC2IUC2)
itkMeanSquaresImageToImageMetricIUC2IUC2.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_GetPointer, None, itkMeanSquaresImageToImageMetricIUC2IUC2)
itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister
itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister(itkMeanSquaresImageToImageMetricIUC2IUC2)

def itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__():
    """itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__() -> itkMeanSquaresImageToImageMetricIUC2IUC2_Pointer"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__()

def itkMeanSquaresImageToImageMetricIUC2IUC2_cast(obj):
    """itkMeanSquaresImageToImageMetricIUC2IUC2_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC2IUC2"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_cast(obj)

class itkMeanSquaresImageToImageMetricIUC3IUC3(itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3):
    """


    TODO.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/Metrics/MeanSquaresImageToImageM
    etric Compute the mean squares metric between two images

    C++ includes: itkMeanSquaresImageToImageMetric.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMeanSquaresImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMeanSquaresImageToImageMetricIUC3IUC3 self) -> itkMeanSquaresImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC3IUC3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMeanSquaresImageToImageMetricIUC3IUC3 self) -> itkMeanSquaresImageToImageMetricIUC3IUC3"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC3IUC3

        Create a new object of the class itkMeanSquaresImageToImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeanSquaresImageToImageMetricIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeanSquaresImageToImageMetricIUC3IUC3.Clone = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_Clone, None, itkMeanSquaresImageToImageMetricIUC3IUC3)
itkMeanSquaresImageToImageMetricIUC3IUC3.GetPointer = new_instancemethod(_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_GetPointer, None, itkMeanSquaresImageToImageMetricIUC3IUC3)
itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister = _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister
itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister(itkMeanSquaresImageToImageMetricIUC3IUC3)

def itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__():
    """itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__() -> itkMeanSquaresImageToImageMetricIUC3IUC3_Pointer"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__()

def itkMeanSquaresImageToImageMetricIUC3IUC3_cast(obj):
    """itkMeanSquaresImageToImageMetricIUC3IUC3_cast(itkLightObject obj) -> itkMeanSquaresImageToImageMetricIUC3IUC3"""
    return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_cast(obj)



