# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkIntensityWindowingImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkIntensityWindowingImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkIntensityWindowingImageFilterPython')
    _itkIntensityWindowingImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkIntensityWindowingImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkIntensityWindowingImageFilterPython
            return _itkIntensityWindowingImageFilterPython
        try:
            _mod = imp.load_module('_itkIntensityWindowingImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkIntensityWindowingImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkIntensityWindowingImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import ITKCommonBasePython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageToImageFilterCommonPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkRGBPixelPython
import itkFixedArrayPython
import itkRGBAPixelPython
import itkPointPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkVectorPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython

def itkIntensityWindowingImageFilterIF3IF3_New():
  return itkIntensityWindowingImageFilterIF3IF3.New()


def itkIntensityWindowingImageFilterIF3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3IF3_Superclass.New()


def itkIntensityWindowingImageFilterIF2IF2_New():
  return itkIntensityWindowingImageFilterIF2IF2.New()


def itkIntensityWindowingImageFilterIF2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2IF2_Superclass.New()


def itkIntensityWindowingImageFilterIF3ISS3_New():
  return itkIntensityWindowingImageFilterIF3ISS3.New()


def itkIntensityWindowingImageFilterIF3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterIF2ISS2_New():
  return itkIntensityWindowingImageFilterIF2ISS2.New()


def itkIntensityWindowingImageFilterIF2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterIF3IUC3_New():
  return itkIntensityWindowingImageFilterIF3IUC3.New()


def itkIntensityWindowingImageFilterIF3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterIF3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterIF2IUC2_New():
  return itkIntensityWindowingImageFilterIF2IUC2.New()


def itkIntensityWindowingImageFilterIF2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterIF2IUC2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3IF3_New():
  return itkIntensityWindowingImageFilterIUC3IF3.New()


def itkIntensityWindowingImageFilterIUC3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3IF3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2IF2_New():
  return itkIntensityWindowingImageFilterIUC2IF2.New()


def itkIntensityWindowingImageFilterIUC2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2IF2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3ISS3_New():
  return itkIntensityWindowingImageFilterIUC3ISS3.New()


def itkIntensityWindowingImageFilterIUC3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2ISS2_New():
  return itkIntensityWindowingImageFilterIUC2ISS2.New()


def itkIntensityWindowingImageFilterIUC2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterIUC3IUC3_New():
  return itkIntensityWindowingImageFilterIUC3IUC3.New()


def itkIntensityWindowingImageFilterIUC3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterIUC3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterIUC2IUC2_New():
  return itkIntensityWindowingImageFilterIUC2IUC2.New()


def itkIntensityWindowingImageFilterIUC2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterIUC2IUC2_Superclass.New()


def itkIntensityWindowingImageFilterISS3IF3_New():
  return itkIntensityWindowingImageFilterISS3IF3.New()


def itkIntensityWindowingImageFilterISS3IF3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3IF3_Superclass.New()


def itkIntensityWindowingImageFilterISS2IF2_New():
  return itkIntensityWindowingImageFilterISS2IF2.New()


def itkIntensityWindowingImageFilterISS2IF2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2IF2_Superclass.New()


def itkIntensityWindowingImageFilterISS3ISS3_New():
  return itkIntensityWindowingImageFilterISS3ISS3.New()


def itkIntensityWindowingImageFilterISS3ISS3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3ISS3_Superclass.New()


def itkIntensityWindowingImageFilterISS2ISS2_New():
  return itkIntensityWindowingImageFilterISS2ISS2.New()


def itkIntensityWindowingImageFilterISS2ISS2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2ISS2_Superclass.New()


def itkIntensityWindowingImageFilterISS3IUC3_New():
  return itkIntensityWindowingImageFilterISS3IUC3.New()


def itkIntensityWindowingImageFilterISS3IUC3_Superclass_New():
  return itkIntensityWindowingImageFilterISS3IUC3_Superclass.New()


def itkIntensityWindowingImageFilterISS2IUC2_New():
  return itkIntensityWindowingImageFilterISS2IUC2.New()


def itkIntensityWindowingImageFilterISS2IUC2_Superclass_New():
  return itkIntensityWindowingImageFilterISS2IUC2_Superclass.New()

class itkIntensityWindowingImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IF2_Superclass self) -> itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float >
        GetFunctor(itkIntensityWindowingImageFilterIF2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< float,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF2IF2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIF2IF2_Superclass self) -> itkIntensityWindowingImageFilterIF2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2IF2_Superclass)
itkIntensityWindowingImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2IF2_Superclass)
itkIntensityWindowingImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2IF2_Superclass)
itkIntensityWindowingImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIF2IF2_Superclass)
itkIntensityWindowingImageFilterIF2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2IF2_Superclass)

def itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2_Superclass *":
    """itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2ISS2_Superclass self) -> itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short >
        GetFunctor(itkIntensityWindowingImageFilterIF2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< float,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIF2ISS2_Superclass self) -> itkIntensityWindowingImageFilterIF2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2ISS2_Superclass)
itkIntensityWindowingImageFilterIF2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2ISS2_Superclass)
itkIntensityWindowingImageFilterIF2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2ISS2_Superclass)
itkIntensityWindowingImageFilterIF2ISS2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIF2ISS2_Superclass)
itkIntensityWindowingImageFilterIF2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2ISS2_Superclass)

def itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterIF2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IUC2_Superclass self) -> itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIF2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< float,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIF2IUC2_Superclass self) -> itkIntensityWindowingImageFilterIF2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterIF2IUC2_Superclass)
itkIntensityWindowingImageFilterIF2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF2IUC2_Superclass)
itkIntensityWindowingImageFilterIF2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF2IUC2_Superclass)
itkIntensityWindowingImageFilterIF2IUC2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIF2IUC2_Superclass)
itkIntensityWindowingImageFilterIF2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterIF2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterIF2IUC2_Superclass)

def itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IF3_Superclass self) -> itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float >
        GetFunctor(itkIntensityWindowingImageFilterIF3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< float,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF3IF3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIF3IF3_Superclass self) -> itkIntensityWindowingImageFilterIF3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3IF3_Superclass)
itkIntensityWindowingImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3IF3_Superclass)
itkIntensityWindowingImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3IF3_Superclass)
itkIntensityWindowingImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIF3IF3_Superclass)
itkIntensityWindowingImageFilterIF3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3IF3_Superclass)

def itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3_Superclass *":
    """itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3ISS3_Superclass self) -> itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short >
        GetFunctor(itkIntensityWindowingImageFilterIF3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< float,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIF3ISS3_Superclass self) -> itkIntensityWindowingImageFilterIF3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3ISS3_Superclass)
itkIntensityWindowingImageFilterIF3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3ISS3_Superclass)
itkIntensityWindowingImageFilterIF3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3ISS3_Superclass)
itkIntensityWindowingImageFilterIF3ISS3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIF3ISS3_Superclass)
itkIntensityWindowingImageFilterIF3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3ISS3_Superclass)

def itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterIF3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IUC3_Superclass self) -> itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< float,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIF3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIF3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< float,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< float,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIF3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< float,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIF3IUC3_Superclass self) -> itkIntensityWindowingImageFilterIF3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterIF3IUC3_Superclass)
itkIntensityWindowingImageFilterIF3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIF3IUC3_Superclass)
itkIntensityWindowingImageFilterIF3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIF3IUC3_Superclass)
itkIntensityWindowingImageFilterIF3IUC3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIF3IUC3_Superclass)
itkIntensityWindowingImageFilterIF3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterIF3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterIF3IUC3_Superclass)

def itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IF2_Superclass self) -> itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float >
        GetFunctor(itkIntensityWindowingImageFilterISS2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< short,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS2IF2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterISS2IF2_Superclass self) -> itkIntensityWindowingImageFilterISS2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2IF2_Superclass)
itkIntensityWindowingImageFilterISS2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2IF2_Superclass)
itkIntensityWindowingImageFilterISS2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2IF2_Superclass)
itkIntensityWindowingImageFilterISS2IF2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterISS2IF2_Superclass)
itkIntensityWindowingImageFilterISS2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2IF2_Superclass)

def itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2_Superclass *":
    """itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2ISS2_Superclass self) -> itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short >
        GetFunctor(itkIntensityWindowingImageFilterISS2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< short,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterISS2ISS2_Superclass self) -> itkIntensityWindowingImageFilterISS2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2ISS2_Superclass)
itkIntensityWindowingImageFilterISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2ISS2_Superclass)
itkIntensityWindowingImageFilterISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2ISS2_Superclass)
itkIntensityWindowingImageFilterISS2ISS2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterISS2ISS2_Superclass)
itkIntensityWindowingImageFilterISS2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2ISS2_Superclass)

def itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterISS2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IUC2_Superclass self) -> itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterISS2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< short,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterISS2IUC2_Superclass self) -> itkIntensityWindowingImageFilterISS2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterISS2IUC2_Superclass)
itkIntensityWindowingImageFilterISS2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS2IUC2_Superclass)
itkIntensityWindowingImageFilterISS2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS2IUC2_Superclass)
itkIntensityWindowingImageFilterISS2IUC2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterISS2IUC2_Superclass)
itkIntensityWindowingImageFilterISS2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterISS2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterISS2IUC2_Superclass)

def itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IF3_Superclass self) -> itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float >
        GetFunctor(itkIntensityWindowingImageFilterISS3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< short,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS3IF3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterISS3IF3_Superclass self) -> itkIntensityWindowingImageFilterISS3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3IF3_Superclass)
itkIntensityWindowingImageFilterISS3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3IF3_Superclass)
itkIntensityWindowingImageFilterISS3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3IF3_Superclass)
itkIntensityWindowingImageFilterISS3IF3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterISS3IF3_Superclass)
itkIntensityWindowingImageFilterISS3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3IF3_Superclass)

def itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3_Superclass *":
    """itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3ISS3_Superclass self) -> itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short >
        GetFunctor(itkIntensityWindowingImageFilterISS3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< short,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterISS3ISS3_Superclass self) -> itkIntensityWindowingImageFilterISS3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3ISS3_Superclass)
itkIntensityWindowingImageFilterISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3ISS3_Superclass)
itkIntensityWindowingImageFilterISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3ISS3_Superclass)
itkIntensityWindowingImageFilterISS3ISS3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterISS3ISS3_Superclass)
itkIntensityWindowingImageFilterISS3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3ISS3_Superclass)

def itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterISS3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterISS3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IUC3_Superclass self) -> itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< short,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterISS3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterISS3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< short,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< short,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterISS3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< short,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterISS3IUC3_Superclass self) -> itkIntensityWindowingImageFilterISS3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterISS3IUC3_Superclass)
itkIntensityWindowingImageFilterISS3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterISS3IUC3_Superclass)
itkIntensityWindowingImageFilterISS3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterISS3IUC3_Superclass)
itkIntensityWindowingImageFilterISS3IUC3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterISS3IUC3_Superclass)
itkIntensityWindowingImageFilterISS3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterISS3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterISS3IUC3_Superclass)

def itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IF2_Superclass self) -> itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float >
        GetFunctor(itkIntensityWindowingImageFilterIUC2IF2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2IF2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIUC2IF2_Superclass self) -> itkIntensityWindowingImageFilterIUC2IF2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IF2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IF2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2IF2_Superclass)
itkIntensityWindowingImageFilterIUC2IF2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2IF2_Superclass)
itkIntensityWindowingImageFilterIUC2IF2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2IF2_Superclass)
itkIntensityWindowingImageFilterIUC2IF2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIUC2IF2_Superclass)
itkIntensityWindowingImageFilterIUC2IF2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2IF2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2IF2_Superclass)

def itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self) -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short >
        GetFunctor(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIUC2ISS2_Superclass self) -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2ISS2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2ISS2_Superclass)
itkIntensityWindowingImageFilterIUC2ISS2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2ISS2_Superclass)
itkIntensityWindowingImageFilterIUC2ISS2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2ISS2_Superclass)
itkIntensityWindowingImageFilterIUC2ISS2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIUC2ISS2_Superclass)
itkIntensityWindowingImageFilterIUC2ISS2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2ISS2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2ISS2_Superclass)

def itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self) -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIUC2IUC2_Superclass self) -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IUC2_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC2IUC2_Superclass)
itkIntensityWindowingImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC2IUC2_Superclass)
itkIntensityWindowingImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC2IUC2_Superclass)
itkIntensityWindowingImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIUC2IUC2_Superclass)
itkIntensityWindowingImageFilterIUC2IUC2_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_swigregister
itkIntensityWindowingImageFilterIUC2IUC2_Superclass_swigregister(itkIntensityWindowingImageFilterIUC2IUC2_Superclass)

def itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2_Superclass *":
    """itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IF3_Superclass self) -> itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,float > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float >
        GetFunctor(itkIntensityWindowingImageFilterIUC3IF3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,float > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,float > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3IF3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,float > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIUC3IF3_Superclass self) -> itkIntensityWindowingImageFilterIUC3IF3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IF3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IF3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3IF3_Superclass)
itkIntensityWindowingImageFilterIUC3IF3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3IF3_Superclass)
itkIntensityWindowingImageFilterIUC3IF3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3IF3_Superclass)
itkIntensityWindowingImageFilterIUC3IF3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIUC3IF3_Superclass)
itkIntensityWindowingImageFilterIUC3IF3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3IF3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3IF3_Superclass)

def itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self) -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,short > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short >
        GetFunctor(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,short > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,short > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,short > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIUC3ISS3_Superclass self) -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3ISS3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3ISS3_Superclass)
itkIntensityWindowingImageFilterIUC3ISS3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3ISS3_Superclass)
itkIntensityWindowingImageFilterIUC3ISS3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3ISS3_Superclass)
itkIntensityWindowingImageFilterIUC3ISS3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIUC3ISS3_Superclass)
itkIntensityWindowingImageFilterIUC3ISS3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3ISS3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3ISS3_Superclass)

def itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkIntensityWindowingImageFilterIUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self) -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Clone(self)


    def GetFunctor(self, *args) -> "itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &":
        """
        GetFunctor(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char >
        GetFunctor(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self) -> itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self, itk::Functor::IntensityWindowingTransform< unsigned char,unsigned char > const & functor)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)

    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass *":
        """GetPointer(itkIntensityWindowingImageFilterIUC3IUC3_Superclass self) -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IUC3_Superclass.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Clone, None, itkIntensityWindowingImageFilterIUC3IUC3_Superclass)
itkIntensityWindowingImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_GetFunctor, None, itkIntensityWindowingImageFilterIUC3IUC3_Superclass)
itkIntensityWindowingImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_SetFunctor, None, itkIntensityWindowingImageFilterIUC3IUC3_Superclass)
itkIntensityWindowingImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_GetPointer, None, itkIntensityWindowingImageFilterIUC3IUC3_Superclass)
itkIntensityWindowingImageFilterIUC3IUC3_Superclass_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_swigregister
itkIntensityWindowingImageFilterIUC3IUC3_Superclass_swigregister(itkIntensityWindowingImageFilterIUC3IUC3_Superclass)

def itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer":
    """itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass___New_orig__()

def itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3_Superclass *":
    """itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3_Superclass"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Superclass_cast(obj)

class itkIntensityWindowingImageFilterIF2IF2(itkIntensityWindowingImageFilterIF2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IF2 self) -> itkIntensityWindowingImageFilterIF2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2IF2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2IF2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2IF2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF2IF2 *":
        """GetPointer(itkIntensityWindowingImageFilterIF2IF2 self) -> itkIntensityWindowingImageFilterIF2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IF2

        Create a new object of the class itkIntensityWindowingImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_Clone, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetWindow, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetLevel, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetScale, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetShift, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_PrintSelf, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_GetPointer, None, itkIntensityWindowingImageFilterIF2IF2)
itkIntensityWindowingImageFilterIF2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_swigregister
itkIntensityWindowingImageFilterIF2IF2_swigregister(itkIntensityWindowingImageFilterIF2IF2)

def itkIntensityWindowingImageFilterIF2IF2___New_orig__() -> "itkIntensityWindowingImageFilterIF2IF2_Pointer":
    """itkIntensityWindowingImageFilterIF2IF2___New_orig__() -> itkIntensityWindowingImageFilterIF2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2___New_orig__()

def itkIntensityWindowingImageFilterIF2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IF2 *":
    """itkIntensityWindowingImageFilterIF2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IF2_cast(obj)

class itkIntensityWindowingImageFilterIF2ISS2(itkIntensityWindowingImageFilterIF2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2ISS2 self) -> itkIntensityWindowingImageFilterIF2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2ISS2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2ISS2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2ISS2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2ISS2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2ISS2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2ISS2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2ISS2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF2ISS2 *":
        """GetPointer(itkIntensityWindowingImageFilterIF2ISS2 self) -> itkIntensityWindowingImageFilterIF2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_Clone, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetWindow, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetLevel, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetScale, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetShift, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_GetPointer, None, itkIntensityWindowingImageFilterIF2ISS2)
itkIntensityWindowingImageFilterIF2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_swigregister
itkIntensityWindowingImageFilterIF2ISS2_swigregister(itkIntensityWindowingImageFilterIF2ISS2)

def itkIntensityWindowingImageFilterIF2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterIF2ISS2_Pointer":
    """itkIntensityWindowingImageFilterIF2ISS2___New_orig__() -> itkIntensityWindowingImageFilterIF2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2___New_orig__()

def itkIntensityWindowingImageFilterIF2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2ISS2 *":
    """itkIntensityWindowingImageFilterIF2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2ISS2_cast(obj)

class itkIntensityWindowingImageFilterIF2IUC2(itkIntensityWindowingImageFilterIF2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF2IUC2 self) -> itkIntensityWindowingImageFilterIF2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF2IUC2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF2IUC2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF2IUC2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF2IUC2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF2IUC2 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF2IUC2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF2IUC2 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF2IUC2 *":
        """GetPointer(itkIntensityWindowingImageFilterIF2IUC2 self) -> itkIntensityWindowingImageFilterIF2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_Clone, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetWindow, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetLevel, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetScale, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetShift, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_GetPointer, None, itkIntensityWindowingImageFilterIF2IUC2)
itkIntensityWindowingImageFilterIF2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_swigregister
itkIntensityWindowingImageFilterIF2IUC2_swigregister(itkIntensityWindowingImageFilterIF2IUC2)

def itkIntensityWindowingImageFilterIF2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterIF2IUC2_Pointer":
    """itkIntensityWindowingImageFilterIF2IUC2___New_orig__() -> itkIntensityWindowingImageFilterIF2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2___New_orig__()

def itkIntensityWindowingImageFilterIF2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF2IUC2 *":
    """itkIntensityWindowingImageFilterIF2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF2IUC2_cast(obj)

class itkIntensityWindowingImageFilterIF3IF3(itkIntensityWindowingImageFilterIF3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IF3 self) -> itkIntensityWindowingImageFilterIF3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3IF3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3IF3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3IF3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF3IF3 *":
        """GetPointer(itkIntensityWindowingImageFilterIF3IF3 self) -> itkIntensityWindowingImageFilterIF3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IF3

        Create a new object of the class itkIntensityWindowingImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_Clone, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetWindow, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetLevel, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetScale, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetShift, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_PrintSelf, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_GetPointer, None, itkIntensityWindowingImageFilterIF3IF3)
itkIntensityWindowingImageFilterIF3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_swigregister
itkIntensityWindowingImageFilterIF3IF3_swigregister(itkIntensityWindowingImageFilterIF3IF3)

def itkIntensityWindowingImageFilterIF3IF3___New_orig__() -> "itkIntensityWindowingImageFilterIF3IF3_Pointer":
    """itkIntensityWindowingImageFilterIF3IF3___New_orig__() -> itkIntensityWindowingImageFilterIF3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3___New_orig__()

def itkIntensityWindowingImageFilterIF3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IF3 *":
    """itkIntensityWindowingImageFilterIF3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IF3_cast(obj)

class itkIntensityWindowingImageFilterIF3ISS3(itkIntensityWindowingImageFilterIF3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3ISS3 self) -> itkIntensityWindowingImageFilterIF3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3ISS3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3ISS3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3ISS3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3ISS3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3ISS3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3ISS3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3ISS3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF3ISS3 *":
        """GetPointer(itkIntensityWindowingImageFilterIF3ISS3 self) -> itkIntensityWindowingImageFilterIF3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_Clone, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetWindow, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetLevel, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetScale, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetShift, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_GetPointer, None, itkIntensityWindowingImageFilterIF3ISS3)
itkIntensityWindowingImageFilterIF3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_swigregister
itkIntensityWindowingImageFilterIF3ISS3_swigregister(itkIntensityWindowingImageFilterIF3ISS3)

def itkIntensityWindowingImageFilterIF3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterIF3ISS3_Pointer":
    """itkIntensityWindowingImageFilterIF3ISS3___New_orig__() -> itkIntensityWindowingImageFilterIF3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3___New_orig__()

def itkIntensityWindowingImageFilterIF3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3ISS3 *":
    """itkIntensityWindowingImageFilterIF3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3ISS3_cast(obj)

class itkIntensityWindowingImageFilterIF3IUC3(itkIntensityWindowingImageFilterIF3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIF3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIF3IUC3 self) -> itkIntensityWindowingImageFilterIF3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIF3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIF3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIF3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIF3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'float const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIF3IUC3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'float const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIF3IUC3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "float const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIF3IUC3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "float const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIF3IUC3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'float const &', level: 'float const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIF3IUC3 self, float const & window, float const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "float":
        """GetWindow(itkIntensityWindowingImageFilterIF3IUC3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindow(self)


    def GetLevel(self) -> "float":
        """GetLevel(itkIntensityWindowingImageFilterIF3IUC3 self) -> float"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIF3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIF3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIF3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIF3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIF3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIF3IUC3 *":
        """GetPointer(itkIntensityWindowingImageFilterIF3IUC3 self) -> itkIntensityWindowingImageFilterIF3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIF3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIF3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_Clone, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetWindow, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetLevel, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetScale, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetShift, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_GetPointer, None, itkIntensityWindowingImageFilterIF3IUC3)
itkIntensityWindowingImageFilterIF3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_swigregister
itkIntensityWindowingImageFilterIF3IUC3_swigregister(itkIntensityWindowingImageFilterIF3IUC3)

def itkIntensityWindowingImageFilterIF3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterIF3IUC3_Pointer":
    """itkIntensityWindowingImageFilterIF3IUC3___New_orig__() -> itkIntensityWindowingImageFilterIF3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3___New_orig__()

def itkIntensityWindowingImageFilterIF3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIF3IUC3 *":
    """itkIntensityWindowingImageFilterIF3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIF3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIF3IUC3_cast(obj)

class itkIntensityWindowingImageFilterISS2IF2(itkIntensityWindowingImageFilterISS2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IF2 self) -> itkIntensityWindowingImageFilterISS2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2IF2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2IF2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2IF2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2IF2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2IF2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2IF2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2IF2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS2IF2 *":
        """GetPointer(itkIntensityWindowingImageFilterISS2IF2 self) -> itkIntensityWindowingImageFilterISS2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IF2

        Create a new object of the class itkIntensityWindowingImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_Clone, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetWindow, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetLevel, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetScale, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetShift, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_PrintSelf, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_GetPointer, None, itkIntensityWindowingImageFilterISS2IF2)
itkIntensityWindowingImageFilterISS2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_swigregister
itkIntensityWindowingImageFilterISS2IF2_swigregister(itkIntensityWindowingImageFilterISS2IF2)

def itkIntensityWindowingImageFilterISS2IF2___New_orig__() -> "itkIntensityWindowingImageFilterISS2IF2_Pointer":
    """itkIntensityWindowingImageFilterISS2IF2___New_orig__() -> itkIntensityWindowingImageFilterISS2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2___New_orig__()

def itkIntensityWindowingImageFilterISS2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IF2 *":
    """itkIntensityWindowingImageFilterISS2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IF2_cast(obj)

class itkIntensityWindowingImageFilterISS2ISS2(itkIntensityWindowingImageFilterISS2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2ISS2 self) -> itkIntensityWindowingImageFilterISS2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2ISS2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2ISS2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2ISS2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS2ISS2 *":
        """GetPointer(itkIntensityWindowingImageFilterISS2ISS2 self) -> itkIntensityWindowingImageFilterISS2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_Clone, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetWindow, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetLevel, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetScale, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetShift, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_GetPointer, None, itkIntensityWindowingImageFilterISS2ISS2)
itkIntensityWindowingImageFilterISS2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_swigregister
itkIntensityWindowingImageFilterISS2ISS2_swigregister(itkIntensityWindowingImageFilterISS2ISS2)

def itkIntensityWindowingImageFilterISS2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterISS2ISS2_Pointer":
    """itkIntensityWindowingImageFilterISS2ISS2___New_orig__() -> itkIntensityWindowingImageFilterISS2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2___New_orig__()

def itkIntensityWindowingImageFilterISS2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2ISS2 *":
    """itkIntensityWindowingImageFilterISS2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2ISS2_cast(obj)

class itkIntensityWindowingImageFilterISS2IUC2(itkIntensityWindowingImageFilterISS2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS2IUC2 self) -> itkIntensityWindowingImageFilterISS2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS2IUC2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS2IUC2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS2IUC2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS2IUC2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS2IUC2 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS2IUC2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS2IUC2 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS2IUC2 *":
        """GetPointer(itkIntensityWindowingImageFilterISS2IUC2 self) -> itkIntensityWindowingImageFilterISS2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_Clone, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetWindow, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetLevel, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetScale, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetShift, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_GetPointer, None, itkIntensityWindowingImageFilterISS2IUC2)
itkIntensityWindowingImageFilterISS2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_swigregister
itkIntensityWindowingImageFilterISS2IUC2_swigregister(itkIntensityWindowingImageFilterISS2IUC2)

def itkIntensityWindowingImageFilterISS2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterISS2IUC2_Pointer":
    """itkIntensityWindowingImageFilterISS2IUC2___New_orig__() -> itkIntensityWindowingImageFilterISS2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2___New_orig__()

def itkIntensityWindowingImageFilterISS2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS2IUC2 *":
    """itkIntensityWindowingImageFilterISS2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS2IUC2_cast(obj)

class itkIntensityWindowingImageFilterISS3IF3(itkIntensityWindowingImageFilterISS3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IF3 self) -> itkIntensityWindowingImageFilterISS3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3IF3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3IF3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3IF3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3IF3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3IF3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3IF3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3IF3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS3IF3 *":
        """GetPointer(itkIntensityWindowingImageFilterISS3IF3 self) -> itkIntensityWindowingImageFilterISS3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IF3

        Create a new object of the class itkIntensityWindowingImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_Clone, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetWindow, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetLevel, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetScale, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetShift, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_PrintSelf, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_GetPointer, None, itkIntensityWindowingImageFilterISS3IF3)
itkIntensityWindowingImageFilterISS3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_swigregister
itkIntensityWindowingImageFilterISS3IF3_swigregister(itkIntensityWindowingImageFilterISS3IF3)

def itkIntensityWindowingImageFilterISS3IF3___New_orig__() -> "itkIntensityWindowingImageFilterISS3IF3_Pointer":
    """itkIntensityWindowingImageFilterISS3IF3___New_orig__() -> itkIntensityWindowingImageFilterISS3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3___New_orig__()

def itkIntensityWindowingImageFilterISS3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IF3 *":
    """itkIntensityWindowingImageFilterISS3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IF3_cast(obj)

class itkIntensityWindowingImageFilterISS3ISS3(itkIntensityWindowingImageFilterISS3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3ISS3 self) -> itkIntensityWindowingImageFilterISS3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3ISS3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3ISS3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3ISS3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS3ISS3 *":
        """GetPointer(itkIntensityWindowingImageFilterISS3ISS3 self) -> itkIntensityWindowingImageFilterISS3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_Clone, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetWindow, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetLevel, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetScale, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetShift, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_GetPointer, None, itkIntensityWindowingImageFilterISS3ISS3)
itkIntensityWindowingImageFilterISS3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_swigregister
itkIntensityWindowingImageFilterISS3ISS3_swigregister(itkIntensityWindowingImageFilterISS3ISS3)

def itkIntensityWindowingImageFilterISS3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterISS3ISS3_Pointer":
    """itkIntensityWindowingImageFilterISS3ISS3___New_orig__() -> itkIntensityWindowingImageFilterISS3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3___New_orig__()

def itkIntensityWindowingImageFilterISS3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3ISS3 *":
    """itkIntensityWindowingImageFilterISS3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3ISS3_cast(obj)

class itkIntensityWindowingImageFilterISS3IUC3(itkIntensityWindowingImageFilterISS3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterISS3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterISS3IUC3 self) -> itkIntensityWindowingImageFilterISS3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterISS3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterISS3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterISS3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterISS3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'short const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterISS3IUC3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'short const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterISS3IUC3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "short const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterISS3IUC3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "short const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterISS3IUC3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'short const &', level: 'short const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterISS3IUC3 self, short const & window, short const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "short":
        """GetWindow(itkIntensityWindowingImageFilterISS3IUC3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindow(self)


    def GetLevel(self) -> "short":
        """GetLevel(itkIntensityWindowingImageFilterISS3IUC3 self) -> short"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterISS3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterISS3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterISS3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterISS3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterISS3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterISS3IUC3 *":
        """GetPointer(itkIntensityWindowingImageFilterISS3IUC3 self) -> itkIntensityWindowingImageFilterISS3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterISS3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterISS3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_Clone, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetWindow, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetLevel, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetScale, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetShift, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_GetPointer, None, itkIntensityWindowingImageFilterISS3IUC3)
itkIntensityWindowingImageFilterISS3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_swigregister
itkIntensityWindowingImageFilterISS3IUC3_swigregister(itkIntensityWindowingImageFilterISS3IUC3)

def itkIntensityWindowingImageFilterISS3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterISS3IUC3_Pointer":
    """itkIntensityWindowingImageFilterISS3IUC3___New_orig__() -> itkIntensityWindowingImageFilterISS3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3___New_orig__()

def itkIntensityWindowingImageFilterISS3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterISS3IUC3 *":
    """itkIntensityWindowingImageFilterISS3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterISS3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterISS3IUC3_cast(obj)

class itkIntensityWindowingImageFilterIUC2IF2(itkIntensityWindowingImageFilterIUC2IF2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IF2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IF2 self) -> itkIntensityWindowingImageFilterIUC2IF2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2IF2 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2IF2 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2IF2 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2IF2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2IF2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2IF2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2IF2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2IF2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2IF2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2IF2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2IF2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IF2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC2IF2 *":
        """GetPointer(itkIntensityWindowingImageFilterIUC2IF2 self) -> itkIntensityWindowingImageFilterIUC2IF2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IF2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IF2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_Clone, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetWindow, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetLevel, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetScale, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetShift, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_GetPointer, None, itkIntensityWindowingImageFilterIUC2IF2)
itkIntensityWindowingImageFilterIUC2IF2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_swigregister
itkIntensityWindowingImageFilterIUC2IF2_swigregister(itkIntensityWindowingImageFilterIUC2IF2)

def itkIntensityWindowingImageFilterIUC2IF2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IF2_Pointer":
    """itkIntensityWindowingImageFilterIUC2IF2___New_orig__() -> itkIntensityWindowingImageFilterIUC2IF2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2___New_orig__()

def itkIntensityWindowingImageFilterIUC2IF2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IF2 *":
    """itkIntensityWindowingImageFilterIUC2IF2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IF2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IF2_cast(obj)

class itkIntensityWindowingImageFilterIUC2ISS2(itkIntensityWindowingImageFilterIUC2ISS2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2ISS2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2ISS2 self) -> itkIntensityWindowingImageFilterIUC2ISS2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2ISS2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2ISS2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2ISS2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2ISS2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2ISS2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2ISS2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2ISS2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC2ISS2 *":
        """GetPointer(itkIntensityWindowingImageFilterIUC2ISS2 self) -> itkIntensityWindowingImageFilterIUC2ISS2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2ISS2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2ISS2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_Clone, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetWindow, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetLevel, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetScale, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetShift, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_GetPointer, None, itkIntensityWindowingImageFilterIUC2ISS2)
itkIntensityWindowingImageFilterIUC2ISS2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_swigregister
itkIntensityWindowingImageFilterIUC2ISS2_swigregister(itkIntensityWindowingImageFilterIUC2ISS2)

def itkIntensityWindowingImageFilterIUC2ISS2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2ISS2_Pointer":
    """itkIntensityWindowingImageFilterIUC2ISS2___New_orig__() -> itkIntensityWindowingImageFilterIUC2ISS2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2___New_orig__()

def itkIntensityWindowingImageFilterIUC2ISS2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2ISS2 *":
    """itkIntensityWindowingImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2ISS2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2ISS2_cast(obj)

class itkIntensityWindowingImageFilterIUC2IUC2(itkIntensityWindowingImageFilterIUC2IUC2_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC2IUC2_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC2IUC2 self) -> itkIntensityWindowingImageFilterIUC2IUC2_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC2IUC2 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC2IUC2 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC2IUC2 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC2IUC2 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC2IUC2 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC2IUC2 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC2IUC2 *":
        """GetPointer(itkIntensityWindowingImageFilterIUC2IUC2 self) -> itkIntensityWindowingImageFilterIUC2IUC2"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC2IUC2

        Create a new object of the class itkIntensityWindowingImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC2IUC2.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_Clone, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetWindow, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetLevel, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetScale, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetShift, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_PrintSelf, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_GetPointer, None, itkIntensityWindowingImageFilterIUC2IUC2)
itkIntensityWindowingImageFilterIUC2IUC2_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_swigregister
itkIntensityWindowingImageFilterIUC2IUC2_swigregister(itkIntensityWindowingImageFilterIUC2IUC2)

def itkIntensityWindowingImageFilterIUC2IUC2___New_orig__() -> "itkIntensityWindowingImageFilterIUC2IUC2_Pointer":
    """itkIntensityWindowingImageFilterIUC2IUC2___New_orig__() -> itkIntensityWindowingImageFilterIUC2IUC2_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2___New_orig__()

def itkIntensityWindowingImageFilterIUC2IUC2_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC2IUC2 *":
    """itkIntensityWindowingImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC2IUC2"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC2IUC2_cast(obj)

class itkIntensityWindowingImageFilterIUC3IF3(itkIntensityWindowingImageFilterIUC3IF3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IF3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IF3 self) -> itkIntensityWindowingImageFilterIUC3IF3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Clone(self)


    def SetOutputMinimum(self, _arg: 'float const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3IF3 self, float const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'float const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3IF3 self, float const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "float const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "float const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3IF3 self) -> float const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3IF3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3IF3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3IF3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3IF3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3IF3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3IF3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3IF3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3IF3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IF3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC3IF3 *":
        """GetPointer(itkIntensityWindowingImageFilterIUC3IF3 self) -> itkIntensityWindowingImageFilterIUC3IF3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IF3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IF3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_Clone, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetWindow, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetLevel, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetScale, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetShift, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_GetPointer, None, itkIntensityWindowingImageFilterIUC3IF3)
itkIntensityWindowingImageFilterIUC3IF3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_swigregister
itkIntensityWindowingImageFilterIUC3IF3_swigregister(itkIntensityWindowingImageFilterIUC3IF3)

def itkIntensityWindowingImageFilterIUC3IF3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IF3_Pointer":
    """itkIntensityWindowingImageFilterIUC3IF3___New_orig__() -> itkIntensityWindowingImageFilterIUC3IF3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3___New_orig__()

def itkIntensityWindowingImageFilterIUC3IF3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IF3 *":
    """itkIntensityWindowingImageFilterIUC3IF3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IF3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IF3_cast(obj)

class itkIntensityWindowingImageFilterIUC3ISS3(itkIntensityWindowingImageFilterIUC3ISS3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3ISS3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3ISS3 self) -> itkIntensityWindowingImageFilterIUC3ISS3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Clone(self)


    def SetOutputMinimum(self, _arg: 'short const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self, short const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'short const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self, short const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "short const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "short const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> short const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3ISS3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3ISS3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3ISS3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3ISS3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3ISS3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3ISS3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3ISS3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC3ISS3 *":
        """GetPointer(itkIntensityWindowingImageFilterIUC3ISS3 self) -> itkIntensityWindowingImageFilterIUC3ISS3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3ISS3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3ISS3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_Clone, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetWindow, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetLevel, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetScale, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetShift, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_GetPointer, None, itkIntensityWindowingImageFilterIUC3ISS3)
itkIntensityWindowingImageFilterIUC3ISS3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_swigregister
itkIntensityWindowingImageFilterIUC3ISS3_swigregister(itkIntensityWindowingImageFilterIUC3ISS3)

def itkIntensityWindowingImageFilterIUC3ISS3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3ISS3_Pointer":
    """itkIntensityWindowingImageFilterIUC3ISS3___New_orig__() -> itkIntensityWindowingImageFilterIUC3ISS3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3___New_orig__()

def itkIntensityWindowingImageFilterIUC3ISS3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3ISS3 *":
    """itkIntensityWindowingImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3ISS3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3ISS3_cast(obj)

class itkIntensityWindowingImageFilterIUC3IUC3(itkIntensityWindowingImageFilterIUC3IUC3_Superclass):
    """


    Applies a linear transformation to the intensity levels of the input
    Image that are inside a user-defined interval. Values below this
    interval are mapped to a constant. Values over the interval are mapped
    to another constant.

    IntensityWindowingImageFilter applies pixel-wise a linear
    transformation to the intensity values of input image pixels. The
    linear transformation is defined by the user in terms of the minimum
    and maximum values that the output image should have and the lower and
    upper limits of the intensity window of the input image. This
    operation is very common in visualization, and can also be applied as
    a convenient preprocessing operation for image segmentation.

    All computations are performed in the precision of the input pixel's
    RealType. Before assigning the computed value to the output pixel.

    Wiki Examples:

    All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/IntensityWindowi
    ngImageFilter IntensityWindowingImageFilter

    See:   RescaleIntensityImageFilter

    C++ includes: itkIntensityWindowingImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Pointer":
        """__New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkIntensityWindowingImageFilterIUC3IUC3_Pointer":
        """Clone(itkIntensityWindowingImageFilterIUC3IUC3 self) -> itkIntensityWindowingImageFilterIUC3IUC3_Pointer"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Clone(self)


    def SetOutputMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetOutputMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the output image. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMinimum(self, _arg)


    def SetOutputMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetOutputMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMaximum(self, _arg)


    def GetOutputMinimum(self) -> "unsigned char const &":
        """GetOutputMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMinimum(self)


    def GetOutputMaximum(self) -> "unsigned char const &":
        """GetOutputMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMaximum(self)


    def SetWindowMinimum(self, _arg: 'unsigned char const') -> "void":
        """
        SetWindowMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)

        Set/Get the values
        of the maximum and minimum intensities of the input intensity window.

        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMinimum(self, _arg)


    def SetWindowMaximum(self, _arg: 'unsigned char const') -> "void":
        """SetWindowMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const _arg)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMaximum(self, _arg)


    def GetWindowMinimum(self) -> "unsigned char const &":
        """GetWindowMinimum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMinimum(self)


    def GetWindowMaximum(self) -> "unsigned char const &":
        """GetWindowMaximum(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMaximum(self)


    def SetWindowLevel(self, window: 'unsigned char const &', level: 'unsigned char const &') -> "void":
        """
        SetWindowLevel(itkIntensityWindowingImageFilterIUC3IUC3 self, unsigned char const & window, unsigned char const & level)

        Set/Get the window
        width and level. This is an alternative API to using the
        SetWindowMinimum()/SetWindowMaximum(). The window minimum and maximum
        are set as [level- window/2, level+window/2]. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowLevel(self, window, level)


    def GetWindow(self) -> "unsigned char":
        """GetWindow(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindow(self)


    def GetLevel(self) -> "unsigned char":
        """GetLevel(itkIntensityWindowingImageFilterIUC3IUC3 self) -> unsigned char"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetLevel(self)


    def GetScale(self) -> "double const &":
        """
        GetScale(itkIntensityWindowingImageFilterIUC3IUC3 self) -> double const &

        Get the Scale and Shift
        used for the linear transformation of gray level values. WARNING:
        These Values are only valid after the filter has been updated. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetScale(self)


    def GetShift(self) -> "double const &":
        """GetShift(itkIntensityWindowingImageFilterIUC3IUC3 self) -> double const &"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetShift(self)


    def BeforeThreadedGenerateData(self) -> "void":
        """
        BeforeThreadedGenerateData(itkIntensityWindowingImageFilterIUC3IUC3 self)

        Process
        to execute before entering the multithreaded section. 
        """
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_BeforeThreadedGenerateData(self)


    def PrintSelf(self, os: 'ostream', indent: 'itkIndent') -> "void":
        """PrintSelf(itkIntensityWindowingImageFilterIUC3IUC3 self, ostream os, itkIndent indent)"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_PrintSelf(self, os, indent)

    InputHasNumericTraitsCheck = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    __swig_destroy__ = _itkIntensityWindowingImageFilterPython.delete_itkIntensityWindowingImageFilterIUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3 *":
        """cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkIntensityWindowingImageFilterIUC3IUC3 *":
        """GetPointer(itkIntensityWindowingImageFilterIUC3IUC3 self) -> itkIntensityWindowingImageFilterIUC3IUC3"""
        return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkIntensityWindowingImageFilterIUC3IUC3

        Create a new object of the class itkIntensityWindowingImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIntensityWindowingImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkIntensityWindowingImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIntensityWindowingImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIntensityWindowingImageFilterIUC3IUC3.Clone = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_Clone, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetOutputMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetOutputMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetOutputMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetWindowMinimum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMinimum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetWindowMaximum = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindowMaximum, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.SetWindowLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_SetWindowLevel, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetWindow = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetWindow, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetLevel = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetLevel, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetScale = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetScale, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetShift = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetShift, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.BeforeThreadedGenerateData = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_BeforeThreadedGenerateData, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.PrintSelf = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_PrintSelf, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_GetPointer, None, itkIntensityWindowingImageFilterIUC3IUC3)
itkIntensityWindowingImageFilterIUC3IUC3_swigregister = _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_swigregister
itkIntensityWindowingImageFilterIUC3IUC3_swigregister(itkIntensityWindowingImageFilterIUC3IUC3)

def itkIntensityWindowingImageFilterIUC3IUC3___New_orig__() -> "itkIntensityWindowingImageFilterIUC3IUC3_Pointer":
    """itkIntensityWindowingImageFilterIUC3IUC3___New_orig__() -> itkIntensityWindowingImageFilterIUC3IUC3_Pointer"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3___New_orig__()

def itkIntensityWindowingImageFilterIUC3IUC3_cast(obj: 'itkLightObject') -> "itkIntensityWindowingImageFilterIUC3IUC3 *":
    """itkIntensityWindowingImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkIntensityWindowingImageFilterIUC3IUC3"""
    return _itkIntensityWindowingImageFilterPython.itkIntensityWindowingImageFilterIUC3IUC3_cast(obj)



