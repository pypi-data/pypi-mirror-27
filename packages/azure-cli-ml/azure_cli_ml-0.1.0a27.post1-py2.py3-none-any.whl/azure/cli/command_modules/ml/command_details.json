{
    "ml service create batch": {
        "title": "Azure ML - ml service create batch - Service Create Batch",
        "cli_command": "ml service create batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_service_create",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "dependencies": {
                "long_form": "",
                "short_form": "-d",
                "required": false,
                "description": "Files and directories required by the service. Multiple dependencies can be specified with additional -d arguments.",
                "action": "append",
                "metavar": "<dependency> [-d...]",
                "default": []
            },
            "driver_file": {
                "long_form": "--driver-file",
                "short_form": "-f",
                "required": true,
                "description": ""
            },
            "title": {
                "long_form": "--title",
                "short_form": "",
                "required": false,
                "description": ""
            },
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "inputs": {
                "long_form": "--in",
                "short_form": "",
                "required": false,
                "description": "Inputs for service to expect",
                "action": "append",
                "metavar": "<input_name>[:<default_value>] [--in=...]",
                "default": []
            },
            "outputs": {
                "long_form": "--out",
                "short_form": "",
                "required": false,
                "description": "Outputs for service to expect",
                "action": "append",
                "metavar": "<output_name>[:<default_value>] [--out=...]",
                "default": []
            },
            "parameters": {
                "long_form": "--param",
                "short_form": "",
                "required": false,
                "description": "Parameters for service to expect.",
                "action": "append",
                "metavar": "<parameter_name>[:<default_value>] [--param=...]",
                "default": []
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service run batch": {
        "title": "Azure ML - ml service run batch - Service Run Batch",
        "cli_command": "ml service run batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_service_run",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "inputs": {
                "long_form": "--in",
                "short_form": "",
                "required": false,
                "description": "inputs for service to expect",
                "action": "append",
                "metavar": "<input_name>[:<default_value>] [--in=...]",
                "default": []
            },
            "outputs": {
                "long_form": "--out",
                "short_form": "",
                "required": false,
                "description": "outputs for service to expect",
                "action": "append",
                "metavar": "<output_name>[:<default_value>] [--out=...]",
                "default": []
            },
            "parameters": {
                "long_form": "--param",
                "short_form": "",
                "required": false,
                "description": "Parameters for service to expect.",
                "action": "append",
                "metavar": "<parameter_name>[:<default_value>] [--param=...]",
                "default": []
            },
            "job_name": {
                "long_form": "",
                "short_form": "-j",
                "required": false,
                "description": "Job name. Defaults to a formatted timestamp (%Y-%m-%d_%H%M%S)."
            },
            "wait_for_completion": {
                "long_form": "",
                "short_form": "-w",
                "required": false,
                "description": "Flag to wait for job synchronously.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service list batch": {
        "title": "Azure ML - ml service list batch - Service List Batch",
        "cli_command": "ml service list batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_service_list",
        "arguments": {
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service show batch": {
        "title": "Azure ML - ml service show batch - Service Show Batch",
        "cli_command": "ml service show batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_service_show",
        "arguments": {
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service delete batch": {
        "title": "Azure ML - ml service delete batch - Service Delete Batch",
        "cli_command": "ml service delete batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_service_delete",
        "arguments": {
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service showjob batch": {
        "title": "Azure ML - ml service showjob batch - Service Show Job Batch",
        "cli_command": "ml service showjob batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_show_job",
        "arguments": {
            "job_name": {
                "long_form": "",
                "short_form": "-j",
                "required": true,
                "description": "Job name."
            },
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service listjobs batch": {
        "title": "Azure ML - ml service listjobs batch - Service List Jobs Batch",
        "cli_command": "ml service listjobs batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_list_jobs",
        "arguments": {
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service canceljob batch": {
        "title": "Azure ML - ml service canceljob batch - Service Cancel Job Batch",
        "cli_command": "ml service canceljob batch",
        "command_function": "azure.cli.command_modules.ml.service.batch#batch_cancel_job",
        "arguments": {
            "job_name": {
                "long_form": "",
                "short_form": "-j",
                "required": true,
                "description": "Job name."
            },
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },



    "ml service create realtime": {
        "title": "Azure ML - ml service create realtime - Service Create Realtime",
        "cli_command": "ml service create realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_create",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "service_name": {
                "long_form": "",
                "short_form": "-n",
                "required": true,
                "description": "Webservice name."
            },
            "app_insights_logging_enabled": {
                "long_form": "--enable-app-insights",
                "short_form": "-l",
                "required": false,
                "description": "Enable app insights. Allowed values: true, false."
            },
            "model_data_collection_enabled": {
                "long_form": "--collect-model-data",
                "short_form": "",
                "required": false,
                "description": "Enable model data collection. Allowed values: true, false."
            },
            "num_replicas": {
                "long_form": "",
                "short_form": "-z",
                "required": false,
                "description": "Number of replicas for a Kubernetes service.",
                "type": "int"
            },
            "image_id": {
                "long_form": "--image-id",
                "short_form": "",
                "required": false,
                "description": "[Required] Image to deploy to the service.",
                "arg_group": "Registered Image"
            },
            "driver_file": {
                "long_form": "",
                "short_form": "-f",
                "required": false,
                "description": "[Required] The code file to be deployed.",
                "metavar": "filename",
                "arg_group": "Unregistered Image"
            },
            "schema_file": {
                "long_form": "",
                "short_form": "-s",
                "required": false,
                "description": "Input and output schema of the web service.",
                "arg_group": "Unregistered Image"
            },
            "target_runtime": {
                "long_form": "",
                "short_form": "-r",
                "required": false,
                "description": "[Required] Runtime of the web service. Valid runtimes are ",
                "arg_group": "Unregistered Image"
            },
            "dependencies": {
                "long_form": "",
                "short_form": "-d",
                "required": false,
                "description": "Files and directories required by the service. Multiple dependencies can be specified with additional -d arguments.",
                "default": [],
                "metavar": "<dependency> [-d...]",
                "arg_group": "Unregistered Image",
                "action": "append"
            },
            "model_files": {
                "long_form": "--model-file",
                "short_form": "-m",
                "required": false,
                "description": "[Required] The model to be deployed. Multiple models can be specified with additional -m arguments",
                "default": [],
                "metavar": "<model> [-m...]",
                "arg_group": "Unregistered Image",
                "action": "append"
            },
            "requirements": {
                "long_form": "",
                "short_form": "-p",
                "required": false,
                "description": "A pip requirements.txt file of package needed by the code file.",
                "metavar": "requirements.txt",
                "arg_group": "Unregistered Image"
            },
            "conda_file": {
                "long_form": "--conda-file",
                "short_form": "-c",
                "required": false,
                "description": "Path to Conda Environment file.",
                "arg_group": "Unregistered Image"
            },
            "context": {
                "arg_type": "ignore_type"
            },
            "autoscale_enabled": {
                "long_form": "--autoscale-enabled",
                "short_form": "",
                "required": false,
                "description": "Enable automatic scaling of service replicas based on request demand. Allowed values: true, false."
            },
            "autoscale_min_replicas": {
                "long_form": "--autoscale-min-replicas",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - sets the minimum number of replicas.",
                "type": "int"
            },
            "autoscale_max_replicas": {
                "long_form": "--autoscale-max-replicas",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - sets the maximum number of replicas.",
                "type": "int"
            },
            "autoscale_target_utilization": {
                "long_form": "--autoscale-target-utilization",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - target utilization of replicas time.",
                "type": "int"
            },
            "autoscale_refresh_period_seconds": {
                "long_form": "--autoscale-refresh-period-seconds",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - the interval of evaluating scaling demand.",
                "type": "int"
            },
            "cpu": {
                "long_form": "--cpu",
                "short_form": "",
                "required": false,
                "description": "Reserved number of CPU cores per service replica (can be fraction)."
            },
            "memory": {
                "long_form": "--memory",
                "short_form": "",
                "required": false,
                "description": "Reserved amount of memory per service replica, in M or G. (ex. 1G, 300M)."
            },
            "replica_max_concurrent_requests": {
                "long_form": "--replica-max-concurrent-requests",
                "short_form": "",
                "required": false,
                "description": "Maximum number of concurrent requests that can be routed to a service replica.",
                "type": "int"
            }
        }
    },
    "ml service list realtime": {
        "title": "Azure ML - ml service list realtime - Service List Realtime",
        "cli_command": "ml service list realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_list",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service show realtime": {
        "title": "Azure ML - ml service show realtime - Service Show Realtime",
        "cli_command": "ml service show realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_show",
        "arguments": {
            "service_name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": false,
                "description": "Webservice name."
            },
            "service_id": {
                "long_form": "--id",
                "short_form": "-i",
                "required": false,
                "description": "The service id to show."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service delete realtime": {
        "title": "Azure ML - ml service delete realtime - Service Delete Realtime",
        "cli_command": "ml service delete realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_delete",
        "arguments": {
            "service_id": {
                "long_form": "--id",
                "short_form": "-i",
                "required": true,
                "description": "The service id to delete."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service run realtime": {
        "title": "Azure ML - ml service run realtime - Service Run Realtime",
        "cli_command": "ml service run realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_run",
        "arguments": {
            "service_id": {
                "long_form": "--id",
                "short_form": "-i",
                "required": true,
                "description": "The service id to score against."
            },
            "input_data": {
                "long_form": "",
                "short_form": "-d",
                "required": false,
                "description": "The data to use for calling the web service.",
                "default": ""
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service update realtime": {
        "title": "Azure ML - ml service update realtime - Service Update Realtime",
        "cli_command": "ml service update realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_update",
        "arguments": {
            "service_id": {
                "long_form": "--id",
                "short_form": "-i",
                "required": true,
                "description": "The service id to update."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "image_id": {
                "long_form": "--image-id",
                "short_form": "",
                "required": false,
                "description": "The image id to update the service with."
            },
            "num_replicas": {
                "long_form": "",
                "short_form": "-z",
                "required": false,
                "description": "Number of replicas for a Kubernetes service.",
                "type": "int"
            },
            "model_data_collection_enabled": {
                "long_form": "--collect-model-data",
                "short_form": "",
                "required": false,
                "description": "Enabled or disable model data collection. Allowed values: true, false. Omit to leave unchanged"
            },
            "app_insights_enabled": {
                "long_form": "--enable-app-insights",
                "short_form": "",
                "required": false,
                "description": "Enabled or disable app insights. Allowed values: true, false. Omit to leave unchanged"
            },
            "context": {
                "arg_type": "ignore_type"
            },
            "autoscale_enabled": {
                "long_form": "--autoscale-enabled",
                "short_form": "",
                "required": false,
                "description": "Enable automatic scaling of service replicas based on request demand. Allowed values: true, false. Omit to leave unchanged."
            },
            "autoscale_min_replicas": {
                "long_form": "--autoscale-min-replicas",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - sets the minimum number of replicas.",
                "type": "int"
            },
            "autoscale_max_replicas": {
                "long_form": "--autoscale-max-replicas",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - sets the maximum number of replicas.",
                "type": "int"
            },
            "autoscale_target_utilization": {
                "long_form": "--autoscale-target-utilization",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - target utilization of replicas time.",
                "type": "int"
            },
            "autoscale_refresh_period_seconds": {
                "long_form": "--autoscale-refresh-period-seconds",
                "short_form": "",
                "required": false,
                "description": "If autoscale is enabled - the interval of evaluating scaling demand.",
                "type": "int"
            },
            "cpu": {
                "long_form": "--cpu",
                "short_form": "",
                "required": false,
                "description": "Reserved number of CPU cores per service replica (can be fraction)."
            },
            "memory": {
                "long_form": "--memory",
                "short_form": "",
                "required": false,
                "description": "Reserved amount of memory per service replica, in M or G. (ex. 1G, 300M)."
            },
            "replica_max_concurrent_requests": {
                "long_form": "--replica-max-concurrent-requests",
                "short_form": "",
                "required": false,
                "description": "Maximum number of concurrent requests that can be routed to a service replica.",
                "type": "int"
            }
        }
    },
    "ml service keys realtime": {
        "title": "Azure ML - ml service keys realtime - Handle Keys",
        "cli_command": "ml service keys realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_keys_handling",
        "arguments": {
            "service_id": {
                "long_form": "--id",
                "short_form": "-i",
                "required": true,
                "description": "Service ID"
            },
            "regen": {
                "long_form": "--regen",
                "short_form": "-r",
                "required": false,
                "description": "Flag to specify to regenerate keys for the specified service",
                "action": "store_true"
            },
            "key": {
                "long_form": "--key",
                "short_form": "-k",
                "required": false,
                "description": "Which key to regenerate, if regen is specified. Options: Primary, Secondary"
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service usage realtime": {
        "title": "Azure ML - ml service usage realtime - Service Usage Details",
        "cli_command": "ml service usage realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_usage",
        "arguments": {
            "service_id": {
                "long_form": "--id",
                "short_form": "-i",
                "required": true,
                "description": "Service ID"
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml service logs realtime": {
        "title": "Azure ML - ml service logs realtime - Service Logs Details",
        "cli_command": "ml service logs realtime",
        "command_function": "azure.cli.command_modules.ml.service.realtime#realtime_service_logs",
        "arguments": {
            "request_id": {
                "long_form": "--request-id",
                "short_form": "-r",
                "required": false,
                "description": "Request Id to filter the logs by"
            },
            "kube_config": {
                "long_form": "--kubeconfig",
                "short_form": "-k",
                "required": false,
                "description": "kubeconfig of the cluster to get logs from"
            },
            "service_id": {
                "long_form": "--id",
                "short_form": "-i",
                "required": false,
                "description": "Service ID to get logs for"
            },
            "max_lines": {
                "long_form": "--max-lines",
                "short_form": "-l",
                "required": false,
                "description": "The maximum number of lines of logs to display. Default: 5000",
                "type": "int"
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },



    "ml model register": {
        "title": "Azure ML - ml model register - Register Model",
        "cli_command": "ml model register",
        "command_function": "azure.cli.command_modules.ml.model#model_register",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "model_path": {
                "long_form": "--model",
                "short_form": "-m",
                "required": true,
                "description": "Model to register."
            },
            "model_name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": true,
                "description": "Name of model to register."
            },
            "tags": {
                "long_form": "--tag",
                "short_form": "-t",
                "required": false,
                "description": "Tags for the model. Multiple tags can be specified with additional -t arguments.",
                "action": "append",
                "default": []
            },
            "description": {
                "long_form": "--description",
                "short_form": "-d",
                "required": false,
                "description": "Description of the model."
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml model show": {
        "title": "Azure ML - ml model show - Show Model",
        "cli_command": "ml model show",
        "command_function": "azure.cli.command_modules.ml.model#model_show",
        "arguments": {
            "model": {
                "long_form": "--model",
                "short_form": "-m",
                "required": true,
                "description": "Name or ID of model to show.",
                "metavar": "model"
            },
            "tag": {
                "long_form": "--tag",
                "short_form": "-t",
                "required": false,
                "description": "If provided, will only show versions of the specified model that have the specified tag."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml model list": {
        "title": "Azure ML - ml model list - Model List",
        "cli_command": "ml model list",
        "command_function": "azure.cli.command_modules.ml.model#model_list",
        "arguments": {
            "tag": {
                "long_form": "--tag",
                "short_form": "-t",
                "required": false,
                "description": "An optional tag to filter the list by."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },



    "ml manifest create": {
        "title": "Azure ML - ml manifest create - Create Manifest",
        "cli_command": "ml manifest create",
        "command_function": "azure.cli.command_modules.ml.manifest#manifest_create",
        "arguments": {
            "manifest_name": {
                "long_form": "--manifest-name",
                "short_form": "-n",
                "required": true,
                "description": "Name of the manifest to create"
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "driver_file": {
                "long_form": "",
                "short_form": "-f",
                "required": true,
                "description": "The code file to be deployed."
            },
            "manifest_description": {
                "long_form": "--manifest-description",
                "short_form": "",
                "required": false,
                "description": "Description of the manifest."
            },
            "schema_file": {
                "long_form": "--schema-file",
                "short_form": "-s",
                "required": false,
                "description": "Schema file to add to the manifest."
            },
            "dependencies": {
                "long_form": "--dependency",
                "short_form": "-d",
                "required": false,
                "description": "Files and directories required by the service. Multiple dependencies can be specified with additional -d arguments.",
                "default": [],
                "action": "append"
            },
            "runtime": {
                "long_form": "",
                "short_form": "-r",
                "required": true,
                "description": "Runtime of the web service. Valid runtimes are "
            },
            "requirements": {
                "long_form": "",
                "short_form": "-p",
                "required": false,
                "description": "A pip requirements.txt file needed by the code file.",
                "metavar": "requirements.txt"
            },
            "conda_file": {
                "long_form": "--conda-file",
                "short_form": "-c",
                "required": false,
                "description": "Path to Conda Environment file."
            },
            "model_ids": {
                "long_form": "--model-id",
                "short_form": "-i",
                "required": false,
                "description": "[Required] Id of previously registered model to add to manifest. Multiple models can be specified with additional -i arguments.",
                "arg_group": "Registered Model",
                "metavar": "model_id [--model-id...]",
                "default": [],
                "action": "append"
            },
            "model_files": {
                "long_form": "--model-file",
                "short_form": "-m",
                "required": false,
                "description": "[Required] The model to be deployed. Multiple models can be specified with additional -m arguments",
                "default": [],
                "metavar": "<model> [-m...]",
                "arg_group": "Unregistered Model",
                "action": "append"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml manifest show": {
        "title": "Azure ML - ml manifest show - Show Manifest",
        "cli_command": "ml manifest show",
        "command_function": "azure.cli.command_modules.ml.manifest#manifest_show",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "manifest_id": {
                "long_form": "--manifest-id",
                "short_form": "-i",
                "required": true,
                "description": "Id of manifest to show."
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml manifest list": {
        "title": "Azure ML - ml manifest list - Manifest List",
        "cli_command": "ml manifest list",
        "command_function": "azure.cli.command_modules.ml.manifest#manifest_list",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },



    "ml image create": {
        "title": "Azure ML - ml image create - Create Image",
        "cli_command": "ml image create",
        "command_function": "azure.cli.command_modules.ml.image#image_create",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "image_name": {
                "long_form": "--image-name",
                "short_form": "-n",
                "required": true,
                "description": "The name of the image being created"
            },
            "image_description": {
                "long_form": "--image-description",
                "short_form": "",
                "required": false,
                "description": "Description of the image."
            },
            "manifest_id": {
                "long_form": "--manifest-id",
                "short_form": "",
                "required": false,
                "description": "[Required] Id of previously registered manifest to use in image creation.",
                "arg_group": "Registered Manifest"
            },
            "driver_file": {
                "long_form": "",
                "short_form": "-f",
                "required": false,
                "description": "[Required] The code file to be deployed.",
                "arg_group": "Unregistered Manifest"
            },
            "schema_file": {
                "long_form": "--schema-file",
                "short_form": "-s",
                "required": false,
                "description": "Schema file to add to the manifest.",
                "arg_group": "Unregistered Manifest"
            },
            "dependencies": {
                "long_form": "--dependency",
                "short_form": "-d",
                "required": false,
                "description": "Files and directories required by the service. Multiple dependencies can be specified with additional -d arguments.",
                "default": [],
                "action": "append",
                "arg_group": "Unregistered Manifest"
            },
            "runtime": {
                "long_form": "",
                "short_form": "-r",
                "required": false,
                "description": "[Required] Runtime of the web service. Valid runtimes are ",
                "arg_group": "Unregistered Manifest"
            },
            "requirements": {
                "long_form": "",
                "short_form": "-p",
                "required": false,
                "description": "A pip requirements.txt file needed by the code file.",
                "metavar": "requirements.txt",
                "arg_group": "Unregistered Manifest"
            },
            "conda_file": {
                "long_form": "--conda-file",
                "short_form": "-c",
                "required": false,
                "description": "Path to Conda Environment file.",
                "arg_group": "Unregistered Manifest"
            },
            "model_files": {
                "long_form": "--model-file",
                "short_form": "-m",
                "required": false,
                "description": "[Required] The model to be deployed. Multiple models can be specified with additional -m arguments",
                "default": [],
                "metavar": "<model> [-m...]",
                "arg_group": "Unregistered Manifest",
                "action": "append"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml image show": {
        "title": "Azure ML - ml image show - Show Image",
        "cli_command": "ml image show",
        "command_function": "azure.cli.command_modules.ml.image#image_show",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "image_id": {
                "long_form": "--image-id",
                "short_form": "-i",
                "required": true,
                "description": "Id of image to show."
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml image list": {
        "title": "Azure ML - ml image list - Image List",
        "cli_command": "ml image list",
        "command_function": "azure.cli.command_modules.ml.image#image_list",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml image usage": {
        "title": "Azure ML - ml image usage - Image Usage Details",
        "cli_command": "ml image usage",
        "command_function": "azure.cli.command_modules.ml.image#image_usage",
        "arguments": {
            "image_id": {
                "long_form": "--image-id",
                "short_form": "-i",
                "required": true,
                "description": "Id of image to show."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },



    "ml account modelmanagement create": {
        "title": "Azure ML - ml account modelmanagement create - Create Model Management Account",
        "cli_command": "ml account modelmanagement create",
        "command_function": "azure.cli.command_modules.ml.model_management_account#model_management_account_create",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": true,
                "description": "Resource group to create the model management account in."
            },
            "name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": true,
                "description": "Name of the model management account."
            },
            "location": {
                "long_form": "--location",
                "short_form": "-l",
                "required": true,
                "description": "Resource location."
            },
            "sku_name": {
                "long_form": "--sku-name",
                "short_form": "",
                "required": false,
                "description": "SKU name. Valid names are ",
                "default": "S1"
            },
            "sku_instances": {
                "long_form": "--sku-instances",
                "short_form": "",
                "required": false,
                "type": "int",
                "description": "Number of instances of the selected SKU. Must be between 1 and 16 inclusive.",
                "default": 1
            },
            "tags": {
                "long_form": "--tags",
                "short_form": "-t",
                "required": false,
                "description": "Tags for the model management account.",
                "default": "{}"
            },
            "description": {
                "long_form": "--description",
                "short_form": "-d",
                "required": false,
                "description": "Description of the model management account.",
                "default": ""
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml account modelmanagement show": {
        "title": "Azure ML - ml account modelmanagement show - Show Model Management Account",
        "cli_command": "ml account modelmanagement show",
        "command_function": "azure.cli.command_modules.ml.model_management_account#model_management_account_show",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": false,
                "description": "Resource group containing the model management account to show. If ommited the currently set model management account will be shown."
            },
            "name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": false,
                "description": "Name of model management account to show. If ommited the currently set model management account will be shown."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml account modelmanagement list": {
        "title": "Azure ML - ml account modelmanagement list - Model Management Account List",
        "cli_command": "ml account modelmanagement list",
        "command_function": "azure.cli.command_modules.ml.model_management_account#model_management_account_list",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": false,
                "description": "List model management accounts in this resource group. If omitted, will list all model management accounts in current subscription."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml account modelmanagement update": {
        "title": "Azure ML - ml account modelmanagement update - Model Management Account Update",
        "cli_command": "ml account modelmanagement update",
        "command_function": "azure.cli.command_modules.ml.model_management_account#model_management_account_update",
        "arguments": {
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": true,
                "description": "Resource group containing the model management account to update."
            },
            "name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": true,
                "description": "Name of model management account to update."
            },
            "sku_name": {
                "long_form": "--sku-name",
                "short_form": "",
                "required": false,
                "description": "SKU name. Valid names are "
            },
            "sku_instances": {
                "long_form": "--sku-instances",
                "short_form": "",
                "required": false,
                "type": "int",
                "description": "Number of instances of the selected SKU. Must be between 1 and 16 inclusive."
            },
            "tags": {
                "long_form": "--tags",
                "short_form": "-t",
                "required": false,
                "description": "Tags for the model management account.",
                "default": "{}"
            },
            "description": {
                "long_form": "--description",
                "short_form": "-d",
                "required": false,
                "description": "Description of the model management account.",
                "default": ""
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml account modelmanagement delete": {
        "title": "Azure ML - ml account modelmanagement delete - Model Management Account Delete",
        "cli_command": "ml account modelmanagement delete",
        "command_function": "azure.cli.command_modules.ml.model_management_account#model_management_account_delete",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": true,
                "description": "Resource group containing the model management account to delete."
            },
            "name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": true,
                "description": "Name of the model management account to delete."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml account modelmanagement set": {
        "title": "Azure ML - ml account modelmanagement set - Model Management Account Set",
        "cli_command": "ml account modelmanagement set",
        "command_function": "azure.cli.command_modules.ml.model_management_account#model_management_account_set",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": true,
                "description": "Resource group containing the model management account to set."
            },
            "name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": true,
                "description": "Name of model management account to set."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },



    "ml env local": {
        "title": "Azure ML - ml env local - Run in local mode",
        "cli_command": "ml env local",
        "command_function": "azure.cli.command_modules.ml.env#env_local",
        "arguments": {
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml env cluster": {
        "title": "Azure ML - ml env cluster - Run in cluster mode",
        "cli_command": "ml env cluster",
        "command_function": "azure.cli.command_modules.ml.env#env_cluster",
        "arguments": {
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml env setup": {
        "title": "Azure ML - ml env setup - Compute Create",
        "cli_command": "ml env setup",
        "command_function": "azure.cli.command_modules.ml.env#env_setup",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": false,
                "description": "Resource group in which to create compute resource. Will be created if it does not exist. If not provided, resource group will be created with 'rg' appended to 'name.'"
            },
            "name": {
                "long_form": "--name",
                "short_form": "-n",
                "required": true,
                "description": "Name of environment to provision."
            },
            "cluster": {
                "long_form": "--cluster",
                "short_form": "-c",
                "required": false,
                "action": "store_true",
                "description": "Flag to provision ACS cluster. Defaults to false."
            },
            "yes": {
                "long_form": "--yes",
                "short_form": "-y",
                "required": false,
                "action": "store_true",
                "description": "Flag to answer 'yes' to any prompts. Command will fail if user is not logged in."
            },
            "location": {
                "long_form": "--location",
                "short_form": "-l",
                "required": true,
                "description": "Location for environment resources."
            },
            "service_principal_app_id": {
                "long_form": "--service-principal-app-id",
                "short_form": "-a",
                "required": false,
                "description": "App ID of service principal to use for configuring ML compute."
            },
            "service_principal_password": {
                "long_form": "--service-principal-password",
                "short_form": "-p",
                "required": false,
                "description": "Password associated with service principal."
            },
            "tenant": {
                "long_form": "--tenant",
                "short_form": "-t",
                "required": false,
                "description": "Tenant ID associated with service principal."
            },
            "agent_count": {
                "long_form": "--agent-count",
                "short_form": "-z",
                "required": false,
                "description": "Number of agents to provision in the ACS cluster. Default: 2.",
                "type": "int"
            },
            "cert_pem": {
                "long_form": "--cert-pem",
                "required": false,
                "description": "Path to .pem file with certificate bytes."
            },
            "key_pem": {
                "long_form": "--key-pem",
                "required": false,
                "description": "Path to .pem file with certificate key."
            },
            "cert_cname": {
                "long_form": "--cert-cname",
                "required": false,
                "description": "CNAME of certificate."
            },
            "storage_arm_id": {
                "long_form": "--storage",
                "short_form": "-s",
                "required": false,
                "description": "ARM ID of storage account to associate with this environment."
            },
            "acr_arm_id": {
                "long_form": "--acr",
                "short_form": "-r",
                "required": false,
                "description": "ARM ID of ACR to associate with this environment."
            },
            "master_count": {
                "long_form": "--master-count",
                "short_form": "-m",
                "required": false,
                "type": "int",
                "description": "Number of master nodes to provision in the ACS cluster. Acceptable values: 1, 3, 5",
                "default": 1
            },
            "agent_vm_size": {
                "long_form": "--agent-vm-size",
                "required": false,
                "description": "The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created. Refer to https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for the possible VM sizes. Default: Standard_D3_v2"
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml env list": {
        "title": "Azure ML - ml env list - Env List",
        "cli_command": "ml env list",
        "command_function": "azure.cli.command_modules.ml.compute#compute_list",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": false,
                "description": "List environments in this resource group. If omitted, will list all environments in current subscription."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml env delete": {
        "title": "Azure ML - ml env delete - Env Delete",
        "cli_command": "ml env delete",
        "command_function": "azure.cli.command_modules.ml.compute#compute_delete",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": true,
                "description": "Resource group in which to delete compute resource."
            },
            "cluster_name": {
                "long_form": "--cluster-name",
                "short_form": "-n",
                "required": true,
                "description": "Name of cluster to delete."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml env show": {
        "title": "Azure ML - ml env show - Env Show",
        "cli_command": "ml env show",
        "command_function": "azure.cli.command_modules.ml.compute#compute_show",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": false,
                "description": "Resource group of resource to show."
            },
            "cluster_name": {
                "long_form": "--cluster-name",
                "short_form": "-n",
                "required": false,
                "description": "Name of resource to show."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml env set": {
        "title": "Azure ML - ml env set - Env Set",
        "cli_command": "ml env set",
        "command_function": "azure.cli.command_modules.ml.compute#compute_set",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": true,
                "description": "Resource group of compute resource to set as active resource."
            },
            "cluster_name": {
                "long_form": "--cluster-name",
                "short_form": "-n",
                "required": true,
                "description": "Name of cluster to provision."
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "disable_dashboard": {
                "long_form": "--disable-dashboard",
                "required": false,
                "description": "argparse.SUPPRESS",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
        }
    },
    "ml env get-credentials": {
        "title": "Azure ML - ml env get-credentials - Env get-credentials",
        "cli_command": "ml env get-credentials",
        "command_function": "azure.cli.command_modules.ml.compute#get_credentials",
        "arguments": {
            "resource_group": {
                "long_form": "--resource-group",
                "short_form": "-g",
                "required": true,
                "description": "Resource group compute resource to retrieve keys for."
            },
            "cluster_name": {
                "long_form": "--cluster-name",
                "short_form": "-n",
                "required": true,
                "description": "Name of compute resource to retrieve keys for."
            },
            "install_kube_config": {
              "long_form": "--install-kube-config",
              "short_form": "-i",
              "required": false,
              "description": "Flag to save Kubernetes configuration to file. If value not provided, will install to ~/.kube/config.",
              "nargs": "?",
              "default": ""
            },
            "verb": {
                "long_form": "",
                "short_form": "-v",
                "required": false,
                "description": "Verbosity flag.",
                "action": "store_true"
            },
            "context": {
                "arg_type": "ignore_type"
            }
		}
	}
}