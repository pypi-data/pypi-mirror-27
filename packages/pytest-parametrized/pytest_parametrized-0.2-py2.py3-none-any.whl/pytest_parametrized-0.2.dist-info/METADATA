Metadata-Version: 2.0
Name: pytest-parametrized
Version: 0.2
Summary: Pytest plugin for parametrizing tests with default iterables.
Home-page: https://bitbucket.org/coady/pytest-parametrized
Author: Aric Coady
Author-email: aric.coady@gmail.com
License: Apache Software License
Description-Content-Type: UNKNOWN
Keywords: pytest parametrize fixture
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Pytest
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=2.7
Requires-Dist: pytest

.. image:: https://img.shields.io/pypi/v/pytest-parametrized.svg
   :target: https://pypi.python.org/pypi/pytest-parametrized/
.. image:: https://img.shields.io/pypi/pyversions/pytest-parametrized.svg
.. image:: https://img.shields.io/pypi/status/pytest-parametrized.svg
.. image:: https://img.shields.io/travis/coady/pytest-parametrized.svg
   :target: https://travis-ci.org/coady/pytest-parametrized
.. image:: https://img.shields.io/codecov/c/github/coady/pytest-parametrized.svg
   :target: https://codecov.io/github/coady/pytest-parametrized

`Pytest plugin`_ for parametrizing tests with default iterables,
providing alternative syntax for `pytest.mark.parametrize`.

Usage
=========================
Decorate tests with iterable default values.

.. code-block:: python

   @pytest.parametrized
   def test(name=values, ...):
      """test single parametrized arg with each value"""

   @pytest.parametrized.zip
   def test(name=values, name1=values1, ...):
      """test parametrized args with zipped values"""

   @pytest.parametrized.product
   def test(name=values, name1=values1, ...):
      """test parametrized args with cartesian product of values"""

Simple parametrized fixtures also supported, for easier reuse.

.. code-block:: python

   fixture_name = pytest.parametrized.fixture(*params)

Installation
=========================
::

   $ pip install pytest-parametrized

Require plugin as usual in `conftest.py`.

.. code-block:: python

   pytest_plugins = 'parametrized', ...

Tests
=========================
100% branch coverage. ::

   $ pytest [--cov]

Changes
=========================
0.2

* ``fixture`` keyword options

.. _Pytest plugin: https://docs.pytest.org/en/latest/plugins.html


