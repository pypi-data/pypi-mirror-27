.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "AGGREGATE6" "7" "November 2017" "" ""
aggregate6 will compress an unsorted list of IP prefixes (both IPv4 and IPv6)\.
.
.SH "DESCRIPTION"
Takes a list of IPv6 prefixes in conventional format on stdin, and performs two optimisations to attempt to reduce the length of the prefix list\. The first optimisation is to remove any supplied prefixes which are superfluous because they are already included in another supplied prefix\. For example, \fB2001:67c:208c:10::/64\fR would be removed if \fB2001:67c:208c::/48\fR was also supplied\.
.
.P
The second optimisation identifies adjacent prefixes that can be combined under a single, shorter\-length prefix\. For example, \fB2001:67c:208c::/48\fR and \fB2001:67c:208d::/48\fR can be combined into the single prefix \fB2001:67c:208c::/47\fR\.
.
.SH "INSTALLATION"
.
.nf

$ pip install aggregate6
.
.fi
.
.SH "CLI USAGE"
Either provide the list of IPv4 and IPv prefixes on STDIN, or give filenames containing lists of IPv6 prefixes as arguments\.
.
.IP "" 4
.
.nf

$ # via STDIN
$ cat file_with_list_of_prefixes | aggregate6
   \.\.\. output \.\.\.

$ # with a filename as argument
$ aggregate6 file_with_list_of_prefixes [ \.\.\. optional_other_prefix_lists ]
   \.\.\. output \.\.\.

$ # Whitespace separated works too
$ echo 2001:67c:208c::/48 2000::/3 | aggregate6
2000::/3

$ # You can combine IPv4 and IPv6
$ echo 10\.0\.0\.0/16 10\.0\.0\.0/24 2000::/3 | aggregate6
10\.0\.0\.0/16
2000::/3

$ # Or display only a specific AFI
$ echo 10\.0\.0\.0/16 10\.0\.0\.0/24 2000::/3 | aggregate6 \-4
10\.0\.0\.0/16
.
.fi
.
.IP "" 0
.
.P
See \fBaggregate6 \-h\fR for a full list of options\.
.
.SH "LIBRARY USAGE"
.
.nf

>>> import from aggregate6 import aggregate
>>> aggregate(["10\.0\.0\.0/8", "10\.0\.0\.0/24"])
[\'10\.0\.0\.0/8\']
>>>
.
.fi
.
.SH "BUGS"
Please report bugs at https://github\.com/job/aggregate6/issues
.
.SH "AUTHOR"
Job Snijders \fIjob@instituut\.net\fR
